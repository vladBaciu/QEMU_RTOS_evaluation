
f407-disc-freertos.elf:     file format elf32-littlearm
f407-disc-freertos.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000189

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00003ff7 memsz 0x00003ff7 flags rwx
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x08003ff8 align 2**16
         filesz 0x00000090 memsz 0x00000090 flags rw-
    LOAD off    0x00000090 vaddr 0x20000090 paddr 0x20000090 align 2**16
         filesz 0x00000000 memsz 0x00002b64 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .isr_vector     000003fe  08000000  08000000  00010000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .inits          00000028  08000400  08000400  00010400  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .data           00000090  20000000  08003ff8  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  3 .data_CCMRAM    00000000  10000000  10000000  00020090  2**2  CONTENTS
  4 .bss            00002a64  20000090  20000090  00020090  2**2  ALLOC
  5 .text           00003bc7  08000430  08000430  00010430  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .noinit         00000000  20002af4  20002af4  00020090  2**2  CONTENTS
  7 ._check_stack   00000100  20002af4  20002af4  00020090  2**2  ALLOC
  8 .comment        0000004d  00000000  00000000  00020090  2**0  CONTENTS, READONLY
  9 .ARM.attributes 0000002c  00000000  00000000  000200dd  2**0  CONTENTS, READONLY
 10 .debug_aranges  00000970  00000000  00000000  00020109  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_info     0000cf50  00000000  00000000  00020a79  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_abbrev   00002a92  00000000  00000000  0002d9c9  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line     0000fe2c  00000000  00000000  0003045b  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_frame    00001a94  00000000  00000000  00040288  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str      000a5698  00000000  00000000  00041d1c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_loc      00006da0  00000000  00000000  000e73b4  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges   000009c8  00000000  00000000  000ee154  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro    0001c089  00000000  00000000  000eeb1c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
08000400 l    d  .inits	00000000 .inits
20000000 l    d  .data	00000000 .data
10000000 l    d  .data_CCMRAM	00000000 .data_CCMRAM
20000090 l    d  .bss	00000000 .bss
08000430 l    d  .text	00000000 .text
20002af4 l    d  .noinit	00000000 .noinit
20002af4 l    d  ._check_stack	00000000 ._check_stack
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    df *ABS*	00000000 vectors_stm32f4xx.c
00000000 l    df *ABS*	00000000 _startup.c
20000090 l     O .bss	00000004 __bss_begin_guard
20002af0 l     O .bss	00000004 __bss_end_guard
20000000 l     O .data	00000004 __data_begin_guard
2000008c l     O .data	00000004 __data_end_guard
00000000 l    df *ABS*	00000000 exception_handlers.c
00000000 l    df *ABS*	00000000 FreeRTOS_helper.c
00000000 l    df *ABS*	00000000 _syscalls.c
200000a0 l     O .bss	00000001 name.0
20000004 l     O .data	00000008 argv.1
00000000 l    df *ABS*	00000000 system_stm32f4xx.c
00000000 l    df *ABS*	00000000 heap_2.c
080017cc l     F .text	0000002c prvHeapInit
20000134 l     O .bss	00002800 ucHeap
20002934 l     O .bss	00000008 xEnd
2000293c l     O .bss	00000004 xHeapHasBeenInitialised.0
20002940 l     O .bss	00000008 xStart
20000020 l     O .data	00000004 xFreeBytesRemaining
00000000 l    df *ABS*	00000000 port.c
080018dc l     F .text	0000001a prvPortStartFirstTask
08001968 l     F .text	00000024 prvTaskExitError
0800193c l       .text	00000000 pxCurrentTCBConst2
08001a44 l       .text	00000000 pxCurrentTCBConst
20002948 l     O .bss	00000001 ucMaxSysCallPriority
2000294c l     O .bss	00000004 ulMaxPRIGROUPValue
20002950 l     O .bss	00000004 ulStoppedTimerCompensation
20002954 l     O .bss	00000004 ulTimerCountsForOneTick
20002958 l     O .bss	00000004 xMaximumPossibleSuppressedTicks
20000024 l     O .data	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 impure.c
2000002c l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 stm32f4xx_hal.c
20000094 l     O .bss	00000004 uwTick
00000000 l    df *ABS*	00000000 stm32f4xx_hal_cortex.c
00000000 l    df *ABS*	00000000 stm32f4xx_hal_gpio.c
00000000 l    df *ABS*	00000000 stm32f4xx_hal_rcc.c
00000000 l    df *ABS*	00000000 _exit.c
00000000 l    df *ABS*	00000000 _sbrk.c
20000098 l     O .bss	00000004 current_heap_end.0
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 Trace.c
200000a4 l     O .bss	00000080 buf.0
00000000 l    df *ABS*	00000000 trace_impl.c
080012b4 l     F .text	00000060 _trace_write_semihosting_debug
00000000 l    df *ABS*	00000000 _initialize_hardware.c
00000000 l    df *ABS*	00000000 BlinkLed.c
00000000 l    df *ABS*	00000000 _initialize_hardware.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
08001d18 l     F .text	0000001e prvIsQueueFull
08001d36 l     F .text	0000001a prvIsQueueEmpty
08001d50 l     F .text	0000007c prvCopyDataToQueue
08001dcc l     F .text	00000024 prvCopyDataFromQueue
08001df0 l     F .text	0000006a prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
0800236c l     F .text	00000030 prvGetExpectedIdleTime
0800239c l     F .text	0000002c prvResetNextTaskUnblockTime
080023c8 l     F .text	00000040 prvTaskIsTaskSuspended
08002408 l     F .text	00000012 prvDeleteTCB
0800241a l     F .text	0000003c prvAllocateTCBAndStack
08002456 l     F .text	00000068 prvInitialiseTCBVariables
080024c0 l     F .text	00000068 prvInitialiseTaskLists
08002528 l     F .text	00000054 prvAddCurrentTaskToDelayedList
08002a2c l     F .text	0000005c prvIdleTask
080029d0 l     F .text	0000005c prvCheckTasksWaitingTermination
200029b0 l     O .bss	00000004 pxDelayedTaskList
200029b4 l     O .bss	00000004 pxOverflowDelayedTaskList
200029b8 l     O .bss	00000064 pxReadyTasksLists
20002a1c l     O .bss	00000004 uxCurrentNumberOfTasks
20002a20 l     O .bss	00000004 uxPendedTicks
20002a24 l     O .bss	00000004 uxSchedulerSuspended
20002a28 l     O .bss	00000004 uxTaskNumber
20002a2c l     O .bss	00000004 uxTasksDeleted
20002a30 l     O .bss	00000004 uxTopReadyPriority
20002a34 l     O .bss	00000014 xDelayedTaskList1
20002a48 l     O .bss	00000014 xDelayedTaskList2
20002a5c l     O .bss	00000004 xNextTaskUnblockTime
20002a60 l     O .bss	00000004 xNumOfOverflows
20002a64 l     O .bss	00000014 xPendingReadyList
20002a78 l     O .bss	00000004 xSchedulerRunning
20002a7c l     O .bss	00000014 xSuspendedTaskList
20002a90 l     O .bss	00000014 xTasksWaitingTermination
20002aa4 l     O .bss	00000004 xTickCount
20002aa8 l     O .bss	00000004 xYieldPending
08003f88 l     O .text	00000014 ucExpectedStackBytes.0
00000000 l    df *ABS*	00000000 timers.c
08002f44 l     F .text	00000020 prvGetNextExpireTime
08002f64 l     F .text	00000048 prvInsertTimerInActiveList
08002fac l     F .text	00000074 prvCheckForValidListAndQueue
08003310 l     F .text	00000016 prvTimerTask
080030c8 l     F .text	00000078 prvSwitchTimerLists
08003140 l     F .text	0000002c prvSampleTimeNow
0800316c l     F .text	00000060 prvProcessExpiredTimer
080031cc l     F .text	00000054 prvProcessTimerOrBlockTask
08003220 l     F .text	000000f0 prvProcessReceivedCommands
20002aac l     O .bss	00000004 pxCurrentTimerList
20002ab0 l     O .bss	00000004 pxOverflowTimerList
20002ab4 l     O .bss	00000014 xActiveTimerList1
20002ac8 l     O .bss	00000014 xActiveTimerList2
20002adc l     O .bss	00000004 xLastTime.0
20002ae0 l     O .bss	00000004 xTimerQueue
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 
08000428 l       .inits	00000000 __fini_array_end
08000428 l       .inits	00000000 __fini_array_start
08000428 l       .inits	00000000 __init_array_end
08000428 l       .inits	00000000 __preinit_array_end
08000428 l       .inits	00000000 __init_array_start
08000428 l       .inits	00000000 __preinit_array_start
080003e4  w    F .isr_vector	00000004 RTC_Alarm_IRQHandler
08003c90 g     F .text	00000010 _malloc_usable_size_r
080003e4  w    F .isr_vector	00000004 HASH_RNG_IRQHandler
08003d38 g     O .text	00000010 APBAHBPrescTable
080003e4  w    F .isr_vector	00000004 EXTI2_IRQHandler
080003e4  w    F .isr_vector	00000004 TIM8_CC_IRQHandler
08001334 g     F .text	000000f4 dumpExceptionStack
080003cc  w    F .isr_vector	00000004 DebugMon_Handler
20000128 g     O .bss	00000004 it2
20000000 g       .data	00000000 __data_start__
080019d4 g     F .text	00000030 vPortExitCritical
2001fc00 g       *ABS*	00000000 _Heap_Limit
2000012c g     O .bss	00000004 taskBHandle
08000428 g       .inits	00000000 __bss_regions_array_end
080003e4  w    F .isr_vector	00000004 TIM1_CC_IRQHandler
080004e8 g     F .text	00000088 HAL_NVIC_SetPriority
080003e4  w    F .isr_vector	00000004 DMA2_Stream5_IRQHandler
080002c2  w    F .isr_vector	00000014 HardFault_Handler
08002324 g     F .text	00000046 vQueueWaitForMessageRestricted
08001956 g     F .text	00000010 ulPortSetInterruptMask
0800131c  w    F .text	00000018 __initialize_hardware_early
08002d84 g     F .text	0000003c eTaskConfirmSleepModeStatus
08000000 g       *ABS*	00000000 __vectors_start__
080003e4  w    F .isr_vector	00000004 DMA1_Stream5_IRQHandler
08003c84 g     F .text	0000000c __malloc_unlock
080003e8 g     F .isr_vector	00000016 SysTick_Handler
080008cc g     F .text	00000038 HAL_GPIO_WritePin
080003e4  w    F .isr_vector	00000004 PVD_IRQHandler
080003e4  w    F .isr_vector	00000004 SDIO_IRQHandler
08003a90 g     F .text	00000034 memmove
080003e4  w    F .isr_vector	00000004 TAMP_STAMP_IRQHandler
08003ff8 g       *ABS*	00000000 _sidata
080011a8 g     F .text	00000038 HAL_RCC_GetHCLKFreq
08001a04 g     F .text	00000044 PendSV_Handler
0800205c g     F .text	000000b0 xQueueGenericSendFromISR
080002be  w    F .isr_vector	00000004 NMI_Handler
08003ff8 g       .data	00000000 __exidx_end
080003e4  w    F .isr_vector	00000004 CAN2_RX1_IRQHandler
080003e4  w    F .isr_vector	00000004 EXTI3_IRQHandler
0800110c  w    F .text	0000009c HAL_RCC_GetSysClockFreq
08003328 g     F .text	0000000c __errno
08003ff8 g       .data	00000000 __etext
20002af4 g       .noinit	00000000 _Heap_Begin
200029ac g     O .bss	00000004 pxCurrentTCB
080003e4  w    F .isr_vector	00000004 TIM8_TRG_COM_TIM14_IRQHandler
0800124c g     F .text	00000014 assert_failed
08000430  w    F .text	00000002 HAL_MspInit
080003e4  w    F .isr_vector	00000004 TIM1_UP_TIM10_IRQHandler
2000009c g     O .bss	00000004 errno
08003ff8 g       .data	00000000 _etext
20000090 g       .bss	00000000 _sbss
2001fc00 g       *ABS*	00000000 __Main_Stack_Limit
080003e4  w    F .isr_vector	00000004 TIM8_UP_TIM13_IRQHandler
080003e4  w    F .isr_vector	00000004 I2C3_ER_IRQHandler
080005d4 g     F .text	000002f8 HAL_GPIO_Init
08001260 g     F .text	00000034 trace_printf
08001b98 g     F .text	000000a0 xPortStartScheduler
08003354 g     F .text	0000001c memcpy
08002b5c g     F .text	00000074 vTaskPlaceOnEventList
0800257c g     F .text	0000011c xTaskGenericCreate
080034bc g     F .text	00000200 _svfprintf_r
08001b64  w    F .text	00000034 vPortSetupTimerInterrupt
08001a48 g     F .text	00000020 xPortSysTickHandler
08001760 g     F .text	0000006c EXTI0_IRQHandler
080003e4  w    F .isr_vector	00000004 I2C2_EV_IRQHandler
20002af4 g       .noinit	00000000 _noinit
080003e4  w    F .isr_vector	00000004 DMA1_Stream2_IRQHandler
080003e4  w    F .isr_vector	00000004 CAN1_RX0_IRQHandler
0800189c g     F .text	00000040 vPortFree
080003e4  w    F .isr_vector	00000004 FPU_IRQHandler
2000001c g     O .data	00000004 SystemCoreClock
080003e4  w    F .isr_vector	00000004 OTG_HS_WKUP_IRQHandler
08001c38 g     F .text	00000058 vPortValidateInterruptPriority
20000130 g     O .bss	00000004 xSemaphore
08000380  w    F .isr_vector	00000014 UsageFault_Handler
080033e8 g     F .text	0000001c vsnprintf
08001cac g     F .text	00000016 vListInsertEnd
080003e4  w    F .isr_vector	00000004 CAN2_SCE_IRQHandler
080003e4  w    F .isr_vector	00000004 DMA2_Stream2_IRQHandler
20000090 g       .bss	00000000 __bss_start__
20000000 g       .data	00000000 _sdata
080003e4  w    F .isr_vector	00000004 SPI1_IRQHandler
08003c58 g     F .text	00000020 _sbrk_r
080003e4  w    F .isr_vector	00000004 TIM6_DAC_IRQHandler
08001ca6 g     F .text	00000006 vListInitialiseItem
080003e4  w    F .isr_vector	00000004 TIM1_BRK_TIM9_IRQHandler
080003e4  w    F .isr_vector	00000004 DCMI_IRQHandler
0800156c g     F .text	00000098 SystemClock_Config
080003e4  w    F .isr_vector	00000004 CAN2_RX0_IRQHandler
2000295c g     O .bss	00000050 xQueueRegistry
08001528 g     F .text	00000040 blink_led_init
080019cc g     F .text	00000006 vPortClearInterruptMask
08000570 g     F .text	00000028 HAL_SYSTICK_Config
08003ff8 g       .data	00000000 __exidx_start
080003e4  w    F .isr_vector	00000004 DMA2_Stream3_IRQHandler
08003c0c g     F .text	0000004c _realloc_r
00000400 g       *ABS*	00000000 __Main_Stack_Size
080002d6  w    F .isr_vector	0000005e HardFault_Handler_C
080011e4  w    F .text	00000014 abort
080011f8 g     F .text	00000044 _sbrk
080017f8 g     F .text	000000a4 pvPortMalloc
080003e4  w    F .isr_vector	00000004 USART6_IRQHandler
0800123c  w    F .text	00000010 __initialize_args
08001c90 g     F .text	00000016 vListInitialise
0800034c  w    F .isr_vector	00000034 BusFault_Handler_C
080003e4  w    F .isr_vector	00000004 USART3_IRQHandler
08002794 g     F .text	0000000c xTaskGetTickCount
08001f24 g     F .text	00000138 xQueueGenericSend
20002af4 g       .bss	00000000 _ebss
080002b8 g     F .isr_vector	00000006 Reset_Handler
20000124 g     O .bss	00000004 it1
080033e8 g     F .text	0000001c vsniprintf
080003e4  w    F .isr_vector	00000004 CAN1_RX1_IRQHandler
08001614 g     F .text	00000080 taskB
08002e80 g     F .text	000000a8 xTaskPriorityDisinherit
080003e4  w    F .isr_vector	00000004 UART5_IRQHandler
20002aec g     O .bss	00000001 __lock___malloc_recursive_mutex
08001604 g     F .text	00000010 __initialize_hardware
080003e4  w    F .isr_vector	00000004 DMA2_Stream0_IRQHandler
0800045c g     F .text	00000034 HAL_Init
08002c44 g     F .text	00000090 xTaskRemoveFromEventList
080003e4  w    F .isr_vector	00000004 TIM4_IRQHandler
080003e4  w    F .isr_vector	00000004 I2C1_EV_IRQHandler
08003ca2 g     F .text	00000002 __retarget_lock_release_recursive
080003e4  w    F .isr_vector	00000004 DMA1_Stream6_IRQHandler
08003404 g     F .text	000000b6 __ssputs_r
08000400 g       .inits	00000000 __data_regions_array_start
20000090 g       .data	00000000 __data_end__
0800156a g     F .text	00000002 vAssertCalled
08002f28 g     F .text	0000001c pvTaskIncrementMutexHeldCount
080003e4  w    F .isr_vector	00000004 DMA1_Stream1_IRQHandler
080003e4  w    F .isr_vector	00000004 UART4_IRQHandler
080039f0 g     F .text	00000000 memchr
08002d00 g     F .text	00000078 xTaskCheckForTimeOut
20002af4 g       .bss	00000000 __bss_end__
08003ac4 g     F .text	00000094 _free_r
08001314 g     F .text	00000008 trace_write
080003e4  w    F .isr_vector	00000004 TIM3_IRQHandler
080003e4  w    F .isr_vector	00000004 RCC_IRQHandler
080003e4  w    F .isr_vector	00000004 TIM8_BRK_TIM12_IRQHandler
080003e4  w    F .isr_vector	00000004 Default_Handler
08000188  w    F .isr_vector	00000130 _start
08002784 g     F .text	00000010 vTaskSuspendAll
2000000c g     O .data	00000010 AHBPrescTable
08001cf4 g     F .text	00000024 uxListRemove
080003e4  w    F .isr_vector	00000004 EXTI15_10_IRQHandler
00000100 g       *ABS*	00000000 _Minimum_Stack_Size
080003e4  w    F .isr_vector	00000004 ADC_IRQHandler
08000da0 g     F .text	0000036c HAL_RCC_ClockConfig
20002af4 g       .noinit	00000000 _end_noinit
08002de0 g     F .text	000000a0 vTaskPriorityInherit
080004ac g     F .text	0000003c HAL_NVIC_SetPriorityGrouping
08002698 g     F .text	00000078 vTaskResume
08002a88 g     F .text	000000d4 vTaskSwitchContext
080003e4  w    F .isr_vector	00000004 DMA1_Stream7_IRQHandler
08001294 g     F .text	00000020 trace_puts
08002bd0 g     F .text	00000074 vTaskPlaceOnEventListRestricted
080003e4  w    F .isr_vector	00000004 TIM7_IRQHandler
080003e4  w    F .isr_vector	00000004 CAN2_TX_IRQHandler
080027a0 g     F .text	00000034 vTaskStepTick
080003e4  w    F .isr_vector	00000004 TIM5_IRQHandler
08003334 g     F .text	00000020 memcmp
080003e4  w    F .isr_vector	00000004 DMA2_Stream7_IRQHandler
080003e4  w    F .isr_vector	00000004 I2C3_EV_IRQHandler
08000394  w    F .isr_vector	00000034 UsageFault_Handler_C
08003070 g     F .text	00000058 xTimerGenericCommand
08001568 g     F .text	00000002 vApplicationStackOverflowHook
080003e4  w    F .isr_vector	00000004 EXTI9_5_IRQHandler
08000000 g       *ABS*	00000000 __vectors_start
080003e4  w    F .isr_vector	00000004 RTC_WKUP_IRQHandler
08003390 g     F .text	00000056 _vsnprintf_r
080003e4  w    F .isr_vector	00000004 ETH_WKUP_IRQHandler
08001940 g     F .text	00000016 vPortYield
080004a0  w    F .text	0000000c HAL_GetTick
08003c78 g     F .text	0000000c __malloc_lock
080003e4  w    F .isr_vector	00000004 SPI2_IRQHandler
08003ca0 g     F .text	00000002 __retarget_lock_acquire_recursive
080003e4  w    F .isr_vector	00000004 OTG_HS_EP1_IN_IRQHandler
08003370 g     F .text	00000010 memset
08000334  w    F .isr_vector	00000004 MemManage_Handler
080016a0 g     F .text	000000c0 main
080003e4  w    F .isr_vector	00000004 DMA1_Stream0_IRQHandler
08001694 g     F .text	0000000a SysTick_Init
08001cc2 g     F .text	00000032 vListInsert
080003e4  w    F .isr_vector	00000004 CAN1_TX_IRQHandler
0800191c g     F .text	00000024 SVC_Handler
08003020 g     F .text	00000050 xTimerCreateTimerTask
08003b58 g     F .text	000000b4 _malloc_r
080003e4  w    F .isr_vector	00000004 EXTI4_IRQHandler
08001ecc g     F .text	00000058 xQueueGenericCreate
08001448 g     F .text	00000040 SystemInit
080028ec g     F .text	000000e4 xTaskResumeAll
08002710 g     F .text	00000074 vTaskStartScheduler
08001a68  w    F .text	000000fc vPortSuppressTicksAndSleep
08000434  w    F .text	00000028 HAL_InitTick
080003e4  w    F .isr_vector	00000004 FSMC_IRQHandler
080003e4  w    F .isr_vector	00000004 ETH_IRQHandler
080036bc g     F .text	000000da _printf_common
08001428 g     F .text	00000020 isSemihosting
20000028 g     O .data	00000004 _impure_ptr
08000490  w    F .text	00000010 HAL_IncTick
080003e4  w    F .isr_vector	00000004 OTG_HS_EP1_OUT_IRQHandler
080034bc g     F .text	00000200 _svfiprintf_r
080003e4  w    F .isr_vector	00000004 WWDG_IRQHandler
08000418 g       .inits	00000000 __data_regions_array_end
08002d78 g     F .text	0000000c vTaskMissedYield
080003e4  w    F .isr_vector	00000004 TIM2_IRQHandler
08003390 g     F .text	00000056 _vsniprintf_r
080021a4 g     F .text	00000158 xQueueGenericReceive
080022fc g     F .text	00000028 vQueueAddToRegistry
08000000 g     O .isr_vector	00000188 __isr_vectors
080003e4  w    F .isr_vector	00000004 OTG_FS_WKUP_IRQHandler
080027d4 g     F .text	00000118 xTaskIncrementTick
080003e4  w    F .isr_vector	00000004 TIM1_TRG_COM_TIM11_IRQHandler
080003e4  w    F .isr_vector	00000004 OTG_HS_IRQHandler
08000598 g     F .text	0000003c HAL_SYSTICK_CLKSourceConfig
20020000 g       *ABS*	00000000 _estack
20020000 g       .isr_vector	00000000 __stack
080003e4  w    F .isr_vector	00000004 EXTI1_IRQHandler
08001e5c g     F .text	00000070 xQueueGenericReset
20000090 g       .data	00000000 _edata
080003e4  w    F .isr_vector	00000004 USART2_IRQHandler
08000904  w    F .text	0000049c HAL_RCC_OscConfig
08001488 g     F .text	000000a0 SystemCoreClockUpdate
080003e4  w    F .isr_vector	00000004 I2C2_ER_IRQHandler
080003e4  w    F .isr_vector	00000004 DMA2_Stream1_IRQHandler
08002dc0 g     F .text	00000020 xTaskGetSchedulerState
08000418 g       .inits	00000000 __bss_regions_array_start
080003e4  w    F .isr_vector	00000004 CAN1_SCE_IRQHandler
080003e4  w    F .isr_vector	00000004 FLASH_IRQHandler
080011e0  w    F .text	00000002 _exit
080003e4  w    F .isr_vector	00000004 DMA2_Stream4_IRQHandler
08000338  w    F .isr_vector	00000014 BusFault_Handler
080003e4  w    F .isr_vector	00000004 USART1_IRQHandler
08003380 g     F .text	00000010 strlen
080018fc g     F .text	00000020 pxPortInitialiseStack
080003e4  w    F .isr_vector	00000004 OTG_FS_IRQHandler
08003798 g     F .text	0000024c _printf_i
080003e4  w    F .isr_vector	00000004 SPI3_IRQHandler
080003e4  w    F .isr_vector	00000004 DMA1_Stream4_IRQHandler
20002ae8 g     O .bss	00000004 __malloc_sbrk_start
080003e4  w    F .isr_vector	00000004 I2C1_ER_IRQHandler
08002cd4 g     F .text	0000002c vTaskSetTimeOutState
0800198c g     F .text	00000040 vPortEnterCritical
20002ae4 g     O .bss	00000004 __malloc_free_list
080003e4  w    F .isr_vector	00000004 DMA2_Stream6_IRQHandler
080003e4  w    F .isr_vector	00000004 DMA1_Stream3_IRQHandler
0800210c g     F .text	00000098 xQueueGiveFromISR



Disassembly of section .isr_vector:

08000000 <__isr_vectors>:
 8000000:	00 00 02 20 b9 02 00 08 bf 02 00 08 c3 02 00 08     ... ............
 8000010:	35 03 00 08 39 03 00 08 81 03 00 08 00 00 00 00     5...9...........
	...
 800002c:	1d 19 00 08 cd 03 00 08 00 00 00 00 05 1a 00 08     ................
 800003c:	e9 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800004c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 61 17 00 08     ............a...
 800005c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800006c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800007c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800008c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800009c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 80000ac:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 80000bc:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 80000cc:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 80000dc:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 80000ec:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 80000fc:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800010c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800011c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800012c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800013c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800014c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800015c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800016c:	e5 03 00 08 e5 03 00 08 e5 03 00 08 e5 03 00 08     ................
 800017c:	00 00 00 00 e5 03 00 08 e5 03 00 08                 ............

08000188 <_start>:
_start():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:224
// For the call to work, and for the call to __initialize_hardware_early()
// to work, the reset stack must point to a valid internal RAM area.

void __attribute__ ((section(".after_vectors"),noreturn,weak))
_start (void)
{
 8000188:	b500      	push	{lr}
 800018a:	b083      	sub	sp, #12
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:235
  // enabled and require an early sequence to disable it.
  //
  // Also useful on platform with external RAM, that need to be
  // initialised before filling the BSS section.

  __initialize_hardware_early ();
 800018c:	f001 f8c6 	bl	800131c <__initialize_hardware_early>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:241

  // Use Old Style DATA and BSS section initialisation,
  // that will manage a single BSS sections.

#if defined(DEBUG) && (OS_INCLUDE_STARTUP_GUARD_CHECKS)
  __data_begin_guard = DATA_GUARD_BAD_VALUE;
 8000190:	4b38      	ldr	r3, [pc, #224]	; (8000274 <_start+0xec>)
 8000192:	4a39      	ldr	r2, [pc, #228]	; (8000278 <_start+0xf0>)
 8000194:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:242
  __data_end_guard = DATA_GUARD_BAD_VALUE;
 8000196:	4a39      	ldr	r2, [pc, #228]	; (800027c <_start+0xf4>)
 8000198:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:251
  // Copy the DATA segment from Flash to RAM (inlined).
  __initialize_data(&_sidata, &_sdata, &_edata);
#else

  // Copy the data sections from flash to SRAM.
  for (unsigned int* p = &__data_regions_array_start;
 800019a:	4939      	ldr	r1, [pc, #228]	; (8000280 <_start+0xf8>)
 800019c:	e006      	b.n	80001ac <_start+0x24>
__initialize_data():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:124
    *p++ = *from++;
 800019e:	f852 1b04 	ldr.w	r1, [r2], #4
 80001a2:	f843 1b04 	str.w	r1, [r3], #4
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:123
  while (p < region_end)
 80001a6:	4298      	cmp	r0, r3
 80001a8:	d8f9      	bhi.n	800019e <_start+0x16>
_start():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:256
      p < &__data_regions_array_end;)
    {
      unsigned int* from = (unsigned int *) (*p++);
      unsigned int* region_begin = (unsigned int *) (*p++);
      unsigned int* region_end = (unsigned int *) (*p++);
 80001aa:	4661      	mov	r1, ip
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:251 (discriminator 1)
  for (unsigned int* p = &__data_regions_array_start;
 80001ac:	4b35      	ldr	r3, [pc, #212]	; (8000284 <_start+0xfc>)
 80001ae:	4299      	cmp	r1, r3
 80001b0:	d205      	bcs.n	80001be <_start+0x36>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:254
      unsigned int* from = (unsigned int *) (*p++);
 80001b2:	680a      	ldr	r2, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:255
      unsigned int* region_begin = (unsigned int *) (*p++);
 80001b4:	684b      	ldr	r3, [r1, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:256
      unsigned int* region_end = (unsigned int *) (*p++);
 80001b6:	f101 0c0c 	add.w	ip, r1, #12
 80001ba:	6888      	ldr	r0, [r1, #8]
__initialize_data():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:123
  while (p < region_end)
 80001bc:	e7f3      	b.n	80001a6 <_start+0x1e>
_start():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:264
    }

#endif

#if defined(DEBUG) && (OS_INCLUDE_STARTUP_GUARD_CHECKS)
  if ((__data_begin_guard != DATA_BEGIN_GUARD_VALUE)
 80001be:	4b2e      	ldr	r3, [pc, #184]	; (8000278 <_start+0xf0>)
 80001c0:	681a      	ldr	r2, [r3, #0]
 80001c2:	4b31      	ldr	r3, [pc, #196]	; (8000288 <_start+0x100>)
 80001c4:	429a      	cmp	r2, r3
 80001c6:	d000      	beq.n	80001ca <_start+0x42>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:267 (discriminator 1)
      || (__data_end_guard != DATA_END_GUARD_VALUE))
    {
      for (;;)
 80001c8:	e7fe      	b.n	80001c8 <_start+0x40>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:265
      || (__data_end_guard != DATA_END_GUARD_VALUE))
 80001ca:	4b2c      	ldr	r3, [pc, #176]	; (800027c <_start+0xf4>)
 80001cc:	681a      	ldr	r2, [r3, #0]
 80001ce:	4b2f      	ldr	r3, [pc, #188]	; (800028c <_start+0x104>)
 80001d0:	429a      	cmp	r2, r3
 80001d2:	d1f9      	bne.n	80001c8 <_start+0x40>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:273
	;
    }
#endif

#if defined(DEBUG) && (OS_INCLUDE_STARTUP_GUARD_CHECKS)
  __bss_begin_guard = BSS_GUARD_BAD_VALUE;
 80001d4:	4b27      	ldr	r3, [pc, #156]	; (8000274 <_start+0xec>)
 80001d6:	4a2e      	ldr	r2, [pc, #184]	; (8000290 <_start+0x108>)
 80001d8:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:274
  __bss_end_guard = BSS_GUARD_BAD_VALUE;
 80001da:	4a2e      	ldr	r2, [pc, #184]	; (8000294 <_start+0x10c>)
 80001dc:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:283
  // Zero fill the BSS section (inlined).
  __initialize_bss(&__bss_start__, &__bss_end__);
#else

  // Zero fill all bss segments
  for (unsigned int *p = &__bss_regions_array_start;
 80001de:	4a2e      	ldr	r2, [pc, #184]	; (8000298 <_start+0x110>)
 80001e0:	e000      	b.n	80001e4 <_start+0x5c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:287
      p < &__bss_regions_array_end;)
    {
      unsigned int* region_begin = (unsigned int*) (*p++);
      unsigned int* region_end = (unsigned int*) (*p++);
 80001e2:	4602      	mov	r2, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:283 (discriminator 1)
  for (unsigned int *p = &__bss_regions_array_start;
 80001e4:	4b2d      	ldr	r3, [pc, #180]	; (800029c <_start+0x114>)
 80001e6:	429a      	cmp	r2, r3
 80001e8:	d209      	bcs.n	80001fe <_start+0x76>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:286
      unsigned int* region_begin = (unsigned int*) (*p++);
 80001ea:	4610      	mov	r0, r2
 80001ec:	f850 3b08 	ldr.w	r3, [r0], #8
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:287
      unsigned int* region_end = (unsigned int*) (*p++);
 80001f0:	6851      	ldr	r1, [r2, #4]
__initialize_bss():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:134
  while (p < region_end)
 80001f2:	4299      	cmp	r1, r3
 80001f4:	d9f5      	bls.n	80001e2 <_start+0x5a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:135
    *p++ = 0;
 80001f6:	2200      	movs	r2, #0
 80001f8:	f843 2b04 	str.w	r2, [r3], #4
 80001fc:	e7f9      	b.n	80001f2 <_start+0x6a>
_start():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:293
      __initialize_bss (region_begin, region_end);
    }
#endif

#if defined(DEBUG) && (OS_INCLUDE_STARTUP_GUARD_CHECKS)
  if ((__bss_begin_guard != 0) || (__bss_end_guard != 0))
 80001fe:	4b24      	ldr	r3, [pc, #144]	; (8000290 <_start+0x108>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	b913      	cbnz	r3, 800020a <_start+0x82>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:293 (discriminator 1)
 8000204:	4b23      	ldr	r3, [pc, #140]	; (8000294 <_start+0x10c>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	b103      	cbz	r3, 800020c <_start+0x84>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:295 (discriminator 2)
    {
      for (;;)
 800020a:	e7fe      	b.n	800020a <_start+0x82>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:302
    }
#endif

  // Hook to continue the initialisations. Usually compute and store the
  // clock frequency in the global CMSIS variable, cleared above.
  __initialize_hardware ();
 800020c:	f001 f9fa 	bl	8001604 <__initialize_hardware>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:307

  // Get the argc/argv (useful in semihosting configurations).
  int argc;
  char** argv;
  __initialize_args (&argc, &argv);
 8000210:	4669      	mov	r1, sp
 8000212:	a801      	add	r0, sp, #4
 8000214:	f001 f812 	bl	800123c <__initialize_args>
__run_init_array():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:160
  count = __preinit_array_end - __preinit_array_start;
 8000218:	4c21      	ldr	r4, [pc, #132]	; (80002a0 <_start+0x118>)
 800021a:	4b22      	ldr	r3, [pc, #136]	; (80002a4 <_start+0x11c>)
 800021c:	1ae4      	subs	r4, r4, r3
 800021e:	10a4      	asrs	r4, r4, #2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:161
  for (i = 0; i < count; i++)
 8000220:	2500      	movs	r5, #0
 8000222:	e004      	b.n	800022e <_start+0xa6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:162
    __preinit_array_start[i] ();
 8000224:	4b1f      	ldr	r3, [pc, #124]	; (80002a4 <_start+0x11c>)
 8000226:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800022a:	4798      	blx	r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:161
  for (i = 0; i < count; i++)
 800022c:	3501      	adds	r5, #1
 800022e:	42ac      	cmp	r4, r5
 8000230:	dcf8      	bgt.n	8000224 <_start+0x9c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:169
  count = __init_array_end - __init_array_start;
 8000232:	4c1d      	ldr	r4, [pc, #116]	; (80002a8 <_start+0x120>)
 8000234:	4b1d      	ldr	r3, [pc, #116]	; (80002ac <_start+0x124>)
 8000236:	1ae4      	subs	r4, r4, r3
 8000238:	10a4      	asrs	r4, r4, #2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:170
  for (i = 0; i < count; i++)
 800023a:	2500      	movs	r5, #0
 800023c:	e004      	b.n	8000248 <_start+0xc0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:171
    __init_array_start[i] ();
 800023e:	4b1b      	ldr	r3, [pc, #108]	; (80002ac <_start+0x124>)
 8000240:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8000244:	4798      	blx	r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:170
  for (i = 0; i < count; i++)
 8000246:	3501      	adds	r5, #1
 8000248:	42ac      	cmp	r4, r5
 800024a:	dcf8      	bgt.n	800023e <_start+0xb6>
_start():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:314
  // Call the standard library initialisation (mandatory for C++ to
  // execute the constructors for the static objects).
  __run_init_array ();

  // Call the main entry point, and save the exit code.
  int code = main (argc, argv);
 800024c:	9900      	ldr	r1, [sp, #0]
 800024e:	9801      	ldr	r0, [sp, #4]
 8000250:	f001 fa26 	bl	80016a0 <main>
 8000254:	4605      	mov	r5, r0
__run_fini_array():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:182
  count = __fini_array_end - __fini_array_start;
 8000256:	4c16      	ldr	r4, [pc, #88]	; (80002b0 <_start+0x128>)
 8000258:	4b16      	ldr	r3, [pc, #88]	; (80002b4 <_start+0x12c>)
 800025a:	1ae4      	subs	r4, r4, r3
 800025c:	10a4      	asrs	r4, r4, #2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:183
  for (i = count; i > 0; i--)
 800025e:	e004      	b.n	800026a <_start+0xe2>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:184
    __fini_array_start[i - 1] ();
 8000260:	3c01      	subs	r4, #1
 8000262:	4b14      	ldr	r3, [pc, #80]	; (80002b4 <_start+0x12c>)
 8000264:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8000268:	4798      	blx	r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:183
  for (i = count; i > 0; i--)
 800026a:	2c00      	cmp	r4, #0
 800026c:	dcf8      	bgt.n	8000260 <_start+0xd8>
_start():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_startup.c:319

  // Run the C++ static destructors.
  __run_fini_array ();

  _exit (code);
 800026e:	4628      	mov	r0, r5
 8000270:	f000 ffb6 	bl	80011e0 <_exit>
 8000274:	cadebaba 	.word	0xcadebaba
 8000278:	20000000 	.word	0x20000000
 800027c:	2000008c 	.word	0x2000008c
 8000280:	08000400 	.word	0x08000400
 8000284:	08000418 	.word	0x08000418
 8000288:	12345678 	.word	0x12345678
 800028c:	98765432 	.word	0x98765432
 8000290:	20000090 	.word	0x20000090
 8000294:	20002af0 	.word	0x20002af0
 8000298:	08000418 	.word	0x08000418
 800029c:	08000428 	.word	0x08000428
 80002a0:	08000428 	.word	0x08000428
 80002a4:	08000428 	.word	0x08000428
 80002a8:	08000428 	.word	0x08000428
 80002ac:	08000428 	.word	0x08000428
 80002b0:	08000428 	.word	0x08000428
 80002b4:	08000428 	.word	0x08000428

080002b8 <Reset_Handler>:
Reset_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:31

// The DEBUG version is not naked, but has a proper stack frame,
// to allow setting breakpoints at Reset_Handler.
void __attribute__ ((section(".after_vectors"),noreturn))
Reset_Handler (void)
{
 80002b8:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:32
  _start ();
 80002ba:	f7ff ff65 	bl	8000188 <_start>

080002be <NMI_Handler>:
NMI_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:57

void __attribute__ ((section(".after_vectors"),weak))
NMI_Handler (void)
{
#if defined(DEBUG)
  __DEBUG_BKPT();
 80002be:	be00      	bkpt	0x0000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:59 (discriminator 1)
#endif
  while (1)
 80002c0:	e7fe      	b.n	80002c0 <NMI_Handler+0x2>

080002c2 <HardFault_Handler>:
HardFault_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:328
// Cortex-M4 Processors, Third Edition, Chap. 12.8, page 402).

void __attribute__ ((section(".after_vectors"),weak,naked))
HardFault_Handler (void)
{
  asm volatile(
 80002c2:	f01e 0f04 	tst.w	lr, #4
 80002c6:	bf0c      	ite	eq
 80002c8:	f3ef 8008 	mrseq	r0, MSP
 80002cc:	f3ef 8009 	mrsne	r0, PSP
 80002d0:	4671      	mov	r1, lr
 80002d2:	4a41      	ldr	r2, [pc, #260]	; (80003d8 <DebugMon_Handler+0xc>)
 80002d4:	4710      	bx	r2

080002d6 <HardFault_Handler_C>:
HardFault_Handler_C():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:346
}

void __attribute__ ((section(".after_vectors"),weak,used))
HardFault_Handler_C (ExceptionStackFrame* frame __attribute__((unused)),
                     uint32_t lr __attribute__((unused)))
{
 80002d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80002da:	b082      	sub	sp, #8
 80002dc:	4604      	mov	r4, r0
 80002de:	460d      	mov	r5, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:348
#if defined(TRACE)
  uint32_t mmfar = SCB->MMFAR; // MemManage Fault Address
 80002e0:	4b12      	ldr	r3, [pc, #72]	; (800032c <HardFault_Handler_C+0x56>)
 80002e2:	6b5f      	ldr	r7, [r3, #52]	; 0x34
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:349
  uint32_t bfar = SCB->BFAR; // Bus Fault Address
 80002e4:	f8d3 8038 	ldr.w	r8, [r3, #56]	; 0x38
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:350
  uint32_t cfsr = SCB->CFSR; // Configurable Fault Status Registers
 80002e8:	6a9e      	ldr	r6, [r3, #40]	; 0x28
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:360
  // If the BKPT instruction is executed with C_DEBUGEN == 0 and MON_EN == 0,
  // it will cause the processor to enter a HardFault exception, with DEBUGEVT
  // in the Hard Fault Status register (HFSR) set to 1, and BKPT in the
  // Debug Fault Status register (DFSR) also set to 1.

  if (((SCB->DFSR & SCB_DFSR_BKPT_Msk) != 0)
 80002ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ec:	f013 0f02 	tst.w	r3, #2
 80002f0:	d003      	beq.n	80002fa <HardFault_Handler_C+0x24>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:361
      && ((SCB->HFSR & SCB_HFSR_DEBUGEVT_Msk) != 0))
 80002f2:	4b0e      	ldr	r3, [pc, #56]	; (800032c <HardFault_Handler_C+0x56>)
 80002f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80002f6:	2b00      	cmp	r3, #0
 80002f8:	db0b      	blt.n	8000312 <HardFault_Handler_C+0x3c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:376
    }

#endif

#if defined(TRACE)
  trace_printf ("[HardFault]\n");
 80002fa:	480d      	ldr	r0, [pc, #52]	; (8000330 <HardFault_Handler_C+0x5a>)
 80002fc:	f000 ffb0 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:377
  dumpExceptionStack (frame, cfsr, mmfar, bfar, lr);
 8000300:	9500      	str	r5, [sp, #0]
 8000302:	4643      	mov	r3, r8
 8000304:	463a      	mov	r2, r7
 8000306:	4631      	mov	r1, r6
 8000308:	4620      	mov	r0, r4
 800030a:	f001 f813 	bl	8001334 <dumpExceptionStack>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:381
#endif // defined(TRACE)

#if defined(DEBUG)
  __DEBUG_BKPT();
 800030e:	be00      	bkpt	0x0000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:383 (discriminator 1)
#endif
  while (1)
 8000310:	e7fe      	b.n	8000310 <HardFault_Handler_C+0x3a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:363
      if (isSemihosting (frame, 0xBE00 + (AngelSWI & 0xFF)))
 8000312:	f64b 61ab 	movw	r1, #48811	; 0xbeab
 8000316:	f001 f887 	bl	8001428 <isSemihosting>
 800031a:	2800      	cmp	r0, #0
 800031c:	d0ed      	beq.n	80002fa <HardFault_Handler_C+0x24>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:366
          SCB->HFSR = SCB_HFSR_DEBUGEVT_Msk;
 800031e:	4b03      	ldr	r3, [pc, #12]	; (800032c <HardFault_Handler_C+0x56>)
 8000320:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8000324:	62da      	str	r2, [r3, #44]	; 0x2c
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:386
    {
    }
}
 8000326:	b002      	add	sp, #8
 8000328:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800032c:	e000ed00 	.word	0xe000ed00
 8000330:	08003ea4 	.word	0x08003ea4

08000334 <MemManage_Handler>:
MemManage_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:452

void __attribute__ ((section(".after_vectors"),weak))
MemManage_Handler (void)
{
#if defined(DEBUG)
  __DEBUG_BKPT();
 8000334:	be00      	bkpt	0x0000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:454 (discriminator 1)
#endif
  while (1)
 8000336:	e7fe      	b.n	8000336 <MemManage_Handler+0x2>

08000338 <BusFault_Handler>:
BusFault_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:462
}

void __attribute__ ((section(".after_vectors"),weak,naked))
BusFault_Handler (void)
{
  asm volatile(
 8000338:	f01e 0f04 	tst.w	lr, #4
 800033c:	bf0c      	ite	eq
 800033e:	f3ef 8008 	mrseq	r0, MSP
 8000342:	f3ef 8009 	mrsne	r0, PSP
 8000346:	4671      	mov	r1, lr
 8000348:	4a24      	ldr	r2, [pc, #144]	; (80003dc <DebugMon_Handler+0x10>)
 800034a:	4710      	bx	r2

0800034c <BusFault_Handler_C>:
BusFault_Handler_C():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:480
}

void __attribute__ ((section(".after_vectors"),weak,used))
BusFault_Handler_C (ExceptionStackFrame* frame __attribute__((unused)),
                    uint32_t lr __attribute__((unused)))
{
 800034c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000350:	b082      	sub	sp, #8
 8000352:	4604      	mov	r4, r0
 8000354:	460d      	mov	r5, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:482
#if defined(TRACE)
  uint32_t mmfar = SCB->MMFAR; // MemManage Fault Address
 8000356:	4b08      	ldr	r3, [pc, #32]	; (8000378 <BusFault_Handler_C+0x2c>)
 8000358:	6b5f      	ldr	r7, [r3, #52]	; 0x34
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:483
  uint32_t bfar = SCB->BFAR; // Bus Fault Address
 800035a:	f8d3 8038 	ldr.w	r8, [r3, #56]	; 0x38
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:484
  uint32_t cfsr = SCB->CFSR; // Configurable Fault Status Registers
 800035e:	6a9e      	ldr	r6, [r3, #40]	; 0x28
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:486

  trace_printf ("[BusFault]\n");
 8000360:	4806      	ldr	r0, [pc, #24]	; (800037c <BusFault_Handler_C+0x30>)
 8000362:	f000 ff7d 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:487
  dumpExceptionStack (frame, cfsr, mmfar, bfar, lr);
 8000366:	9500      	str	r5, [sp, #0]
 8000368:	4643      	mov	r3, r8
 800036a:	463a      	mov	r2, r7
 800036c:	4631      	mov	r1, r6
 800036e:	4620      	mov	r0, r4
 8000370:	f000 ffe0 	bl	8001334 <dumpExceptionStack>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:491
#endif // defined(TRACE)

#if defined(DEBUG)
  __DEBUG_BKPT();
 8000374:	be00      	bkpt	0x0000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:493 (discriminator 1)
#endif
  while (1)
 8000376:	e7fe      	b.n	8000376 <BusFault_Handler_C+0x2a>
 8000378:	e000ed00 	.word	0xe000ed00
 800037c:	08003eb4 	.word	0x08003eb4

08000380 <UsageFault_Handler>:
UsageFault_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:501
}

void __attribute__ ((section(".after_vectors"),weak,naked))
UsageFault_Handler (void)
{
  asm volatile(
 8000380:	f01e 0f04 	tst.w	lr, #4
 8000384:	bf0c      	ite	eq
 8000386:	f3ef 8008 	mrseq	r0, MSP
 800038a:	f3ef 8009 	mrsne	r0, PSP
 800038e:	4671      	mov	r1, lr
 8000390:	4a13      	ldr	r2, [pc, #76]	; (80003e0 <DebugMon_Handler+0x14>)
 8000392:	4710      	bx	r2

08000394 <UsageFault_Handler_C>:
UsageFault_Handler_C():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:519
}

void __attribute__ ((section(".after_vectors"),weak,used))
UsageFault_Handler_C (ExceptionStackFrame* frame __attribute__((unused)),
                      uint32_t lr __attribute__((unused)))
{
 8000394:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000398:	b082      	sub	sp, #8
 800039a:	4604      	mov	r4, r0
 800039c:	460d      	mov	r5, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:521
#if defined(TRACE)
  uint32_t mmfar = SCB->MMFAR; // MemManage Fault Address
 800039e:	4b08      	ldr	r3, [pc, #32]	; (80003c0 <UsageFault_Handler_C+0x2c>)
 80003a0:	6b5f      	ldr	r7, [r3, #52]	; 0x34
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:522
  uint32_t bfar = SCB->BFAR; // Bus Fault Address
 80003a2:	f8d3 8038 	ldr.w	r8, [r3, #56]	; 0x38
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:523
  uint32_t cfsr = SCB->CFSR; // Configurable Fault Status Registers
 80003a6:	6a9e      	ldr	r6, [r3, #40]	; 0x28
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:540
    }

#endif

#if defined(TRACE)
  trace_printf ("[UsageFault]\n");
 80003a8:	4806      	ldr	r0, [pc, #24]	; (80003c4 <UsageFault_Handler_C+0x30>)
 80003aa:	f000 ff59 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:541
  dumpExceptionStack (frame, cfsr, mmfar, bfar, lr);
 80003ae:	9500      	str	r5, [sp, #0]
 80003b0:	4643      	mov	r3, r8
 80003b2:	463a      	mov	r2, r7
 80003b4:	4631      	mov	r1, r6
 80003b6:	4620      	mov	r0, r4
 80003b8:	f000 ffbc 	bl	8001334 <dumpExceptionStack>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:545
#endif // defined(TRACE)

#if defined(DEBUG)
  __DEBUG_BKPT();
 80003bc:	be00      	bkpt	0x0000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:547 (discriminator 1)
#endif
  while (1)
 80003be:	e7fe      	b.n	80003be <UsageFault_Handler_C+0x2a>
 80003c0:	e000ed00 	.word	0xe000ed00
 80003c4:	08003ec0 	.word	0x08003ec0
SVC_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:558

void __attribute__ ((section(".after_vectors"),weak))
SVC_Handler (void)
{
#if defined(DEBUG)
  __DEBUG_BKPT();
 80003c8:	be00      	bkpt	0x0000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:560 (discriminator 1)
#endif
  while (1)
 80003ca:	e7fe      	b.n	80003ca <UsageFault_Handler_C+0x36>

080003cc <DebugMon_Handler>:
DebugMon_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:571

void __attribute__ ((section(".after_vectors"),weak))
DebugMon_Handler (void)
{
#if defined(DEBUG)
  __DEBUG_BKPT();
 80003cc:	be00      	bkpt	0x0000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:573 (discriminator 1)
#endif
  while (1)
 80003ce:	e7fe      	b.n	80003ce <DebugMon_Handler+0x2>
PendSV_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:584

void __attribute__ ((section(".after_vectors"),weak))
PendSV_Handler (void)
{
#if defined(DEBUG)
  __DEBUG_BKPT();
 80003d0:	be00      	bkpt	0x0000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:586 (discriminator 1)
#endif
  while (1)
 80003d2:	e7fe      	b.n	80003d2 <DebugMon_Handler+0x6>
SysTick_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:597
SysTick_Handler (void)
{
  // DO NOT loop, just return.
  // Useful in case someone (like STM HAL) inadvertently enables SysTick.
  ;
}
 80003d4:	4770      	bx	lr
DebugMon_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:597
 80003d6:	0000      	.short	0x0000
 80003d8:	080002d7 	.word	0x080002d7
 80003dc:	0800034d 	.word	0x0800034d
 80003e0:	08000395 	.word	0x08000395

080003e4 <ADC_IRQHandler>:
Default_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/vectors_stm32f4xx.c:1123

void __attribute__ ((section(".after_vectors")))
Default_Handler(void)
{
#if defined(DEBUG)
  __DEBUG_BKPT();
 80003e4:	be00      	bkpt	0x0000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/vectors_stm32f4xx.c:1125 (discriminator 1)
#endif
  while (1)
 80003e6:	e7fe      	b.n	80003e6 <ADC_IRQHandler+0x2>

080003e8 <SysTick_Handler>:
SysTick_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/FreeRTOS_helper.c:33
 * for schedule state is mandatory, otherwise the TickHandler
 * hang if called before starting the scheduler.
 */
void __attribute__ ((section(".after_vectors")))
SysTick_Handler (void)
{
 80003e8:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../src/FreeRTOS_helper.c:35
#if defined(USE_HAL_DRIVER)
  HAL_IncTick ();
 80003ea:	f000 f851 	bl	8000490 <HAL_IncTick>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/FreeRTOS_helper.c:38
#endif

  if (xTaskGetSchedulerState () != taskSCHEDULER_NOT_STARTED)
 80003ee:	f002 fce7 	bl	8002dc0 <xTaskGetSchedulerState>
 80003f2:	2801      	cmp	r0, #1
 80003f4:	d100      	bne.n	80003f8 <SysTick_Handler+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/FreeRTOS_helper.c:42
    {
      xPortSysTickHandler ();
    }
}
 80003f6:	bd08      	pop	{r3, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../src/FreeRTOS_helper.c:40
      xPortSysTickHandler ();
 80003f8:	f001 fb26 	bl	8001a48 <xPortSysTickHandler>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/FreeRTOS_helper.c:42
}
 80003fc:	e7fb      	b.n	80003f6 <SysTick_Handler+0xe>

Disassembly of section .text:

08000430 <HAL_MspInit>:
HAL_MspInit():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:234
__weak void HAL_MspInit(void)
{
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_MspInit could be implemented in the user file
   */
}
 8000430:	4770      	bx	lr
	...

08000434 <HAL_InitTick>:
HAL_InitTick():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:264
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000434:	b510      	push	{r4, lr}
 8000436:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:266
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 8000438:	f000 feb6 	bl	80011a8 <HAL_RCC_GetHCLKFreq>
 800043c:	4b06      	ldr	r3, [pc, #24]	; (8000458 <HAL_InitTick+0x24>)
 800043e:	fba3 3000 	umull	r3, r0, r3, r0
 8000442:	0980      	lsrs	r0, r0, #6
 8000444:	f000 f894 	bl	8000570 <HAL_SYSTICK_Config>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:269

  /*Configure the SysTick IRQ priority */
  HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0);
 8000448:	2200      	movs	r2, #0
 800044a:	4621      	mov	r1, r4
 800044c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000450:	f000 f84a 	bl	80004e8 <HAL_NVIC_SetPriority>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:273

  /* Return function status */
  return HAL_OK;
}
 8000454:	2000      	movs	r0, #0
 8000456:	bd10      	pop	{r4, pc}
 8000458:	10624dd3 	.word	0x10624dd3

0800045c <HAL_Init>:
HAL_Init():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:168
{
 800045c:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:171
   __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800045e:	4b0b      	ldr	r3, [pc, #44]	; (800048c <HAL_Init+0x30>)
 8000460:	681a      	ldr	r2, [r3, #0]
 8000462:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000466:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:175
   __HAL_FLASH_DATA_CACHE_ENABLE();
 8000468:	681a      	ldr	r2, [r3, #0]
 800046a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800046e:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:179
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8000470:	681a      	ldr	r2, [r3, #0]
 8000472:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000476:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:183
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000478:	2003      	movs	r0, #3
 800047a:	f000 f817 	bl	80004ac <HAL_NVIC_SetPriorityGrouping>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:186
  HAL_InitTick(TICK_INT_PRIORITY);
 800047e:	200f      	movs	r0, #15
 8000480:	f7ff ffd8 	bl	8000434 <HAL_InitTick>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:189
  HAL_MspInit();
 8000484:	f7ff ffd4 	bl	8000430 <HAL_MspInit>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:193
}
 8000488:	2000      	movs	r0, #0
 800048a:	bd08      	pop	{r3, pc}
 800048c:	40023c00 	.word	0x40023c00

08000490 <HAL_IncTick>:
HAL_IncTick():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:313
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick++;
 8000490:	4a02      	ldr	r2, [pc, #8]	; (800049c <HAL_IncTick+0xc>)
 8000492:	6813      	ldr	r3, [r2, #0]
 8000494:	3301      	adds	r3, #1
 8000496:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:314
}
 8000498:	4770      	bx	lr
 800049a:	bf00      	nop
 800049c:	20000094 	.word	0x20000094

080004a0 <HAL_GetTick>:
HAL_GetTick():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:324
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80004a0:	4b01      	ldr	r3, [pc, #4]	; (80004a8 <HAL_GetTick+0x8>)
 80004a2:	6818      	ldr	r0, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal.c:325
}
 80004a4:	4770      	bx	lr
 80004a6:	bf00      	nop
 80004a8:	20000094 	.word	0x20000094

080004ac <HAL_NVIC_SetPriorityGrouping>:
HAL_NVIC_SetPriorityGrouping():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:162
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80004ac:	b510      	push	{r4, lr}
 80004ae:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:164
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80004b0:	1ec3      	subs	r3, r0, #3
 80004b2:	2b04      	cmp	r3, #4
 80004b4:	d80f      	bhi.n	80004d6 <HAL_NVIC_SetPriorityGrouping+0x2a>
NVIC_SetPriorityGrouping():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1466
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80004b6:	4a0a      	ldr	r2, [pc, #40]	; (80004e0 <HAL_NVIC_SetPriorityGrouping+0x34>)
 80004b8:	68d3      	ldr	r3, [r2, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1467
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
 80004ba:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80004be:	041b      	lsls	r3, r3, #16
 80004c0:	0c1b      	lsrs	r3, r3, #16
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1470
  reg_value  =  (reg_value                                 |
                ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8));                                     /* Insert write key and priorty group */
 80004c2:	0224      	lsls	r4, r4, #8
 80004c4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1469
                ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
 80004c8:	4323      	orrs	r3, r4
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1468
  reg_value  =  (reg_value                                 |
 80004ca:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80004ce:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1471
  SCB->AIRCR =  reg_value;
 80004d2:	60d3      	str	r3, [r2, #12]
HAL_NVIC_SetPriorityGrouping():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:168
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80004d4:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:164 (discriminator 1)
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80004d6:	21a4      	movs	r1, #164	; 0xa4
 80004d8:	4802      	ldr	r0, [pc, #8]	; (80004e4 <HAL_NVIC_SetPriorityGrouping+0x38>)
 80004da:	f000 feb7 	bl	800124c <assert_failed>
 80004de:	e7ea      	b.n	80004b6 <HAL_NVIC_SetPriorityGrouping+0xa>
 80004e0:	e000ed00 	.word	0xe000ed00
 80004e4:	08003ca4 	.word	0x08003ca4

080004e8 <HAL_NVIC_SetPriority>:
HAL_NVIC_SetPriority():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:184
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80004e8:	b570      	push	{r4, r5, r6, lr}
 80004ea:	4605      	mov	r5, r0
 80004ec:	460c      	mov	r4, r1
 80004ee:	4616      	mov	r6, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:188
  uint32_t prioritygroup = 0x00;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 80004f0:	2a0f      	cmp	r2, #15
 80004f2:	d824      	bhi.n	800053e <HAL_NVIC_SetPriority+0x56>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:189
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 80004f4:	2c0f      	cmp	r4, #15
 80004f6:	d827      	bhi.n	8000548 <HAL_NVIC_SetPriority+0x60>
NVIC_GetPriorityGrouping():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1483

    \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
{
  return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grouping field */
 80004f8:	4b1a      	ldr	r3, [pc, #104]	; (8000564 <HAL_NVIC_SetPriority+0x7c>)
 80004fa:	68db      	ldr	r3, [r3, #12]
 80004fc:	f3c3 2302 	ubfx	r3, r3, #8, #3
NVIC_EncodePriority():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1624
{
  uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
 8000500:	f1c3 0107 	rsb	r1, r3, #7
 8000504:	2904      	cmp	r1, #4
 8000506:	bf28      	it	cs
 8000508:	2104      	movcs	r1, #4
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1625
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;
 800050a:	1d1a      	adds	r2, r3, #4
 800050c:	2a06      	cmp	r2, #6
 800050e:	d920      	bls.n	8000552 <HAL_NVIC_SetPriority+0x6a>
 8000510:	3b03      	subs	r3, #3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1628

  return (
           ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 8000512:	2201      	movs	r2, #1
 8000514:	fa02 f101 	lsl.w	r1, r2, r1
 8000518:	3901      	subs	r1, #1
 800051a:	400c      	ands	r4, r1
 800051c:	409c      	lsls	r4, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1629
           ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
 800051e:	fa02 f303 	lsl.w	r3, r2, r3
 8000522:	3b01      	subs	r3, #1
 8000524:	4033      	ands	r3, r6
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1628
           ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 8000526:	431c      	orrs	r4, r3
NVIC_SetPriority():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1578
  if(IRQn < 0) {
 8000528:	2d00      	cmp	r5, #0
 800052a:	db14      	blt.n	8000556 <HAL_NVIC_SetPriority+0x6e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1581
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 800052c:	0124      	lsls	r4, r4, #4
 800052e:	b2e4      	uxtb	r4, r4
 8000530:	f105 4560 	add.w	r5, r5, #3758096384	; 0xe0000000
 8000534:	f505 4561 	add.w	r5, r5, #57600	; 0xe100
 8000538:	f885 4300 	strb.w	r4, [r5, #768]	; 0x300
HAL_NVIC_SetPriority():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:194
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800053c:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:188 (discriminator 1)
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 800053e:	21bc      	movs	r1, #188	; 0xbc
 8000540:	4809      	ldr	r0, [pc, #36]	; (8000568 <HAL_NVIC_SetPriority+0x80>)
 8000542:	f000 fe83 	bl	800124c <assert_failed>
 8000546:	e7d5      	b.n	80004f4 <HAL_NVIC_SetPriority+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:189 (discriminator 1)
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 8000548:	21bd      	movs	r1, #189	; 0xbd
 800054a:	4807      	ldr	r0, [pc, #28]	; (8000568 <HAL_NVIC_SetPriority+0x80>)
 800054c:	f000 fe7e 	bl	800124c <assert_failed>
 8000550:	e7d2      	b.n	80004f8 <HAL_NVIC_SetPriority+0x10>
NVIC_EncodePriority():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1625
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;
 8000552:	2300      	movs	r3, #0
 8000554:	e7dd      	b.n	8000512 <HAL_NVIC_SetPriority+0x2a>
NVIC_SetPriority():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1579
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 8000556:	f005 050f 	and.w	r5, r5, #15
 800055a:	0124      	lsls	r4, r4, #4
 800055c:	b2e4      	uxtb	r4, r4
 800055e:	4b03      	ldr	r3, [pc, #12]	; (800056c <HAL_NVIC_SetPriority+0x84>)
 8000560:	555c      	strb	r4, [r3, r5]
 8000562:	e7eb      	b.n	800053c <HAL_NVIC_SetPriority+0x54>
 8000564:	e000ed00 	.word	0xe000ed00
 8000568:	08003ca4 	.word	0x08003ca4
 800056c:	e000ed14 	.word	0xe000ed14

08000570 <HAL_SYSTICK_Config>:
SysTick_Config():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1705
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 8000570:	3801      	subs	r0, #1
 8000572:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000576:	d20b      	bcs.n	8000590 <HAL_SYSTICK_Config+0x20>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1707

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 8000578:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800057c:	6158      	str	r0, [r3, #20]
NVIC_SetPriority():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1579
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 800057e:	4a05      	ldr	r2, [pc, #20]	; (8000594 <HAL_SYSTICK_Config+0x24>)
 8000580:	21f0      	movs	r1, #240	; 0xf0
 8000582:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
SysTick_Config():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1709
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 8000586:	2000      	movs	r0, #0
 8000588:	6198      	str	r0, [r3, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1710
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800058a:	2207      	movs	r2, #7
 800058c:	611a      	str	r2, [r3, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1713
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Timer */
  return (0);                                                  /* Function successful */
 800058e:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1705
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 8000590:	2001      	movs	r0, #1
HAL_SYSTICK_Config():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:250
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8000592:	4770      	bx	lr
 8000594:	e000ed00 	.word	0xe000ed00

08000598 <HAL_SYSTICK_CLKSourceConfig>:
HAL_SYSTICK_CLKSourceConfig():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:386
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 8000598:	b510      	push	{r4, lr}
 800059a:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:388
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 800059c:	2804      	cmp	r0, #4
 800059e:	d000      	beq.n	80005a2 <HAL_SYSTICK_CLKSourceConfig+0xa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:388 (discriminator 1)
 80005a0:	b940      	cbnz	r0, 80005b4 <HAL_SYSTICK_CLKSourceConfig+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:389
  if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 80005a2:	2c04      	cmp	r4, #4
 80005a4:	d00c      	beq.n	80005c0 <HAL_SYSTICK_CLKSourceConfig+0x28>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:395
  {
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
  }
  else
  {
    SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 80005a6:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80005aa:	6913      	ldr	r3, [r2, #16]
 80005ac:	f023 0304 	bic.w	r3, r3, #4
 80005b0:	6113      	str	r3, [r2, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:397
  }
}
 80005b2:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:388 (discriminator 2)
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 80005b4:	f44f 71c2 	mov.w	r1, #388	; 0x184
 80005b8:	4805      	ldr	r0, [pc, #20]	; (80005d0 <HAL_SYSTICK_CLKSourceConfig+0x38>)
 80005ba:	f000 fe47 	bl	800124c <assert_failed>
 80005be:	e7f0      	b.n	80005a2 <HAL_SYSTICK_CLKSourceConfig+0xa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_cortex.c:391
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 80005c0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80005c4:	6913      	ldr	r3, [r2, #16]
 80005c6:	f043 0304 	orr.w	r3, r3, #4
 80005ca:	6113      	str	r3, [r2, #16]
 80005cc:	e7f1      	b.n	80005b2 <HAL_SYSTICK_CLKSourceConfig+0x1a>
 80005ce:	bf00      	nop
 80005d0:	08003ca4 	.word	0x08003ca4

080005d4 <HAL_GPIO_Init>:
HAL_GPIO_Init():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:190
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80005d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80005d8:	b082      	sub	sp, #8
 80005da:	4607      	mov	r7, r0
 80005dc:	460e      	mov	r6, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:197
  uint32_t ioposition = 0x00;
  uint32_t iocurrent = 0x00;
  uint32_t temp = 0x00;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 80005de:	4b35      	ldr	r3, [pc, #212]	; (80006b4 <HAL_GPIO_Init+0xe0>)
 80005e0:	4298      	cmp	r0, r3
 80005e2:	d023      	beq.n	800062c <HAL_GPIO_Init+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:197 (discriminator 1)
 80005e4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80005e8:	4298      	cmp	r0, r3
 80005ea:	d01f      	beq.n	800062c <HAL_GPIO_Init+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:197 (discriminator 2)
 80005ec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80005f0:	4298      	cmp	r0, r3
 80005f2:	d01b      	beq.n	800062c <HAL_GPIO_Init+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:197 (discriminator 3)
 80005f4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80005f8:	4298      	cmp	r0, r3
 80005fa:	d017      	beq.n	800062c <HAL_GPIO_Init+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:197 (discriminator 4)
 80005fc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000600:	4298      	cmp	r0, r3
 8000602:	d013      	beq.n	800062c <HAL_GPIO_Init+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:197 (discriminator 5)
 8000604:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000608:	4298      	cmp	r0, r3
 800060a:	d00f      	beq.n	800062c <HAL_GPIO_Init+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:197 (discriminator 6)
 800060c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000610:	4298      	cmp	r0, r3
 8000612:	d00b      	beq.n	800062c <HAL_GPIO_Init+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:197 (discriminator 7)
 8000614:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000618:	4298      	cmp	r0, r3
 800061a:	d007      	beq.n	800062c <HAL_GPIO_Init+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:197 (discriminator 8)
 800061c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000620:	4298      	cmp	r0, r3
 8000622:	d003      	beq.n	800062c <HAL_GPIO_Init+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:197 (discriminator 9)
 8000624:	21c5      	movs	r1, #197	; 0xc5
 8000626:	4824      	ldr	r0, [pc, #144]	; (80006b8 <HAL_GPIO_Init+0xe4>)
 8000628:	f000 fe10 	bl	800124c <assert_failed>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:198
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 800062c:	8833      	ldrh	r3, [r6, #0]
 800062e:	b333      	cbz	r3, 800067e <HAL_GPIO_Init+0xaa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 8000630:	6873      	ldr	r3, [r6, #4]
 8000632:	2b01      	cmp	r3, #1
 8000634:	d91e      	bls.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 1)
 8000636:	2b11      	cmp	r3, #17
 8000638:	d01c      	beq.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 2)
 800063a:	2b02      	cmp	r3, #2
 800063c:	d01a      	beq.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 3)
 800063e:	2b12      	cmp	r3, #18
 8000640:	d018      	beq.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 4)
 8000642:	4a1e      	ldr	r2, [pc, #120]	; (80006bc <HAL_GPIO_Init+0xe8>)
 8000644:	4293      	cmp	r3, r2
 8000646:	d015      	beq.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 5)
 8000648:	f502 1280 	add.w	r2, r2, #1048576	; 0x100000
 800064c:	4293      	cmp	r3, r2
 800064e:	d011      	beq.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 6)
 8000650:	f502 1280 	add.w	r2, r2, #1048576	; 0x100000
 8000654:	4293      	cmp	r3, r2
 8000656:	d00d      	beq.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 7)
 8000658:	f5a2 12f8 	sub.w	r2, r2, #2031616	; 0x1f0000
 800065c:	4293      	cmp	r3, r2
 800065e:	d009      	beq.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 8)
 8000660:	f502 1280 	add.w	r2, r2, #1048576	; 0x100000
 8000664:	4293      	cmp	r3, r2
 8000666:	d005      	beq.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 9)
 8000668:	f502 1280 	add.w	r2, r2, #1048576	; 0x100000
 800066c:	4293      	cmp	r3, r2
 800066e:	d001      	beq.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 10)
 8000670:	2b03      	cmp	r3, #3
 8000672:	d109      	bne.n	8000688 <HAL_GPIO_Init+0xb4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:200
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 8000674:	68b3      	ldr	r3, [r6, #8]
 8000676:	2b02      	cmp	r3, #2
 8000678:	d80b      	bhi.n	8000692 <HAL_GPIO_Init+0xbe>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265 (discriminator 1)
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2];
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 800067a:	2400      	movs	r4, #0
 800067c:	e056      	b.n	800072c <HAL_GPIO_Init+0x158>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:198 (discriminator 1)
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 800067e:	21c6      	movs	r1, #198	; 0xc6
 8000680:	480d      	ldr	r0, [pc, #52]	; (80006b8 <HAL_GPIO_Init+0xe4>)
 8000682:	f000 fde3 	bl	800124c <assert_failed>
 8000686:	e7d3      	b.n	8000630 <HAL_GPIO_Init+0x5c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:199 (discriminator 11)
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 8000688:	21c7      	movs	r1, #199	; 0xc7
 800068a:	480b      	ldr	r0, [pc, #44]	; (80006b8 <HAL_GPIO_Init+0xe4>)
 800068c:	f000 fdde 	bl	800124c <assert_failed>
 8000690:	e7f0      	b.n	8000674 <HAL_GPIO_Init+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:200 (discriminator 1)
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 8000692:	21c8      	movs	r1, #200	; 0xc8
 8000694:	4808      	ldr	r0, [pc, #32]	; (80006b8 <HAL_GPIO_Init+0xe4>)
 8000696:	f000 fdd9 	bl	800124c <assert_failed>
 800069a:	e7ee      	b.n	800067a <HAL_GPIO_Init+0xa6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 36)
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 800069c:	21d9      	movs	r1, #217	; 0xd9
 800069e:	4806      	ldr	r0, [pc, #24]	; (80006b8 <HAL_GPIO_Init+0xe4>)
 80006a0:	f000 fdd4 	bl	800124c <assert_failed>
 80006a4:	e070      	b.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:236 (discriminator 1)
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 80006a6:	21ec      	movs	r1, #236	; 0xec
 80006a8:	4803      	ldr	r0, [pc, #12]	; (80006b8 <HAL_GPIO_Init+0xe4>)
 80006aa:	f000 fdcf 	bl	800124c <assert_failed>
 80006ae:	e098      	b.n	80007e2 <HAL_GPIO_Init+0x20e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80006b0:	2308      	movs	r3, #8
 80006b2:	e006      	b.n	80006c2 <HAL_GPIO_Init+0xee>
 80006b4:	40020000 	.word	0x40020000
 80006b8:	08003cd8 	.word	0x08003cd8
 80006bc:	10110000 	.word	0x10110000
 80006c0:	2300      	movs	r3, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265 (discriminator 36)
 80006c2:	408b      	lsls	r3, r1
 80006c4:	4303      	orrs	r3, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:266 (discriminator 36)
        SYSCFG->EXTICR[position >> 2] = temp;
 80006c6:	3202      	adds	r2, #2
 80006c8:	497c      	ldr	r1, [pc, #496]	; (80008bc <HAL_GPIO_Init+0x2e8>)
 80006ca:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:269 (discriminator 36)

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80006ce:	4b7c      	ldr	r3, [pc, #496]	; (80008c0 <HAL_GPIO_Init+0x2ec>)
 80006d0:	681a      	ldr	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:270 (discriminator 36)
        temp &= ~((uint32_t)iocurrent);
 80006d2:	ea6f 0308 	mvn.w	r3, r8
 80006d6:	ea22 0108 	bic.w	r1, r2, r8
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:271 (discriminator 36)
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80006da:	6870      	ldr	r0, [r6, #4]
 80006dc:	f410 3f80 	tst.w	r0, #65536	; 0x10000
 80006e0:	d001      	beq.n	80006e6 <HAL_GPIO_Init+0x112>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:273
        {
          temp |= iocurrent;
 80006e2:	ea48 0102 	orr.w	r1, r8, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:275
        }
        EXTI->IMR = temp;
 80006e6:	4a76      	ldr	r2, [pc, #472]	; (80008c0 <HAL_GPIO_Init+0x2ec>)
 80006e8:	6011      	str	r1, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:277

        temp = EXTI->EMR;
 80006ea:	6852      	ldr	r2, [r2, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:278
        temp &= ~((uint32_t)iocurrent);
 80006ec:	ea03 0102 	and.w	r1, r3, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:279
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80006f0:	6870      	ldr	r0, [r6, #4]
 80006f2:	f410 3f00 	tst.w	r0, #131072	; 0x20000
 80006f6:	d001      	beq.n	80006fc <HAL_GPIO_Init+0x128>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:281
        {
          temp |= iocurrent;
 80006f8:	ea48 0102 	orr.w	r1, r8, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:283
        }
        EXTI->EMR = temp;
 80006fc:	4a70      	ldr	r2, [pc, #448]	; (80008c0 <HAL_GPIO_Init+0x2ec>)
 80006fe:	6051      	str	r1, [r2, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:286

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8000700:	6892      	ldr	r2, [r2, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:287
        temp &= ~((uint32_t)iocurrent);
 8000702:	ea03 0102 	and.w	r1, r3, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:288
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8000706:	6870      	ldr	r0, [r6, #4]
 8000708:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
 800070c:	d001      	beq.n	8000712 <HAL_GPIO_Init+0x13e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:290
        {
          temp |= iocurrent;
 800070e:	ea48 0102 	orr.w	r1, r8, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:292
        }
        EXTI->RTSR = temp;
 8000712:	4a6b      	ldr	r2, [pc, #428]	; (80008c0 <HAL_GPIO_Init+0x2ec>)
 8000714:	6091      	str	r1, [r2, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:294

        temp = EXTI->FTSR;
 8000716:	68d2      	ldr	r2, [r2, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:295
        temp &= ~((uint32_t)iocurrent);
 8000718:	4013      	ands	r3, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:296
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800071a:	6871      	ldr	r1, [r6, #4]
 800071c:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8000720:	d001      	beq.n	8000726 <HAL_GPIO_Init+0x152>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:298
        {
          temp |= iocurrent;
 8000722:	ea48 0302 	orr.w	r3, r8, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:300
        }
        EXTI->FTSR = temp;
 8000726:	4a66      	ldr	r2, [pc, #408]	; (80008c0 <HAL_GPIO_Init+0x2ec>)
 8000728:	60d3      	str	r3, [r2, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:203 (discriminator 2)
  for(position = 0; position < GPIO_NUMBER; position++)
 800072a:	3401      	adds	r4, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:203 (discriminator 1)
 800072c:	2c0f      	cmp	r4, #15
 800072e:	f200 80c1 	bhi.w	80008b4 <HAL_GPIO_Init+0x2e0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:206
    ioposition = ((uint32_t)0x01) << position;
 8000732:	2501      	movs	r5, #1
 8000734:	40a5      	lsls	r5, r4
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:208
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8000736:	6833      	ldr	r3, [r6, #0]
 8000738:	ea03 0805 	and.w	r8, r3, r5
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:210
    if(iocurrent == ioposition)
 800073c:	ea35 0303 	bics.w	r3, r5, r3
 8000740:	d1f3      	bne.n	800072a <HAL_GPIO_Init+0x156>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:214
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8000742:	6873      	ldr	r3, [r6, #4]
 8000744:	2b02      	cmp	r3, #2
 8000746:	d001      	beq.n	800074c <HAL_GPIO_Init+0x178>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:214 (discriminator 1)
 8000748:	2b12      	cmp	r3, #18
 800074a:	d12d      	bne.n	80007a8 <HAL_GPIO_Init+0x1d4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 800074c:	6933      	ldr	r3, [r6, #16]
 800074e:	b1db      	cbz	r3, 8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 1)
 8000750:	2b09      	cmp	r3, #9
 8000752:	d019      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 6)
 8000754:	2b01      	cmp	r3, #1
 8000756:	d017      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 8)
 8000758:	2b02      	cmp	r3, #2
 800075a:	d015      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 11)
 800075c:	2b03      	cmp	r3, #3
 800075e:	d013      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 12)
 8000760:	2b04      	cmp	r3, #4
 8000762:	d011      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 15)
 8000764:	2b05      	cmp	r3, #5
 8000766:	d00f      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 18)
 8000768:	2b06      	cmp	r3, #6
 800076a:	d00d      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 20)
 800076c:	2b07      	cmp	r3, #7
 800076e:	d00b      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 23)
 8000770:	2b08      	cmp	r3, #8
 8000772:	d009      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 28)
 8000774:	2b0a      	cmp	r3, #10
 8000776:	d007      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 30)
 8000778:	2b0b      	cmp	r3, #11
 800077a:	d005      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 31)
 800077c:	2b0c      	cmp	r3, #12
 800077e:	d003      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 33)
 8000780:	2b0d      	cmp	r3, #13
 8000782:	d001      	beq.n	8000788 <HAL_GPIO_Init+0x1b4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:217 (discriminator 35)
 8000784:	2b0f      	cmp	r3, #15
 8000786:	d189      	bne.n	800069c <HAL_GPIO_Init+0xc8>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:219
        temp = GPIOx->AFR[position >> 3];
 8000788:	08e2      	lsrs	r2, r4, #3
 800078a:	3208      	adds	r2, #8
 800078c:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:220
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8000790:	f004 0307 	and.w	r3, r4, #7
 8000794:	0099      	lsls	r1, r3, #2
 8000796:	230f      	movs	r3, #15
 8000798:	408b      	lsls	r3, r1
 800079a:	ea20 0003 	bic.w	r0, r0, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:221
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800079e:	6933      	ldr	r3, [r6, #16]
 80007a0:	408b      	lsls	r3, r1
 80007a2:	4303      	orrs	r3, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:222
        GPIOx->AFR[position >> 3] = temp;
 80007a4:	f847 3022 	str.w	r3, [r7, r2, lsl #2]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:226
      temp = GPIOx->MODER;
 80007a8:	683a      	ldr	r2, [r7, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:227
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80007aa:	ea4f 0a44 	mov.w	sl, r4, lsl #1
 80007ae:	2303      	movs	r3, #3
 80007b0:	fa03 f30a 	lsl.w	r3, r3, sl
 80007b4:	ea6f 0903 	mvn.w	r9, r3
 80007b8:	ea22 0203 	bic.w	r2, r2, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:228
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80007bc:	6873      	ldr	r3, [r6, #4]
 80007be:	f003 0303 	and.w	r3, r3, #3
 80007c2:	fa03 f30a 	lsl.w	r3, r3, sl
 80007c6:	4313      	orrs	r3, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:229
      GPIOx->MODER = temp;
 80007c8:	603b      	str	r3, [r7, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:232
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80007ca:	6873      	ldr	r3, [r6, #4]
 80007cc:	1e5a      	subs	r2, r3, #1
 80007ce:	2a01      	cmp	r2, #1
 80007d0:	d903      	bls.n	80007da <HAL_GPIO_Init+0x206>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:232 (discriminator 1)
 80007d2:	2b11      	cmp	r3, #17
 80007d4:	d001      	beq.n	80007da <HAL_GPIO_Init+0x206>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:233
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80007d6:	2b12      	cmp	r3, #18
 80007d8:	d114      	bne.n	8000804 <HAL_GPIO_Init+0x230>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:236
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 80007da:	68f3      	ldr	r3, [r6, #12]
 80007dc:	2b03      	cmp	r3, #3
 80007de:	f63f af62 	bhi.w	80006a6 <HAL_GPIO_Init+0xd2>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:238
        temp = GPIOx->OSPEEDR; 
 80007e2:	68ba      	ldr	r2, [r7, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:239
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80007e4:	ea09 0202 	and.w	r2, r9, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:240
        temp |= (GPIO_Init->Speed << (position * 2));
 80007e8:	68f3      	ldr	r3, [r6, #12]
 80007ea:	fa03 f30a 	lsl.w	r3, r3, sl
 80007ee:	4313      	orrs	r3, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:241
        GPIOx->OSPEEDR = temp;
 80007f0:	60bb      	str	r3, [r7, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:244
        temp = GPIOx->OTYPER;
 80007f2:	687a      	ldr	r2, [r7, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:245
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80007f4:	ea22 0205 	bic.w	r2, r2, r5
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:246
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 80007f8:	6873      	ldr	r3, [r6, #4]
 80007fa:	f3c3 1500 	ubfx	r5, r3, #4, #1
 80007fe:	40a5      	lsls	r5, r4
 8000800:	4315      	orrs	r5, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:247
        GPIOx->OTYPER = temp;
 8000802:	607d      	str	r5, [r7, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:251
      temp = GPIOx->PUPDR;
 8000804:	68fb      	ldr	r3, [r7, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:252
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8000806:	ea09 0903 	and.w	r9, r9, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:253
      temp |= ((GPIO_Init->Pull) << (position * 2));
 800080a:	68b3      	ldr	r3, [r6, #8]
 800080c:	fa03 f30a 	lsl.w	r3, r3, sl
 8000810:	ea43 0309 	orr.w	r3, r3, r9
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:254
      GPIOx->PUPDR = temp;
 8000814:	60fb      	str	r3, [r7, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:258
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8000816:	6873      	ldr	r3, [r6, #4]
 8000818:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
 800081c:	d085      	beq.n	800072a <HAL_GPIO_Init+0x156>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:261
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800081e:	4b29      	ldr	r3, [pc, #164]	; (80008c4 <HAL_GPIO_Init+0x2f0>)
 8000820:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000822:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000826:	645a      	str	r2, [r3, #68]	; 0x44
 8000828:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800082a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800082e:	9301      	str	r3, [sp, #4]
 8000830:	9b01      	ldr	r3, [sp, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:263
        temp = SYSCFG->EXTICR[position >> 2];
 8000832:	08a2      	lsrs	r2, r4, #2
 8000834:	1c91      	adds	r1, r2, #2
 8000836:	4b21      	ldr	r3, [pc, #132]	; (80008bc <HAL_GPIO_Init+0x2e8>)
 8000838:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:264
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800083c:	f004 0303 	and.w	r3, r4, #3
 8000840:	0099      	lsls	r1, r3, #2
 8000842:	230f      	movs	r3, #15
 8000844:	408b      	lsls	r3, r1
 8000846:	ea20 0003 	bic.w	r0, r0, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 800084a:	4b1f      	ldr	r3, [pc, #124]	; (80008c8 <HAL_GPIO_Init+0x2f4>)
 800084c:	429f      	cmp	r7, r3
 800084e:	f43f af37 	beq.w	80006c0 <HAL_GPIO_Init+0xec>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265 (discriminator 1)
 8000852:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000856:	429f      	cmp	r7, r3
 8000858:	d01e      	beq.n	8000898 <HAL_GPIO_Init+0x2c4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265 (discriminator 3)
 800085a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800085e:	429f      	cmp	r7, r3
 8000860:	d01c      	beq.n	800089c <HAL_GPIO_Init+0x2c8>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265 (discriminator 5)
 8000862:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000866:	429f      	cmp	r7, r3
 8000868:	d01a      	beq.n	80008a0 <HAL_GPIO_Init+0x2cc>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265 (discriminator 7)
 800086a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800086e:	429f      	cmp	r7, r3
 8000870:	d018      	beq.n	80008a4 <HAL_GPIO_Init+0x2d0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265 (discriminator 9)
 8000872:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000876:	429f      	cmp	r7, r3
 8000878:	d016      	beq.n	80008a8 <HAL_GPIO_Init+0x2d4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265 (discriminator 11)
 800087a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800087e:	429f      	cmp	r7, r3
 8000880:	d014      	beq.n	80008ac <HAL_GPIO_Init+0x2d8>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265 (discriminator 13)
 8000882:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000886:	429f      	cmp	r7, r3
 8000888:	d012      	beq.n	80008b0 <HAL_GPIO_Init+0x2dc>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265 (discriminator 15)
 800088a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800088e:	429f      	cmp	r7, r3
 8000890:	f43f af0e 	beq.w	80006b0 <HAL_GPIO_Init+0xdc>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:265
 8000894:	2309      	movs	r3, #9
 8000896:	e714      	b.n	80006c2 <HAL_GPIO_Init+0xee>
 8000898:	2301      	movs	r3, #1
 800089a:	e712      	b.n	80006c2 <HAL_GPIO_Init+0xee>
 800089c:	2302      	movs	r3, #2
 800089e:	e710      	b.n	80006c2 <HAL_GPIO_Init+0xee>
 80008a0:	2303      	movs	r3, #3
 80008a2:	e70e      	b.n	80006c2 <HAL_GPIO_Init+0xee>
 80008a4:	2304      	movs	r3, #4
 80008a6:	e70c      	b.n	80006c2 <HAL_GPIO_Init+0xee>
 80008a8:	2305      	movs	r3, #5
 80008aa:	e70a      	b.n	80006c2 <HAL_GPIO_Init+0xee>
 80008ac:	2306      	movs	r3, #6
 80008ae:	e708      	b.n	80006c2 <HAL_GPIO_Init+0xee>
 80008b0:	2307      	movs	r3, #7
 80008b2:	e706      	b.n	80006c2 <HAL_GPIO_Init+0xee>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:304
      }
    }
  }
}
 80008b4:	b002      	add	sp, #8
 80008b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80008ba:	bf00      	nop
 80008bc:	40013800 	.word	0x40013800
 80008c0:	40013c00 	.word	0x40013c00
 80008c4:	40023800 	.word	0x40023800
 80008c8:	40020000 	.word	0x40020000

080008cc <HAL_GPIO_WritePin>:
HAL_GPIO_WritePin():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:431
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80008cc:	b570      	push	{r4, r5, r6, lr}
 80008ce:	4605      	mov	r5, r0
 80008d0:	4614      	mov	r4, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:433
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
 80008d2:	460e      	mov	r6, r1
 80008d4:	b121      	cbz	r1, 80008e0 <HAL_GPIO_WritePin+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:434
  assert_param(IS_GPIO_PIN_ACTION(PinState));
 80008d6:	2c01      	cmp	r4, #1
 80008d8:	d808      	bhi.n	80008ec <HAL_GPIO_WritePin+0x20>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:436

  if(PinState != GPIO_PIN_RESET)
 80008da:	b16c      	cbz	r4, 80008f8 <HAL_GPIO_WritePin+0x2c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:438
  {
    GPIOx->BSRR = GPIO_Pin;
 80008dc:	61ae      	str	r6, [r5, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:444
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
  }
}
 80008de:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:433 (discriminator 1)
  assert_param(IS_GPIO_PIN(GPIO_Pin));
 80008e0:	f240 11b1 	movw	r1, #433	; 0x1b1
 80008e4:	4806      	ldr	r0, [pc, #24]	; (8000900 <HAL_GPIO_WritePin+0x34>)
 80008e6:	f000 fcb1 	bl	800124c <assert_failed>
 80008ea:	e7f4      	b.n	80008d6 <HAL_GPIO_WritePin+0xa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:434 (discriminator 1)
  assert_param(IS_GPIO_PIN_ACTION(PinState));
 80008ec:	f44f 71d9 	mov.w	r1, #434	; 0x1b2
 80008f0:	4803      	ldr	r0, [pc, #12]	; (8000900 <HAL_GPIO_WritePin+0x34>)
 80008f2:	f000 fcab 	bl	800124c <assert_failed>
 80008f6:	e7f0      	b.n	80008da <HAL_GPIO_WritePin+0xe>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:442
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 80008f8:	0436      	lsls	r6, r6, #16
 80008fa:	61ae      	str	r6, [r5, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_gpio.c:444
}
 80008fc:	e7ef      	b.n	80008de <HAL_GPIO_WritePin+0x12>
 80008fe:	bf00      	nop
 8000900:	08003cd8 	.word	0x08003cd8

08000904 <HAL_RCC_OscConfig>:
HAL_RCC_OscConfig():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:275
  *         contains the configuration information for the RCC Oscillators.
  * @note   The PLL is not disabled when used as system clock.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8000904:	b530      	push	{r4, r5, lr}
 8000906:	b083      	sub	sp, #12
 8000908:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:279
 uint32_t tickstart = 0;  
 
  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 800090a:	6803      	ldr	r3, [r0, #0]
 800090c:	2b0f      	cmp	r3, #15
 800090e:	d84f      	bhi.n	80009b0 <HAL_RCC_OscConfig+0xac>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:281
  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8000910:	6823      	ldr	r3, [r4, #0]
 8000912:	f013 0f01 	tst.w	r3, #1
 8000916:	d01e      	beq.n	8000956 <HAL_RCC_OscConfig+0x52>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:284
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 8000918:	6863      	ldr	r3, [r4, #4]
 800091a:	2b01      	cmp	r3, #1
 800091c:	d901      	bls.n	8000922 <HAL_RCC_OscConfig+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:284 (discriminator 1)
 800091e:	2b05      	cmp	r3, #5
 8000920:	d14c      	bne.n	80009bc <HAL_RCC_OscConfig+0xb8>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:286
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8000922:	4ba8      	ldr	r3, [pc, #672]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000924:	689b      	ldr	r3, [r3, #8]
 8000926:	f003 030c 	and.w	r3, r3, #12
 800092a:	2b04      	cmp	r3, #4
 800092c:	d00a      	beq.n	8000944 <HAL_RCC_OscConfig+0x40>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:287 (discriminator 1)
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800092e:	4ba5      	ldr	r3, [pc, #660]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000930:	689b      	ldr	r3, [r3, #8]
 8000932:	f003 030c 	and.w	r3, r3, #12
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:286 (discriminator 1)
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8000936:	2b08      	cmp	r3, #8
 8000938:	d146      	bne.n	80009c8 <HAL_RCC_OscConfig+0xc4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:287
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800093a:	4ba2      	ldr	r3, [pc, #648]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 800093c:	685b      	ldr	r3, [r3, #4]
 800093e:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8000942:	d041      	beq.n	80009c8 <HAL_RCC_OscConfig+0xc4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:289
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8000944:	4b9f      	ldr	r3, [pc, #636]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000946:	681b      	ldr	r3, [r3, #0]
 8000948:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 800094c:	d003      	beq.n	8000956 <HAL_RCC_OscConfig+0x52>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:289 (discriminator 1)
 800094e:	6863      	ldr	r3, [r4, #4]
 8000950:	2b00      	cmp	r3, #0
 8000952:	f000 8216 	beq.w	8000d82 <HAL_RCC_OscConfig+0x47e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:346
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8000956:	6823      	ldr	r3, [r4, #0]
 8000958:	f013 0f02 	tst.w	r3, #2
 800095c:	f000 8098 	beq.w	8000a90 <HAL_RCC_OscConfig+0x18c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:349
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 8000960:	68e3      	ldr	r3, [r4, #12]
 8000962:	2b01      	cmp	r3, #1
 8000964:	d86b      	bhi.n	8000a3e <HAL_RCC_OscConfig+0x13a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:350
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 8000966:	6923      	ldr	r3, [r4, #16]
 8000968:	2b1f      	cmp	r3, #31
 800096a:	d86e      	bhi.n	8000a4a <HAL_RCC_OscConfig+0x146>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:353
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800096c:	4b95      	ldr	r3, [pc, #596]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 800096e:	689b      	ldr	r3, [r3, #8]
 8000970:	f013 0f0c 	tst.w	r3, #12
 8000974:	d074      	beq.n	8000a60 <HAL_RCC_OscConfig+0x15c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:354 (discriminator 1)
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8000976:	4b93      	ldr	r3, [pc, #588]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000978:	689b      	ldr	r3, [r3, #8]
 800097a:	f003 030c 	and.w	r3, r3, #12
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:353 (discriminator 1)
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800097e:	2b08      	cmp	r3, #8
 8000980:	d069      	beq.n	8000a56 <HAL_RCC_OscConfig+0x152>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:371
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8000982:	68e3      	ldr	r3, [r4, #12]
 8000984:	2b00      	cmp	r3, #0
 8000986:	f000 80b0 	beq.w	8000aea <HAL_RCC_OscConfig+0x1e6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:374
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800098a:	4b8f      	ldr	r3, [pc, #572]	; (8000bc8 <HAL_RCC_OscConfig+0x2c4>)
 800098c:	2201      	movs	r2, #1
 800098e:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:377

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8000990:	f7ff fd86 	bl	80004a0 <HAL_GetTick>
 8000994:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:380

        /* Wait till HSI is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8000996:	4b8b      	ldr	r3, [pc, #556]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000998:	681b      	ldr	r3, [r3, #0]
 800099a:	f013 0f02 	tst.w	r3, #2
 800099e:	f040 8094 	bne.w	8000aca <HAL_RCC_OscConfig+0x1c6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:382
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80009a2:	f7ff fd7d 	bl	80004a0 <HAL_GetTick>
 80009a6:	1b40      	subs	r0, r0, r5
 80009a8:	2864      	cmp	r0, #100	; 0x64
 80009aa:	d9f4      	bls.n	8000996 <HAL_RCC_OscConfig+0x92>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:384
          {
            return HAL_TIMEOUT;
 80009ac:	2003      	movs	r0, #3
 80009ae:	e1ed      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:279 (discriminator 1)
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 80009b0:	f240 1117 	movw	r1, #279	; 0x117
 80009b4:	4885      	ldr	r0, [pc, #532]	; (8000bcc <HAL_RCC_OscConfig+0x2c8>)
 80009b6:	f000 fc49 	bl	800124c <assert_failed>
 80009ba:	e7a9      	b.n	8000910 <HAL_RCC_OscConfig+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:284 (discriminator 2)
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 80009bc:	f44f 718e 	mov.w	r1, #284	; 0x11c
 80009c0:	4882      	ldr	r0, [pc, #520]	; (8000bcc <HAL_RCC_OscConfig+0x2c8>)
 80009c2:	f000 fc43 	bl	800124c <assert_failed>
 80009c6:	e7ac      	b.n	8000922 <HAL_RCC_OscConfig+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:297
      __HAL_RCC_HSE_CONFIG(RCC_HSE_OFF);
 80009c8:	4b7e      	ldr	r3, [pc, #504]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 80009ca:	2200      	movs	r2, #0
 80009cc:	709a      	strb	r2, [r3, #2]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:300
      tickstart = HAL_GetTick();
 80009ce:	f7ff fd67 	bl	80004a0 <HAL_GetTick>
 80009d2:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:303
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80009d4:	4b7b      	ldr	r3, [pc, #492]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80009dc:	d008      	beq.n	80009f0 <HAL_RCC_OscConfig+0xec>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:305
        if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80009de:	f7ff fd5f 	bl	80004a0 <HAL_GetTick>
 80009e2:	1b40      	subs	r0, r0, r5
 80009e4:	f241 3388 	movw	r3, #5000	; 0x1388
 80009e8:	4298      	cmp	r0, r3
 80009ea:	d9f3      	bls.n	80009d4 <HAL_RCC_OscConfig+0xd0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:307
          return HAL_TIMEOUT;
 80009ec:	2003      	movs	r0, #3
 80009ee:	e1cd      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:312
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80009f0:	7922      	ldrb	r2, [r4, #4]
 80009f2:	4b74      	ldr	r3, [pc, #464]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 80009f4:	709a      	strb	r2, [r3, #2]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:315
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80009f6:	6863      	ldr	r3, [r4, #4]
 80009f8:	b183      	cbz	r3, 8000a1c <HAL_RCC_OscConfig+0x118>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:318
        tickstart = HAL_GetTick();
 80009fa:	f7ff fd51 	bl	80004a0 <HAL_GetTick>
 80009fe:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:321
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8000a00:	4b70      	ldr	r3, [pc, #448]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000a02:	681b      	ldr	r3, [r3, #0]
 8000a04:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8000a08:	d1a5      	bne.n	8000956 <HAL_RCC_OscConfig+0x52>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:323
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8000a0a:	f7ff fd49 	bl	80004a0 <HAL_GetTick>
 8000a0e:	1b40      	subs	r0, r0, r5
 8000a10:	f241 3388 	movw	r3, #5000	; 0x1388
 8000a14:	4298      	cmp	r0, r3
 8000a16:	d9f3      	bls.n	8000a00 <HAL_RCC_OscConfig+0xfc>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:325
            return HAL_TIMEOUT;
 8000a18:	2003      	movs	r0, #3
 8000a1a:	e1b7      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:332
        tickstart = HAL_GetTick();
 8000a1c:	f7ff fd40 	bl	80004a0 <HAL_GetTick>
 8000a20:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:335
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8000a22:	4b68      	ldr	r3, [pc, #416]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000a24:	681b      	ldr	r3, [r3, #0]
 8000a26:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8000a2a:	d094      	beq.n	8000956 <HAL_RCC_OscConfig+0x52>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:337
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8000a2c:	f7ff fd38 	bl	80004a0 <HAL_GetTick>
 8000a30:	1b40      	subs	r0, r0, r5
 8000a32:	f241 3388 	movw	r3, #5000	; 0x1388
 8000a36:	4298      	cmp	r0, r3
 8000a38:	d9f3      	bls.n	8000a22 <HAL_RCC_OscConfig+0x11e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:339
            return HAL_TIMEOUT;
 8000a3a:	2003      	movs	r0, #3
 8000a3c:	e1a6      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:349 (discriminator 1)
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 8000a3e:	f240 115d 	movw	r1, #349	; 0x15d
 8000a42:	4862      	ldr	r0, [pc, #392]	; (8000bcc <HAL_RCC_OscConfig+0x2c8>)
 8000a44:	f000 fc02 	bl	800124c <assert_failed>
 8000a48:	e78d      	b.n	8000966 <HAL_RCC_OscConfig+0x62>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:350 (discriminator 1)
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 8000a4a:	f44f 71af 	mov.w	r1, #350	; 0x15e
 8000a4e:	485f      	ldr	r0, [pc, #380]	; (8000bcc <HAL_RCC_OscConfig+0x2c8>)
 8000a50:	f000 fbfc 	bl	800124c <assert_failed>
 8000a54:	e78a      	b.n	800096c <HAL_RCC_OscConfig+0x68>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:354
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8000a56:	4b5b      	ldr	r3, [pc, #364]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000a58:	685b      	ldr	r3, [r3, #4]
 8000a5a:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8000a5e:	d190      	bne.n	8000982 <HAL_RCC_OscConfig+0x7e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:357
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8000a60:	4b58      	ldr	r3, [pc, #352]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000a62:	681b      	ldr	r3, [r3, #0]
 8000a64:	f013 0f02 	tst.w	r3, #2
 8000a68:	d003      	beq.n	8000a72 <HAL_RCC_OscConfig+0x16e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:357 (discriminator 1)
 8000a6a:	68e3      	ldr	r3, [r4, #12]
 8000a6c:	2b01      	cmp	r3, #1
 8000a6e:	f040 818a 	bne.w	8000d86 <HAL_RCC_OscConfig+0x482>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:365
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8000a72:	4854      	ldr	r0, [pc, #336]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000a74:	6802      	ldr	r2, [r0, #0]
 8000a76:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8000a7a:	6921      	ldr	r1, [r4, #16]
__RBIT():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:478
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000a7c:	23f8      	movs	r3, #248	; 0xf8
 8000a7e:	fa93 f3a3 	rbit	r3, r3
__CLZ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:653
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8000a82:	fab3 f383 	clz	r3, r3
HAL_RCC_OscConfig():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:365
 8000a86:	b2db      	uxtb	r3, r3
 8000a88:	fa01 f303 	lsl.w	r3, r1, r3
 8000a8c:	4313      	orrs	r3, r2
 8000a8e:	6003      	str	r3, [r0, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:411
        } 
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8000a90:	6823      	ldr	r3, [r4, #0]
 8000a92:	f013 0f08 	tst.w	r3, #8
 8000a96:	d053      	beq.n	8000b40 <HAL_RCC_OscConfig+0x23c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:414
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 8000a98:	6963      	ldr	r3, [r4, #20]
 8000a9a:	2b01      	cmp	r3, #1
 8000a9c:	d837      	bhi.n	8000b0e <HAL_RCC_OscConfig+0x20a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:417

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8000a9e:	6963      	ldr	r3, [r4, #20]
 8000aa0:	2b00      	cmp	r3, #0
 8000aa2:	d03a      	beq.n	8000b1a <HAL_RCC_OscConfig+0x216>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:420
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8000aa4:	4b48      	ldr	r3, [pc, #288]	; (8000bc8 <HAL_RCC_OscConfig+0x2c4>)
 8000aa6:	2201      	movs	r2, #1
 8000aa8:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:423
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8000aac:	f7ff fcf8 	bl	80004a0 <HAL_GetTick>
 8000ab0:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:426
      
      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8000ab2:	4b44      	ldr	r3, [pc, #272]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000ab4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8000ab6:	f013 0f02 	tst.w	r3, #2
 8000aba:	d141      	bne.n	8000b40 <HAL_RCC_OscConfig+0x23c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:428
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8000abc:	f7ff fcf0 	bl	80004a0 <HAL_GetTick>
 8000ac0:	1b40      	subs	r0, r0, r5
 8000ac2:	2864      	cmp	r0, #100	; 0x64
 8000ac4:	d9f5      	bls.n	8000ab2 <HAL_RCC_OscConfig+0x1ae>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:430
        {
          return HAL_TIMEOUT;
 8000ac6:	2003      	movs	r0, #3
 8000ac8:	e160      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:389
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8000aca:	483e      	ldr	r0, [pc, #248]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000acc:	6802      	ldr	r2, [r0, #0]
 8000ace:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8000ad2:	6921      	ldr	r1, [r4, #16]
__RBIT():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:478
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000ad4:	23f8      	movs	r3, #248	; 0xf8
 8000ad6:	fa93 f3a3 	rbit	r3, r3
__CLZ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:653
  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8000ada:	fab3 f383 	clz	r3, r3
HAL_RCC_OscConfig():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:389
 8000ade:	b2db      	uxtb	r3, r3
 8000ae0:	fa01 f303 	lsl.w	r3, r1, r3
 8000ae4:	4313      	orrs	r3, r2
 8000ae6:	6003      	str	r3, [r0, #0]
 8000ae8:	e7d2      	b.n	8000a90 <HAL_RCC_OscConfig+0x18c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:394
        __HAL_RCC_HSI_DISABLE();
 8000aea:	4b37      	ldr	r3, [pc, #220]	; (8000bc8 <HAL_RCC_OscConfig+0x2c4>)
 8000aec:	2200      	movs	r2, #0
 8000aee:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:397
        tickstart = HAL_GetTick();
 8000af0:	f7ff fcd6 	bl	80004a0 <HAL_GetTick>
 8000af4:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:400
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8000af6:	4b33      	ldr	r3, [pc, #204]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000af8:	681b      	ldr	r3, [r3, #0]
 8000afa:	f013 0f02 	tst.w	r3, #2
 8000afe:	d0c7      	beq.n	8000a90 <HAL_RCC_OscConfig+0x18c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:402
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8000b00:	f7ff fcce 	bl	80004a0 <HAL_GetTick>
 8000b04:	1b40      	subs	r0, r0, r5
 8000b06:	2864      	cmp	r0, #100	; 0x64
 8000b08:	d9f5      	bls.n	8000af6 <HAL_RCC_OscConfig+0x1f2>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:404
            return HAL_TIMEOUT;
 8000b0a:	2003      	movs	r0, #3
 8000b0c:	e13e      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:414 (discriminator 1)
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 8000b0e:	f44f 71cf 	mov.w	r1, #414	; 0x19e
 8000b12:	482e      	ldr	r0, [pc, #184]	; (8000bcc <HAL_RCC_OscConfig+0x2c8>)
 8000b14:	f000 fb9a 	bl	800124c <assert_failed>
 8000b18:	e7c1      	b.n	8000a9e <HAL_RCC_OscConfig+0x19a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:437
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8000b1a:	4b2b      	ldr	r3, [pc, #172]	; (8000bc8 <HAL_RCC_OscConfig+0x2c4>)
 8000b1c:	2200      	movs	r2, #0
 8000b1e:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:440
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8000b22:	f7ff fcbd 	bl	80004a0 <HAL_GetTick>
 8000b26:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:443
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8000b28:	4b26      	ldr	r3, [pc, #152]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000b2a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8000b2c:	f013 0f02 	tst.w	r3, #2
 8000b30:	d006      	beq.n	8000b40 <HAL_RCC_OscConfig+0x23c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:445
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8000b32:	f7ff fcb5 	bl	80004a0 <HAL_GetTick>
 8000b36:	1b40      	subs	r0, r0, r5
 8000b38:	2864      	cmp	r0, #100	; 0x64
 8000b3a:	d9f5      	bls.n	8000b28 <HAL_RCC_OscConfig+0x224>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:447
        {
          return HAL_TIMEOUT;
 8000b3c:	2003      	movs	r0, #3
 8000b3e:	e125      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:453
        }       
      } 
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8000b40:	6823      	ldr	r3, [r4, #0]
 8000b42:	f013 0f04 	tst.w	r3, #4
 8000b46:	d06d      	beq.n	8000c24 <HAL_RCC_OscConfig+0x320>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:456
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 8000b48:	68a3      	ldr	r3, [r4, #8]
 8000b4a:	2b01      	cmp	r3, #1
 8000b4c:	d901      	bls.n	8000b52 <HAL_RCC_OscConfig+0x24e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:456 (discriminator 1)
 8000b4e:	2b05      	cmp	r3, #5
 8000b50:	d11d      	bne.n	8000b8e <HAL_RCC_OscConfig+0x28a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:459
    
    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8000b52:	4b1c      	ldr	r3, [pc, #112]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000b54:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000b56:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000b5a:	641a      	str	r2, [r3, #64]	; 0x40
 8000b5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000b5e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000b62:	9301      	str	r3, [sp, #4]
 8000b64:	9b01      	ldr	r3, [sp, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:462
    
    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8000b66:	4a1a      	ldr	r2, [pc, #104]	; (8000bd0 <HAL_RCC_OscConfig+0x2cc>)
 8000b68:	6813      	ldr	r3, [r2, #0]
 8000b6a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000b6e:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:465
    
    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8000b70:	f7ff fc96 	bl	80004a0 <HAL_GetTick>
 8000b74:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:467
    
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8000b76:	4b16      	ldr	r3, [pc, #88]	; (8000bd0 <HAL_RCC_OscConfig+0x2cc>)
 8000b78:	681b      	ldr	r3, [r3, #0]
 8000b7a:	f413 7f80 	tst.w	r3, #256	; 0x100
 8000b7e:	d10c      	bne.n	8000b9a <HAL_RCC_OscConfig+0x296>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:469
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8000b80:	f7ff fc8e 	bl	80004a0 <HAL_GetTick>
 8000b84:	1b40      	subs	r0, r0, r5
 8000b86:	2864      	cmp	r0, #100	; 0x64
 8000b88:	d9f5      	bls.n	8000b76 <HAL_RCC_OscConfig+0x272>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:471
      {
        return HAL_TIMEOUT;
 8000b8a:	2003      	movs	r0, #3
 8000b8c:	e0fe      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:456 (discriminator 2)
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 8000b8e:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 8000b92:	480e      	ldr	r0, [pc, #56]	; (8000bcc <HAL_RCC_OscConfig+0x2c8>)
 8000b94:	f000 fb5a 	bl	800124c <assert_failed>
 8000b98:	e7db      	b.n	8000b52 <HAL_RCC_OscConfig+0x24e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:476
      }      
    }
    
    /* Reset LSEON and LSEBYP bits before configuring the LSE ----------------*/
    __HAL_RCC_LSE_CONFIG(RCC_LSE_OFF);
 8000b9a:	4b0a      	ldr	r3, [pc, #40]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000b9c:	2200      	movs	r2, #0
 8000b9e:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:479
    
    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8000ba2:	f7ff fc7d 	bl	80004a0 <HAL_GetTick>
 8000ba6:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:482
    
    /* Wait till LSE is ready */  
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8000ba8:	4b06      	ldr	r3, [pc, #24]	; (8000bc4 <HAL_RCC_OscConfig+0x2c0>)
 8000baa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000bac:	f013 0f02 	tst.w	r3, #2
 8000bb0:	d010      	beq.n	8000bd4 <HAL_RCC_OscConfig+0x2d0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:484
    {
      if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000bb2:	f7ff fc75 	bl	80004a0 <HAL_GetTick>
 8000bb6:	1b40      	subs	r0, r0, r5
 8000bb8:	f241 3388 	movw	r3, #5000	; 0x1388
 8000bbc:	4298      	cmp	r0, r3
 8000bbe:	d9f3      	bls.n	8000ba8 <HAL_RCC_OscConfig+0x2a4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:486
      {
        return HAL_TIMEOUT;
 8000bc0:	2003      	movs	r0, #3
 8000bc2:	e0e3      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
 8000bc4:	40023800 	.word	0x40023800
 8000bc8:	42470000 	.word	0x42470000
 8000bcc:	08003d08 	.word	0x08003d08
 8000bd0:	40007000 	.word	0x40007000
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:491
      }    
    } 
    
    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8000bd4:	7a22      	ldrb	r2, [r4, #8]
 8000bd6:	4b6f      	ldr	r3, [pc, #444]	; (8000d94 <HAL_RCC_OscConfig+0x490>)
 8000bd8:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:493
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8000bdc:	68a3      	ldr	r3, [r4, #8]
 8000bde:	b183      	cbz	r3, 8000c02 <HAL_RCC_OscConfig+0x2fe>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:496
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8000be0:	f7ff fc5e 	bl	80004a0 <HAL_GetTick>
 8000be4:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:499
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8000be6:	4b6b      	ldr	r3, [pc, #428]	; (8000d94 <HAL_RCC_OscConfig+0x490>)
 8000be8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000bea:	f013 0f02 	tst.w	r3, #2
 8000bee:	d119      	bne.n	8000c24 <HAL_RCC_OscConfig+0x320>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:501
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000bf0:	f7ff fc56 	bl	80004a0 <HAL_GetTick>
 8000bf4:	1b40      	subs	r0, r0, r5
 8000bf6:	f241 3388 	movw	r3, #5000	; 0x1388
 8000bfa:	4298      	cmp	r0, r3
 8000bfc:	d9f3      	bls.n	8000be6 <HAL_RCC_OscConfig+0x2e2>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:503
        {
          return HAL_TIMEOUT;
 8000bfe:	2003      	movs	r0, #3
 8000c00:	e0c4      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:510
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8000c02:	f7ff fc4d 	bl	80004a0 <HAL_GetTick>
 8000c06:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:513
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8000c08:	4b62      	ldr	r3, [pc, #392]	; (8000d94 <HAL_RCC_OscConfig+0x490>)
 8000c0a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000c0c:	f013 0f02 	tst.w	r3, #2
 8000c10:	d008      	beq.n	8000c24 <HAL_RCC_OscConfig+0x320>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:515
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000c12:	f7ff fc45 	bl	80004a0 <HAL_GetTick>
 8000c16:	1b40      	subs	r0, r0, r5
 8000c18:	f241 3388 	movw	r3, #5000	; 0x1388
 8000c1c:	4298      	cmp	r0, r3
 8000c1e:	d9f3      	bls.n	8000c08 <HAL_RCC_OscConfig+0x304>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:517
        {
          return HAL_TIMEOUT;
 8000c20:	2003      	movs	r0, #3
 8000c22:	e0b3      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:524
      }
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 8000c24:	69a3      	ldr	r3, [r4, #24]
 8000c26:	2b02      	cmp	r3, #2
 8000c28:	d838      	bhi.n	8000c9c <HAL_RCC_OscConfig+0x398>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:525
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8000c2a:	69a3      	ldr	r3, [r4, #24]
 8000c2c:	2b00      	cmp	r3, #0
 8000c2e:	f000 80ac 	beq.w	8000d8a <HAL_RCC_OscConfig+0x486>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:528
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8000c32:	4a58      	ldr	r2, [pc, #352]	; (8000d94 <HAL_RCC_OscConfig+0x490>)
 8000c34:	6892      	ldr	r2, [r2, #8]
 8000c36:	f002 020c 	and.w	r2, r2, #12
 8000c3a:	2a08      	cmp	r2, #8
 8000c3c:	f000 80a8 	beq.w	8000d90 <HAL_RCC_OscConfig+0x48c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:530
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8000c40:	2b02      	cmp	r3, #2
 8000c42:	f040 808a 	bne.w	8000d5a <HAL_RCC_OscConfig+0x456>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:533
      {
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 8000c46:	69e3      	ldr	r3, [r4, #28]
 8000c48:	b113      	cbz	r3, 8000c50 <HAL_RCC_OscConfig+0x34c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:533 (discriminator 1)
 8000c4a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8000c4e:	d12b      	bne.n	8000ca8 <HAL_RCC_OscConfig+0x3a4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:534
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 8000c50:	6a23      	ldr	r3, [r4, #32]
 8000c52:	2b3f      	cmp	r3, #63	; 0x3f
 8000c54:	d82e      	bhi.n	8000cb4 <HAL_RCC_OscConfig+0x3b0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:535
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 8000c56:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000c58:	3bc0      	subs	r3, #192	; 0xc0
 8000c5a:	2bf0      	cmp	r3, #240	; 0xf0
 8000c5c:	d830      	bhi.n	8000cc0 <HAL_RCC_OscConfig+0x3bc>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:536
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 8000c5e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000c60:	2b02      	cmp	r3, #2
 8000c62:	d005      	beq.n	8000c70 <HAL_RCC_OscConfig+0x36c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:536 (discriminator 1)
 8000c64:	2b04      	cmp	r3, #4
 8000c66:	d003      	beq.n	8000c70 <HAL_RCC_OscConfig+0x36c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:536 (discriminator 2)
 8000c68:	2b06      	cmp	r3, #6
 8000c6a:	d001      	beq.n	8000c70 <HAL_RCC_OscConfig+0x36c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:536 (discriminator 3)
 8000c6c:	2b08      	cmp	r3, #8
 8000c6e:	d12d      	bne.n	8000ccc <HAL_RCC_OscConfig+0x3c8>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:537
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 8000c70:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000c72:	3b04      	subs	r3, #4
 8000c74:	2b0b      	cmp	r3, #11
 8000c76:	d82f      	bhi.n	8000cd8 <HAL_RCC_OscConfig+0x3d4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:540
      
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8000c78:	4b47      	ldr	r3, [pc, #284]	; (8000d98 <HAL_RCC_OscConfig+0x494>)
 8000c7a:	2200      	movs	r2, #0
 8000c7c:	661a      	str	r2, [r3, #96]	; 0x60
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:543
        
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8000c7e:	f7ff fc0f 	bl	80004a0 <HAL_GetTick>
 8000c82:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:546
        
        /* Wait till PLL is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8000c84:	4b43      	ldr	r3, [pc, #268]	; (8000d94 <HAL_RCC_OscConfig+0x490>)
 8000c86:	681b      	ldr	r3, [r3, #0]
 8000c88:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8000c8c:	d02a      	beq.n	8000ce4 <HAL_RCC_OscConfig+0x3e0>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:548
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000c8e:	f7ff fc07 	bl	80004a0 <HAL_GetTick>
 8000c92:	1b40      	subs	r0, r0, r5
 8000c94:	2864      	cmp	r0, #100	; 0x64
 8000c96:	d9f5      	bls.n	8000c84 <HAL_RCC_OscConfig+0x380>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:550
          {
            return HAL_TIMEOUT;
 8000c98:	2003      	movs	r0, #3
 8000c9a:	e077      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:524 (discriminator 1)
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 8000c9c:	f44f 7103 	mov.w	r1, #524	; 0x20c
 8000ca0:	483e      	ldr	r0, [pc, #248]	; (8000d9c <HAL_RCC_OscConfig+0x498>)
 8000ca2:	f000 fad3 	bl	800124c <assert_failed>
 8000ca6:	e7c0      	b.n	8000c2a <HAL_RCC_OscConfig+0x326>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:533 (discriminator 2)
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 8000ca8:	f240 2115 	movw	r1, #533	; 0x215
 8000cac:	483b      	ldr	r0, [pc, #236]	; (8000d9c <HAL_RCC_OscConfig+0x498>)
 8000cae:	f000 facd 	bl	800124c <assert_failed>
 8000cb2:	e7cd      	b.n	8000c50 <HAL_RCC_OscConfig+0x34c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:534 (discriminator 1)
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 8000cb4:	f240 2116 	movw	r1, #534	; 0x216
 8000cb8:	4838      	ldr	r0, [pc, #224]	; (8000d9c <HAL_RCC_OscConfig+0x498>)
 8000cba:	f000 fac7 	bl	800124c <assert_failed>
 8000cbe:	e7ca      	b.n	8000c56 <HAL_RCC_OscConfig+0x352>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:535 (discriminator 1)
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 8000cc0:	f240 2117 	movw	r1, #535	; 0x217
 8000cc4:	4835      	ldr	r0, [pc, #212]	; (8000d9c <HAL_RCC_OscConfig+0x498>)
 8000cc6:	f000 fac1 	bl	800124c <assert_failed>
 8000cca:	e7c8      	b.n	8000c5e <HAL_RCC_OscConfig+0x35a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:536 (discriminator 4)
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 8000ccc:	f44f 7106 	mov.w	r1, #536	; 0x218
 8000cd0:	4832      	ldr	r0, [pc, #200]	; (8000d9c <HAL_RCC_OscConfig+0x498>)
 8000cd2:	f000 fabb 	bl	800124c <assert_failed>
 8000cd6:	e7cb      	b.n	8000c70 <HAL_RCC_OscConfig+0x36c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:537 (discriminator 1)
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 8000cd8:	f240 2119 	movw	r1, #537	; 0x219
 8000cdc:	482f      	ldr	r0, [pc, #188]	; (8000d9c <HAL_RCC_OscConfig+0x498>)
 8000cde:	f000 fab5 	bl	800124c <assert_failed>
 8000ce2:	e7c9      	b.n	8000c78 <HAL_RCC_OscConfig+0x374>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:555
          }
        }        

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8000ce4:	69e3      	ldr	r3, [r4, #28]
 8000ce6:	6a22      	ldr	r2, [r4, #32]
 8000ce8:	4313      	orrs	r3, r2
 8000cea:	6a61      	ldr	r1, [r4, #36]	; 0x24
__RBIT():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:478
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000cec:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8000cf0:	fa92 f2a2 	rbit	r2, r2
__CLZ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:653
  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8000cf4:	fab2 f282 	clz	r2, r2
HAL_RCC_OscConfig():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:555
 8000cf8:	b2d2      	uxtb	r2, r2
 8000cfa:	fa01 f202 	lsl.w	r2, r1, r2
 8000cfe:	4313      	orrs	r3, r2
 8000d00:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000d02:	0852      	lsrs	r2, r2, #1
 8000d04:	3a01      	subs	r2, #1
__RBIT():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:478
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000d06:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 8000d0a:	fa91 f1a1 	rbit	r1, r1
__CLZ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:653
  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8000d0e:	fab1 f181 	clz	r1, r1
HAL_RCC_OscConfig():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:555
 8000d12:	b2c9      	uxtb	r1, r1
 8000d14:	408a      	lsls	r2, r1
 8000d16:	4313      	orrs	r3, r2
 8000d18:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
__RBIT():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:478
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000d1a:	f04f 6270 	mov.w	r2, #251658240	; 0xf000000
 8000d1e:	fa92 f2a2 	rbit	r2, r2
__CLZ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:653
  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8000d22:	fab2 f282 	clz	r2, r2
HAL_RCC_OscConfig():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:555
 8000d26:	b2d2      	uxtb	r2, r2
 8000d28:	fa01 f202 	lsl.w	r2, r1, r2
 8000d2c:	4313      	orrs	r3, r2
 8000d2e:	4a19      	ldr	r2, [pc, #100]	; (8000d94 <HAL_RCC_OscConfig+0x490>)
 8000d30:	6053      	str	r3, [r2, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:561
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << POSITION_VAL(RCC_PLLCFGR_PLLN))             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1) -1) << POSITION_VAL(RCC_PLLCFGR_PLLP)) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << POSITION_VAL(RCC_PLLCFGR_PLLQ))));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8000d32:	4b19      	ldr	r3, [pc, #100]	; (8000d98 <HAL_RCC_OscConfig+0x494>)
 8000d34:	2201      	movs	r2, #1
 8000d36:	661a      	str	r2, [r3, #96]	; 0x60
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:564

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8000d38:	f7ff fbb2 	bl	80004a0 <HAL_GetTick>
 8000d3c:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:567
        
        /* Wait till PLL is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8000d3e:	4b15      	ldr	r3, [pc, #84]	; (8000d94 <HAL_RCC_OscConfig+0x490>)
 8000d40:	681b      	ldr	r3, [r3, #0]
 8000d42:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8000d46:	d106      	bne.n	8000d56 <HAL_RCC_OscConfig+0x452>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:569
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000d48:	f7ff fbaa 	bl	80004a0 <HAL_GetTick>
 8000d4c:	1b00      	subs	r0, r0, r4
 8000d4e:	2864      	cmp	r0, #100	; 0x64
 8000d50:	d9f5      	bls.n	8000d3e <HAL_RCC_OscConfig+0x43a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:571
          {
            return HAL_TIMEOUT;
 8000d52:	2003      	movs	r0, #3
 8000d54:	e01a      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:598
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 8000d56:	2000      	movs	r0, #0
 8000d58:	e018      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:578
        __HAL_RCC_PLL_DISABLE();
 8000d5a:	4b0f      	ldr	r3, [pc, #60]	; (8000d98 <HAL_RCC_OscConfig+0x494>)
 8000d5c:	2200      	movs	r2, #0
 8000d5e:	661a      	str	r2, [r3, #96]	; 0x60
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:581
        tickstart = HAL_GetTick();
 8000d60:	f7ff fb9e 	bl	80004a0 <HAL_GetTick>
 8000d64:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:584
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8000d66:	4b0b      	ldr	r3, [pc, #44]	; (8000d94 <HAL_RCC_OscConfig+0x490>)
 8000d68:	681b      	ldr	r3, [r3, #0]
 8000d6a:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8000d6e:	d006      	beq.n	8000d7e <HAL_RCC_OscConfig+0x47a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:586
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000d70:	f7ff fb96 	bl	80004a0 <HAL_GetTick>
 8000d74:	1b00      	subs	r0, r0, r4
 8000d76:	2864      	cmp	r0, #100	; 0x64
 8000d78:	d9f5      	bls.n	8000d66 <HAL_RCC_OscConfig+0x462>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:588
            return HAL_TIMEOUT;
 8000d7a:	2003      	movs	r0, #3
 8000d7c:	e006      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:598
  return HAL_OK;
 8000d7e:	2000      	movs	r0, #0
 8000d80:	e004      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:291
        return HAL_ERROR;
 8000d82:	2001      	movs	r0, #1
 8000d84:	e002      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:359
        return HAL_ERROR;
 8000d86:	2001      	movs	r0, #1
 8000d88:	e000      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:598
  return HAL_OK;
 8000d8a:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:599
}
 8000d8c:	b003      	add	sp, #12
 8000d8e:	bd30      	pop	{r4, r5, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:595
      return HAL_ERROR;
 8000d90:	2001      	movs	r0, #1
 8000d92:	e7fb      	b.n	8000d8c <HAL_RCC_OscConfig+0x488>
 8000d94:	40023800 	.word	0x40023800
 8000d98:	42470000 	.word	0x42470000
 8000d9c:	08003d08 	.word	0x08003d08

08000da0 <HAL_RCC_ClockConfig>:
HAL_RCC_ClockConfig():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:632
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8000da0:	b570      	push	{r4, r5, r6, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	460d      	mov	r5, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:636
  uint32_t tickstart = 0;   
 
  /* Check the parameters */
  assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 8000da6:	6803      	ldr	r3, [r0, #0]
 8000da8:	3b01      	subs	r3, #1
 8000daa:	2b0e      	cmp	r3, #14
 8000dac:	d861      	bhi.n	8000e72 <HAL_RCC_ClockConfig+0xd2>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:637
  assert_param(IS_FLASH_LATENCY(FLatency));
 8000dae:	2d07      	cmp	r5, #7
 8000db0:	d865      	bhi.n	8000e7e <HAL_RCC_ClockConfig+0xde>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:644
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
    must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) and the supply voltage of the device. */
  
  /* Increasing the CPU frequency */
  if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 8000db2:	4b9e      	ldr	r3, [pc, #632]	; (800102c <HAL_RCC_ClockConfig+0x28c>)
 8000db4:	681b      	ldr	r3, [r3, #0]
 8000db6:	f003 030f 	and.w	r3, r3, #15
 8000dba:	42ab      	cmp	r3, r5
 8000dbc:	f080 80af 	bcs.w	8000f1e <HAL_RCC_ClockConfig+0x17e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:647
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8000dc0:	b2ea      	uxtb	r2, r5
 8000dc2:	4b9a      	ldr	r3, [pc, #616]	; (800102c <HAL_RCC_ClockConfig+0x28c>)
 8000dc4:	701a      	strb	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:651
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8000dc6:	681b      	ldr	r3, [r3, #0]
 8000dc8:	f003 030f 	and.w	r3, r3, #15
 8000dcc:	42ab      	cmp	r3, r5
 8000dce:	f040 818e 	bne.w	80010ee <HAL_RCC_ClockConfig+0x34e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:657
    {
      return HAL_ERROR;
    }

    /*-------------------------- HCLK Configuration --------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8000dd2:	6823      	ldr	r3, [r4, #0]
 8000dd4:	f013 0f02 	tst.w	r3, #2
 8000dd8:	d018      	beq.n	8000e0c <HAL_RCC_ClockConfig+0x6c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:659
    {
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 8000dda:	68a3      	ldr	r3, [r4, #8]
 8000ddc:	b17b      	cbz	r3, 8000dfe <HAL_RCC_ClockConfig+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:659 (discriminator 1)
 8000dde:	2b80      	cmp	r3, #128	; 0x80
 8000de0:	d00d      	beq.n	8000dfe <HAL_RCC_ClockConfig+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:659 (discriminator 2)
 8000de2:	2b90      	cmp	r3, #144	; 0x90
 8000de4:	d00b      	beq.n	8000dfe <HAL_RCC_ClockConfig+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:659 (discriminator 3)
 8000de6:	2ba0      	cmp	r3, #160	; 0xa0
 8000de8:	d009      	beq.n	8000dfe <HAL_RCC_ClockConfig+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:659 (discriminator 4)
 8000dea:	2bb0      	cmp	r3, #176	; 0xb0
 8000dec:	d007      	beq.n	8000dfe <HAL_RCC_ClockConfig+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:659 (discriminator 5)
 8000dee:	2bc0      	cmp	r3, #192	; 0xc0
 8000df0:	d005      	beq.n	8000dfe <HAL_RCC_ClockConfig+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:659 (discriminator 6)
 8000df2:	2bd0      	cmp	r3, #208	; 0xd0
 8000df4:	d003      	beq.n	8000dfe <HAL_RCC_ClockConfig+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:659 (discriminator 7)
 8000df6:	2be0      	cmp	r3, #224	; 0xe0
 8000df8:	d001      	beq.n	8000dfe <HAL_RCC_ClockConfig+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:659 (discriminator 8)
 8000dfa:	2bf0      	cmp	r3, #240	; 0xf0
 8000dfc:	d145      	bne.n	8000e8a <HAL_RCC_ClockConfig+0xea>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:660
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8000dfe:	4a8c      	ldr	r2, [pc, #560]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000e00:	6893      	ldr	r3, [r2, #8]
 8000e02:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000e06:	68a1      	ldr	r1, [r4, #8]
 8000e08:	430b      	orrs	r3, r1
 8000e0a:	6093      	str	r3, [r2, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:664
    }

    /*------------------------- SYSCLK Configuration ---------------------------*/ 
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8000e0c:	6823      	ldr	r3, [r4, #0]
 8000e0e:	f013 0f01 	tst.w	r3, #1
 8000e12:	f000 8128 	beq.w	8001066 <HAL_RCC_ClockConfig+0x2c6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:666
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 8000e16:	6863      	ldr	r3, [r4, #4]
 8000e18:	2b03      	cmp	r3, #3
 8000e1a:	d83c      	bhi.n	8000e96 <HAL_RCC_ClockConfig+0xf6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:669
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8000e1c:	6863      	ldr	r3, [r4, #4]
 8000e1e:	2b01      	cmp	r3, #1
 8000e20:	d03f      	beq.n	8000ea2 <HAL_RCC_ClockConfig+0x102>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:678
        {
          return HAL_ERROR;
        }
      }
      /* PLL is selected as System Clock Source */
      else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   || 
 8000e22:	1e9a      	subs	r2, r3, #2
 8000e24:	2a01      	cmp	r2, #1
 8000e26:	d943      	bls.n	8000eb0 <HAL_RCC_ClockConfig+0x110>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:691
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8000e28:	4a81      	ldr	r2, [pc, #516]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000e2a:	6812      	ldr	r2, [r2, #0]
 8000e2c:	f012 0f02 	tst.w	r2, #2
 8000e30:	f000 815f 	beq.w	80010f2 <HAL_RCC_ClockConfig+0x352>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:697
        {
          return HAL_ERROR;
        }
      }

      __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8000e34:	497e      	ldr	r1, [pc, #504]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000e36:	688a      	ldr	r2, [r1, #8]
 8000e38:	f022 0203 	bic.w	r2, r2, #3
 8000e3c:	4313      	orrs	r3, r2
 8000e3e:	608b      	str	r3, [r1, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:699
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8000e40:	f7ff fb2e 	bl	80004a0 <HAL_GetTick>
 8000e44:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:701
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8000e46:	6863      	ldr	r3, [r4, #4]
 8000e48:	2b01      	cmp	r3, #1
 8000e4a:	d038      	beq.n	8000ebe <HAL_RCC_ClockConfig+0x11e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:711
          {
            return HAL_TIMEOUT;
          }
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8000e4c:	2b02      	cmp	r3, #2
 8000e4e:	d046      	beq.n	8000ede <HAL_RCC_ClockConfig+0x13e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:721
          {
            return HAL_TIMEOUT;
          }
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK)
 8000e50:	2b03      	cmp	r3, #3
 8000e52:	d054      	beq.n	8000efe <HAL_RCC_ClockConfig+0x15e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:733
          }
        }
      }
      else
      {
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8000e54:	4b76      	ldr	r3, [pc, #472]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000e56:	689b      	ldr	r3, [r3, #8]
 8000e58:	f013 0f0c 	tst.w	r3, #12
 8000e5c:	f000 8103 	beq.w	8001066 <HAL_RCC_ClockConfig+0x2c6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:735
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8000e60:	f7ff fb1e 	bl	80004a0 <HAL_GetTick>
 8000e64:	1b40      	subs	r0, r0, r5
 8000e66:	f241 3388 	movw	r3, #5000	; 0x1388
 8000e6a:	4298      	cmp	r0, r3
 8000e6c:	d9f2      	bls.n	8000e54 <HAL_RCC_ClockConfig+0xb4>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:737
          {
            return HAL_TIMEOUT;
 8000e6e:	2003      	movs	r0, #3
 8000e70:	e130      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:636 (discriminator 1)
  assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 8000e72:	f44f 711f 	mov.w	r1, #636	; 0x27c
 8000e76:	486f      	ldr	r0, [pc, #444]	; (8001034 <HAL_RCC_ClockConfig+0x294>)
 8000e78:	f000 f9e8 	bl	800124c <assert_failed>
 8000e7c:	e797      	b.n	8000dae <HAL_RCC_ClockConfig+0xe>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:637 (discriminator 1)
  assert_param(IS_FLASH_LATENCY(FLatency));
 8000e7e:	f240 217d 	movw	r1, #637	; 0x27d
 8000e82:	486c      	ldr	r0, [pc, #432]	; (8001034 <HAL_RCC_ClockConfig+0x294>)
 8000e84:	f000 f9e2 	bl	800124c <assert_failed>
 8000e88:	e793      	b.n	8000db2 <HAL_RCC_ClockConfig+0x12>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:659 (discriminator 9)
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 8000e8a:	f240 2193 	movw	r1, #659	; 0x293
 8000e8e:	4869      	ldr	r0, [pc, #420]	; (8001034 <HAL_RCC_ClockConfig+0x294>)
 8000e90:	f000 f9dc 	bl	800124c <assert_failed>
 8000e94:	e7b3      	b.n	8000dfe <HAL_RCC_ClockConfig+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:666 (discriminator 1)
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 8000e96:	f240 219a 	movw	r1, #666	; 0x29a
 8000e9a:	4866      	ldr	r0, [pc, #408]	; (8001034 <HAL_RCC_ClockConfig+0x294>)
 8000e9c:	f000 f9d6 	bl	800124c <assert_failed>
 8000ea0:	e7bc      	b.n	8000e1c <HAL_RCC_ClockConfig+0x7c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:672
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8000ea2:	4a63      	ldr	r2, [pc, #396]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000ea4:	6812      	ldr	r2, [r2, #0]
 8000ea6:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 8000eaa:	d1c3      	bne.n	8000e34 <HAL_RCC_ClockConfig+0x94>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:674
          return HAL_ERROR;
 8000eac:	2001      	movs	r0, #1
 8000eae:	e111      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:682
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8000eb0:	4a5f      	ldr	r2, [pc, #380]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000eb2:	6812      	ldr	r2, [r2, #0]
 8000eb4:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 8000eb8:	d1bc      	bne.n	8000e34 <HAL_RCC_ClockConfig+0x94>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:684
          return HAL_ERROR;
 8000eba:	2001      	movs	r0, #1
 8000ebc:	e10a      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:703
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8000ebe:	4b5c      	ldr	r3, [pc, #368]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000ec0:	689b      	ldr	r3, [r3, #8]
 8000ec2:	f003 030c 	and.w	r3, r3, #12
 8000ec6:	2b04      	cmp	r3, #4
 8000ec8:	f000 80cd 	beq.w	8001066 <HAL_RCC_ClockConfig+0x2c6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:705
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8000ecc:	f7ff fae8 	bl	80004a0 <HAL_GetTick>
 8000ed0:	1b43      	subs	r3, r0, r5
 8000ed2:	f241 3288 	movw	r2, #5000	; 0x1388
 8000ed6:	4293      	cmp	r3, r2
 8000ed8:	d9f1      	bls.n	8000ebe <HAL_RCC_ClockConfig+0x11e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:707
            return HAL_TIMEOUT;
 8000eda:	2003      	movs	r0, #3
 8000edc:	e0fa      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:713
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8000ede:	4b54      	ldr	r3, [pc, #336]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000ee0:	689b      	ldr	r3, [r3, #8]
 8000ee2:	f003 030c 	and.w	r3, r3, #12
 8000ee6:	2b08      	cmp	r3, #8
 8000ee8:	f000 80bd 	beq.w	8001066 <HAL_RCC_ClockConfig+0x2c6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:715
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8000eec:	f7ff fad8 	bl	80004a0 <HAL_GetTick>
 8000ef0:	1b40      	subs	r0, r0, r5
 8000ef2:	f241 3388 	movw	r3, #5000	; 0x1388
 8000ef6:	4298      	cmp	r0, r3
 8000ef8:	d9f1      	bls.n	8000ede <HAL_RCC_ClockConfig+0x13e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:717
            return HAL_TIMEOUT;
 8000efa:	2003      	movs	r0, #3
 8000efc:	e0ea      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:723
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLRCLK)
 8000efe:	4b4c      	ldr	r3, [pc, #304]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000f00:	689b      	ldr	r3, [r3, #8]
 8000f02:	f003 030c 	and.w	r3, r3, #12
 8000f06:	2b03      	cmp	r3, #3
 8000f08:	f000 80ad 	beq.w	8001066 <HAL_RCC_ClockConfig+0x2c6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:725
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8000f0c:	f7ff fac8 	bl	80004a0 <HAL_GetTick>
 8000f10:	1b40      	subs	r0, r0, r5
 8000f12:	f241 3388 	movw	r3, #5000	; 0x1388
 8000f16:	4298      	cmp	r0, r3
 8000f18:	d9f1      	bls.n	8000efe <HAL_RCC_ClockConfig+0x15e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:727
            return HAL_TIMEOUT;
 8000f1a:	2003      	movs	r0, #3
 8000f1c:	e0da      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:747
  }
  /* Decreasing the CPU frequency */
  else
  {
    /*-------------------------- HCLK Configuration --------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8000f1e:	6823      	ldr	r3, [r4, #0]
 8000f20:	f013 0f02 	tst.w	r3, #2
 8000f24:	d018      	beq.n	8000f58 <HAL_RCC_ClockConfig+0x1b8>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:749
    {
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 8000f26:	68a3      	ldr	r3, [r4, #8]
 8000f28:	b17b      	cbz	r3, 8000f4a <HAL_RCC_ClockConfig+0x1aa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:749 (discriminator 1)
 8000f2a:	2b80      	cmp	r3, #128	; 0x80
 8000f2c:	d00d      	beq.n	8000f4a <HAL_RCC_ClockConfig+0x1aa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:749 (discriminator 2)
 8000f2e:	2b90      	cmp	r3, #144	; 0x90
 8000f30:	d00b      	beq.n	8000f4a <HAL_RCC_ClockConfig+0x1aa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:749 (discriminator 3)
 8000f32:	2ba0      	cmp	r3, #160	; 0xa0
 8000f34:	d009      	beq.n	8000f4a <HAL_RCC_ClockConfig+0x1aa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:749 (discriminator 4)
 8000f36:	2bb0      	cmp	r3, #176	; 0xb0
 8000f38:	d007      	beq.n	8000f4a <HAL_RCC_ClockConfig+0x1aa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:749 (discriminator 5)
 8000f3a:	2bc0      	cmp	r3, #192	; 0xc0
 8000f3c:	d005      	beq.n	8000f4a <HAL_RCC_ClockConfig+0x1aa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:749 (discriminator 6)
 8000f3e:	2bd0      	cmp	r3, #208	; 0xd0
 8000f40:	d003      	beq.n	8000f4a <HAL_RCC_ClockConfig+0x1aa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:749 (discriminator 7)
 8000f42:	2be0      	cmp	r3, #224	; 0xe0
 8000f44:	d001      	beq.n	8000f4a <HAL_RCC_ClockConfig+0x1aa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:749 (discriminator 8)
 8000f46:	2bf0      	cmp	r3, #240	; 0xf0
 8000f48:	d137      	bne.n	8000fba <HAL_RCC_ClockConfig+0x21a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:750
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8000f4a:	4a39      	ldr	r2, [pc, #228]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000f4c:	6893      	ldr	r3, [r2, #8]
 8000f4e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000f52:	68a1      	ldr	r1, [r4, #8]
 8000f54:	430b      	orrs	r3, r1
 8000f56:	6093      	str	r3, [r2, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:754
    }

    /*------------------------- SYSCLK Configuration -------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8000f58:	6823      	ldr	r3, [r4, #0]
 8000f5a:	f013 0f01 	tst.w	r3, #1
 8000f5e:	d07a      	beq.n	8001056 <HAL_RCC_ClockConfig+0x2b6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:756
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 8000f60:	6863      	ldr	r3, [r4, #4]
 8000f62:	2b03      	cmp	r3, #3
 8000f64:	d82f      	bhi.n	8000fc6 <HAL_RCC_ClockConfig+0x226>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:759
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8000f66:	6863      	ldr	r3, [r4, #4]
 8000f68:	2b01      	cmp	r3, #1
 8000f6a:	d032      	beq.n	8000fd2 <HAL_RCC_ClockConfig+0x232>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:768
        {
          return HAL_ERROR;
        }
      }
      /* PLL is selected as System Clock Source */
      else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK) || 
 8000f6c:	1e9a      	subs	r2, r3, #2
 8000f6e:	2a01      	cmp	r2, #1
 8000f70:	d936      	bls.n	8000fe0 <HAL_RCC_ClockConfig+0x240>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:781
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8000f72:	4a2f      	ldr	r2, [pc, #188]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000f74:	6812      	ldr	r2, [r2, #0]
 8000f76:	f012 0f02 	tst.w	r2, #2
 8000f7a:	f000 80bc 	beq.w	80010f6 <HAL_RCC_ClockConfig+0x356>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:786
        {
          return HAL_ERROR;
        }
      }
      __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8000f7e:	492c      	ldr	r1, [pc, #176]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000f80:	688a      	ldr	r2, [r1, #8]
 8000f82:	f022 0203 	bic.w	r2, r2, #3
 8000f86:	4313      	orrs	r3, r2
 8000f88:	608b      	str	r3, [r1, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:788
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8000f8a:	f7ff fa89 	bl	80004a0 <HAL_GetTick>
 8000f8e:	4606      	mov	r6, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:790
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8000f90:	6863      	ldr	r3, [r4, #4]
 8000f92:	2b01      	cmp	r3, #1
 8000f94:	d02b      	beq.n	8000fee <HAL_RCC_ClockConfig+0x24e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:800
          {
            return HAL_TIMEOUT;
          } 
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8000f96:	2b02      	cmp	r3, #2
 8000f98:	d038      	beq.n	800100c <HAL_RCC_ClockConfig+0x26c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:810
          {
            return HAL_TIMEOUT;
          } 
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK)
 8000f9a:	2b03      	cmp	r3, #3
 8000f9c:	d04c      	beq.n	8001038 <HAL_RCC_ClockConfig+0x298>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:822
          } 
        }
      }
      else
      {
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8000f9e:	4b24      	ldr	r3, [pc, #144]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000fa0:	689b      	ldr	r3, [r3, #8]
 8000fa2:	f013 0f0c 	tst.w	r3, #12
 8000fa6:	d056      	beq.n	8001056 <HAL_RCC_ClockConfig+0x2b6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:824
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8000fa8:	f7ff fa7a 	bl	80004a0 <HAL_GetTick>
 8000fac:	1b80      	subs	r0, r0, r6
 8000fae:	f241 3388 	movw	r3, #5000	; 0x1388
 8000fb2:	4298      	cmp	r0, r3
 8000fb4:	d9f3      	bls.n	8000f9e <HAL_RCC_ClockConfig+0x1fe>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:826
          {
            return HAL_TIMEOUT;
 8000fb6:	2003      	movs	r0, #3
 8000fb8:	e08c      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:749 (discriminator 9)
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 8000fba:	f240 21ed 	movw	r1, #749	; 0x2ed
 8000fbe:	481d      	ldr	r0, [pc, #116]	; (8001034 <HAL_RCC_ClockConfig+0x294>)
 8000fc0:	f000 f944 	bl	800124c <assert_failed>
 8000fc4:	e7c1      	b.n	8000f4a <HAL_RCC_ClockConfig+0x1aa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:756 (discriminator 1)
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 8000fc6:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 8000fca:	481a      	ldr	r0, [pc, #104]	; (8001034 <HAL_RCC_ClockConfig+0x294>)
 8000fcc:	f000 f93e 	bl	800124c <assert_failed>
 8000fd0:	e7c9      	b.n	8000f66 <HAL_RCC_ClockConfig+0x1c6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:762
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8000fd2:	4a17      	ldr	r2, [pc, #92]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000fd4:	6812      	ldr	r2, [r2, #0]
 8000fd6:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 8000fda:	d1d0      	bne.n	8000f7e <HAL_RCC_ClockConfig+0x1de>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:764
          return HAL_ERROR;
 8000fdc:	2001      	movs	r0, #1
 8000fde:	e079      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:772
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8000fe0:	4a13      	ldr	r2, [pc, #76]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000fe2:	6812      	ldr	r2, [r2, #0]
 8000fe4:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 8000fe8:	d1c9      	bne.n	8000f7e <HAL_RCC_ClockConfig+0x1de>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:774
          return HAL_ERROR;
 8000fea:	2001      	movs	r0, #1
 8000fec:	e072      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:792
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8000fee:	4b10      	ldr	r3, [pc, #64]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 8000ff0:	689b      	ldr	r3, [r3, #8]
 8000ff2:	f003 030c 	and.w	r3, r3, #12
 8000ff6:	2b04      	cmp	r3, #4
 8000ff8:	d02d      	beq.n	8001056 <HAL_RCC_ClockConfig+0x2b6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:794
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8000ffa:	f7ff fa51 	bl	80004a0 <HAL_GetTick>
 8000ffe:	1b83      	subs	r3, r0, r6
 8001000:	f241 3288 	movw	r2, #5000	; 0x1388
 8001004:	4293      	cmp	r3, r2
 8001006:	d9f2      	bls.n	8000fee <HAL_RCC_ClockConfig+0x24e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:796
            return HAL_TIMEOUT;
 8001008:	2003      	movs	r0, #3
 800100a:	e063      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:802
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800100c:	4b08      	ldr	r3, [pc, #32]	; (8001030 <HAL_RCC_ClockConfig+0x290>)
 800100e:	689b      	ldr	r3, [r3, #8]
 8001010:	f003 030c 	and.w	r3, r3, #12
 8001014:	2b08      	cmp	r3, #8
 8001016:	d01e      	beq.n	8001056 <HAL_RCC_ClockConfig+0x2b6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:804
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001018:	f7ff fa42 	bl	80004a0 <HAL_GetTick>
 800101c:	1b80      	subs	r0, r0, r6
 800101e:	f241 3388 	movw	r3, #5000	; 0x1388
 8001022:	4298      	cmp	r0, r3
 8001024:	d9f2      	bls.n	800100c <HAL_RCC_ClockConfig+0x26c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:806
            return HAL_TIMEOUT;
 8001026:	2003      	movs	r0, #3
 8001028:	e054      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
 800102a:	bf00      	nop
 800102c:	40023c00 	.word	0x40023c00
 8001030:	40023800 	.word	0x40023800
 8001034:	08003d08 	.word	0x08003d08
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:812
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLRCLK)
 8001038:	4b31      	ldr	r3, [pc, #196]	; (8001100 <HAL_RCC_ClockConfig+0x360>)
 800103a:	689b      	ldr	r3, [r3, #8]
 800103c:	f003 030c 	and.w	r3, r3, #12
 8001040:	2b03      	cmp	r3, #3
 8001042:	d008      	beq.n	8001056 <HAL_RCC_ClockConfig+0x2b6>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:814
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001044:	f7ff fa2c 	bl	80004a0 <HAL_GetTick>
 8001048:	1b80      	subs	r0, r0, r6
 800104a:	f241 3388 	movw	r3, #5000	; 0x1388
 800104e:	4298      	cmp	r0, r3
 8001050:	d9f2      	bls.n	8001038 <HAL_RCC_ClockConfig+0x298>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:816
            return HAL_TIMEOUT;
 8001052:	2003      	movs	r0, #3
 8001054:	e03e      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:833
        }
      }
    }
    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001056:	b2ea      	uxtb	r2, r5
 8001058:	4b2a      	ldr	r3, [pc, #168]	; (8001104 <HAL_RCC_ClockConfig+0x364>)
 800105a:	701a      	strb	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:837
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 800105c:	681b      	ldr	r3, [r3, #0]
 800105e:	f003 030f 	and.w	r3, r3, #15
 8001062:	42ab      	cmp	r3, r5
 8001064:	d149      	bne.n	80010fa <HAL_RCC_ClockConfig+0x35a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:844
      return HAL_ERROR;
    }
 }

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001066:	6823      	ldr	r3, [r4, #0]
 8001068:	f013 0f04 	tst.w	r3, #4
 800106c:	d014      	beq.n	8001098 <HAL_RCC_ClockConfig+0x2f8>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:846
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 800106e:	68e3      	ldr	r3, [r4, #12]
 8001070:	b15b      	cbz	r3, 800108a <HAL_RCC_ClockConfig+0x2ea>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:846 (discriminator 1)
 8001072:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001076:	d008      	beq.n	800108a <HAL_RCC_ClockConfig+0x2ea>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:846 (discriminator 2)
 8001078:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 800107c:	d005      	beq.n	800108a <HAL_RCC_ClockConfig+0x2ea>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:846 (discriminator 3)
 800107e:	f5b3 5fc0 	cmp.w	r3, #6144	; 0x1800
 8001082:	d002      	beq.n	800108a <HAL_RCC_ClockConfig+0x2ea>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:846 (discriminator 4)
 8001084:	f5b3 5fe0 	cmp.w	r3, #7168	; 0x1c00
 8001088:	d125      	bne.n	80010d6 <HAL_RCC_ClockConfig+0x336>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:847
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800108a:	4a1d      	ldr	r2, [pc, #116]	; (8001100 <HAL_RCC_ClockConfig+0x360>)
 800108c:	6893      	ldr	r3, [r2, #8]
 800108e:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8001092:	68e1      	ldr	r1, [r4, #12]
 8001094:	430b      	orrs	r3, r1
 8001096:	6093      	str	r3, [r2, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:851
  }
  
  /*-------------------------- PCLK2 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001098:	6823      	ldr	r3, [r4, #0]
 800109a:	f013 0f08 	tst.w	r3, #8
 800109e:	d015      	beq.n	80010cc <HAL_RCC_ClockConfig+0x32c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:853
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 80010a0:	6923      	ldr	r3, [r4, #16]
 80010a2:	b15b      	cbz	r3, 80010bc <HAL_RCC_ClockConfig+0x31c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:853 (discriminator 1)
 80010a4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80010a8:	d008      	beq.n	80010bc <HAL_RCC_ClockConfig+0x31c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:853 (discriminator 2)
 80010aa:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 80010ae:	d005      	beq.n	80010bc <HAL_RCC_ClockConfig+0x31c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:853 (discriminator 3)
 80010b0:	f5b3 5fc0 	cmp.w	r3, #6144	; 0x1800
 80010b4:	d002      	beq.n	80010bc <HAL_RCC_ClockConfig+0x31c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:853 (discriminator 4)
 80010b6:	f5b3 5fe0 	cmp.w	r3, #7168	; 0x1c00
 80010ba:	d112      	bne.n	80010e2 <HAL_RCC_ClockConfig+0x342>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:854
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 80010bc:	4a10      	ldr	r2, [pc, #64]	; (8001100 <HAL_RCC_ClockConfig+0x360>)
 80010be:	6893      	ldr	r3, [r2, #8]
 80010c0:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80010c4:	6921      	ldr	r1, [r4, #16]
 80010c6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80010ca:	6093      	str	r3, [r2, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:858
  }

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 80010cc:	200f      	movs	r0, #15
 80010ce:	f7ff f9b1 	bl	8000434 <HAL_InitTick>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:860
  
  return HAL_OK;
 80010d2:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:861
}
 80010d4:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:846 (discriminator 5)
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 80010d6:	f240 314e 	movw	r1, #846	; 0x34e
 80010da:	480b      	ldr	r0, [pc, #44]	; (8001108 <HAL_RCC_ClockConfig+0x368>)
 80010dc:	f000 f8b6 	bl	800124c <assert_failed>
 80010e0:	e7d3      	b.n	800108a <HAL_RCC_ClockConfig+0x2ea>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:853 (discriminator 5)
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 80010e2:	f240 3155 	movw	r1, #853	; 0x355
 80010e6:	4808      	ldr	r0, [pc, #32]	; (8001108 <HAL_RCC_ClockConfig+0x368>)
 80010e8:	f000 f8b0 	bl	800124c <assert_failed>
 80010ec:	e7e6      	b.n	80010bc <HAL_RCC_ClockConfig+0x31c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:653
      return HAL_ERROR;
 80010ee:	2001      	movs	r0, #1
 80010f0:	e7f0      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:693
          return HAL_ERROR;
 80010f2:	2001      	movs	r0, #1
 80010f4:	e7ee      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:783
          return HAL_ERROR;
 80010f6:	2001      	movs	r0, #1
 80010f8:	e7ec      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:839
      return HAL_ERROR;
 80010fa:	2001      	movs	r0, #1
 80010fc:	e7ea      	b.n	80010d4 <HAL_RCC_ClockConfig+0x334>
 80010fe:	bf00      	nop
 8001100:	40023800 	.word	0x40023800
 8001104:	40023c00 	.word	0x40023c00
 8001108:	08003d08 	.word	0x08003d08

0800110c <HAL_RCC_GetSysClockFreq>:
HAL_RCC_GetSysClockFreq():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1012
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800110c:	4b23      	ldr	r3, [pc, #140]	; (800119c <HAL_RCC_GetSysClockFreq+0x90>)
 800110e:	689b      	ldr	r3, [r3, #8]
 8001110:	f003 030c 	and.w	r3, r3, #12
 8001114:	2b04      	cmp	r3, #4
 8001116:	d03d      	beq.n	8001194 <HAL_RCC_GetSysClockFreq+0x88>
 8001118:	2b08      	cmp	r3, #8
 800111a:	d13d      	bne.n	8001198 <HAL_RCC_GetSysClockFreq+0x8c>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1028
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800111c:	4a1f      	ldr	r2, [pc, #124]	; (800119c <HAL_RCC_GetSysClockFreq+0x90>)
 800111e:	6853      	ldr	r3, [r2, #4]
 8001120:	f003 033f 	and.w	r3, r3, #63	; 0x3f
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1029
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8001124:	6852      	ldr	r2, [r2, #4]
 8001126:	f412 0f80 	tst.w	r2, #4194304	; 0x400000
 800112a:	d021      	beq.n	8001170 <HAL_RCC_GetSysClockFreq+0x64>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1032
      {
        /* HSE used as PLL clock source */
        pllvco = ((HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));
 800112c:	481c      	ldr	r0, [pc, #112]	; (80011a0 <HAL_RCC_GetSysClockFreq+0x94>)
 800112e:	fbb0 f0f3 	udiv	r0, r0, r3
 8001132:	4b1a      	ldr	r3, [pc, #104]	; (800119c <HAL_RCC_GetSysClockFreq+0x90>)
 8001134:	685a      	ldr	r2, [r3, #4]
 8001136:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800113a:	401a      	ands	r2, r3
__RBIT():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:478
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800113c:	fa93 f3a3 	rbit	r3, r3
__CLZ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:653
  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8001140:	fab3 f383 	clz	r3, r3
HAL_RCC_GetSysClockFreq():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1032
 8001144:	b2db      	uxtb	r3, r3
 8001146:	fa22 f303 	lsr.w	r3, r2, r3
 800114a:	fb03 f000 	mul.w	r0, r3, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1039
      else
      {
        /* HSI used as PLL clock source */
        pllvco = ((HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));    
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> POSITION_VAL(RCC_PLLCFGR_PLLP)) + 1 ) *2);
 800114e:	4b13      	ldr	r3, [pc, #76]	; (800119c <HAL_RCC_GetSysClockFreq+0x90>)
 8001150:	685b      	ldr	r3, [r3, #4]
 8001152:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
__RBIT():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:478
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001156:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 800115a:	fa92 f2a2 	rbit	r2, r2
__CLZ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:653
  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 800115e:	fab2 f282 	clz	r2, r2
HAL_RCC_GetSysClockFreq():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1039
 8001162:	b2d2      	uxtb	r2, r2
 8001164:	40d3      	lsrs	r3, r2
 8001166:	3301      	adds	r3, #1
 8001168:	005b      	lsls	r3, r3, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1041
      
      sysclockfreq = pllvco/pllp;
 800116a:	fbb0 f0f3 	udiv	r0, r0, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1042
      break;
 800116e:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1037
        pllvco = ((HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));    
 8001170:	480c      	ldr	r0, [pc, #48]	; (80011a4 <HAL_RCC_GetSysClockFreq+0x98>)
 8001172:	fbb0 f0f3 	udiv	r0, r0, r3
 8001176:	4b09      	ldr	r3, [pc, #36]	; (800119c <HAL_RCC_GetSysClockFreq+0x90>)
 8001178:	685a      	ldr	r2, [r3, #4]
 800117a:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800117e:	401a      	ands	r2, r3
__RBIT():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:478
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001180:	fa93 f3a3 	rbit	r3, r3
__CLZ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:653
  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8001184:	fab3 f383 	clz	r3, r3
HAL_RCC_GetSysClockFreq():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1037
 8001188:	b2db      	uxtb	r3, r3
 800118a:	fa22 f303 	lsr.w	r3, r2, r3
 800118e:	fb03 f000 	mul.w	r0, r3, r0
 8001192:	e7dc      	b.n	800114e <HAL_RCC_GetSysClockFreq+0x42>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1021
      sysclockfreq = HSE_VALUE;
 8001194:	4802      	ldr	r0, [pc, #8]	; (80011a0 <HAL_RCC_GetSysClockFreq+0x94>)
 8001196:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1012
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001198:	4802      	ldr	r0, [pc, #8]	; (80011a4 <HAL_RCC_GetSysClockFreq+0x98>)
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1051
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800119a:	4770      	bx	lr
 800119c:	40023800 	.word	0x40023800
 80011a0:	007a1200 	.word	0x007a1200
 80011a4:	00f42400 	.word	0x00f42400

080011a8 <HAL_RCC_GetHCLKFreq>:
HAL_RCC_GetHCLKFreq():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1063
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80011a8:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1064
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> APBAHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> POSITION_VAL(RCC_CFGR_HPRE)];
 80011aa:	f7ff ffaf 	bl	800110c <HAL_RCC_GetSysClockFreq>
 80011ae:	4b09      	ldr	r3, [pc, #36]	; (80011d4 <HAL_RCC_GetHCLKFreq+0x2c>)
 80011b0:	689a      	ldr	r2, [r3, #8]
 80011b2:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
__RBIT():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:478
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80011b6:	23f0      	movs	r3, #240	; 0xf0
 80011b8:	fa93 f3a3 	rbit	r3, r3
__CLZ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cmInstr.h:653
  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 80011bc:	fab3 f383 	clz	r3, r3
HAL_RCC_GetHCLKFreq():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1064
 80011c0:	b2db      	uxtb	r3, r3
 80011c2:	fa22 f303 	lsr.w	r3, r2, r3
 80011c6:	4a04      	ldr	r2, [pc, #16]	; (80011d8 <HAL_RCC_GetHCLKFreq+0x30>)
 80011c8:	5cd3      	ldrb	r3, [r2, r3]
 80011ca:	40d8      	lsrs	r0, r3
 80011cc:	4b03      	ldr	r3, [pc, #12]	; (80011dc <HAL_RCC_GetHCLKFreq+0x34>)
 80011ce:	6018      	str	r0, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/stm32f4-hal/stm32f4xx_hal_rcc.c:1066
  return SystemCoreClock;
}
 80011d0:	bd08      	pop	{r3, pc}
 80011d2:	bf00      	nop
 80011d4:	40023800 	.word	0x40023800
 80011d8:	08003d38 	.word	0x08003d38
 80011dc:	2000001c 	.word	0x2000001c

080011e0 <_exit>:
_exit():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_exit.c:42 (discriminator 1)
#if !defined(DEBUG)
  __reset_hardware();
#endif

  // TODO: write on trace
  while (1)
 80011e0:	e7fe      	b.n	80011e0 <_exit>
	...

080011e4 <abort>:
abort():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_exit.c:51
// ----------------------------------------------------------------------------

void
__attribute__((weak,noreturn))
abort(void)
{
 80011e4:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_exit.c:52
  trace_puts("abort(), exiting...");
 80011e6:	4803      	ldr	r0, [pc, #12]	; (80011f4 <abort+0x10>)
 80011e8:	f000 f854 	bl	8001294 <trace_puts>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_exit.c:54

  _exit(1);
 80011ec:	2001      	movs	r0, #1
 80011ee:	f7ff fff7 	bl	80011e0 <_exit>
 80011f2:	bf00      	nop
 80011f4:	08003d48 	.word	0x08003d48

080011f8 <_sbrk>:
_sbrk():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_sbrk.c:23
// The definitions used here should be kept in sync with the
// stack definitions in the linker script.

caddr_t
_sbrk(int incr)
{
 80011f8:	b508      	push	{r3, lr}
 80011fa:	4603      	mov	r3, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_sbrk.c:30
  extern char _Heap_Limit; // Defined by the linker.

  static char* current_heap_end;
  char* current_block_address;

  if (current_heap_end == 0)
 80011fc:	4a0c      	ldr	r2, [pc, #48]	; (8001230 <_sbrk+0x38>)
 80011fe:	6812      	ldr	r2, [r2, #0]
 8001200:	b15a      	cbz	r2, 800121a <_sbrk+0x22>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_sbrk.c:35
    {
      current_heap_end = &_Heap_Begin;
    }

  current_block_address = current_heap_end;
 8001202:	4a0b      	ldr	r2, [pc, #44]	; (8001230 <_sbrk+0x38>)
 8001204:	6810      	ldr	r0, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_sbrk.c:41

  // Need to align heap to word boundary, else will get
  // hard faults on Cortex-M0. So we assume that heap starts on
  // word boundary, hence make sure we always add a multiple of
  // 4 to it.
  incr = (incr + 3) & (~3); // align value to 4
 8001206:	3303      	adds	r3, #3
 8001208:	f023 0303 	bic.w	r3, r3, #3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_sbrk.c:42
  if (current_heap_end + incr > &_Heap_Limit)
 800120c:	4403      	add	r3, r0
 800120e:	4a09      	ldr	r2, [pc, #36]	; (8001234 <_sbrk+0x3c>)
 8001210:	4293      	cmp	r3, r2
 8001212:	d806      	bhi.n	8001222 <_sbrk+0x2a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_sbrk.c:59
      errno = ENOMEM;
      return (caddr_t) - 1;
#endif
    }

  current_heap_end += incr;
 8001214:	4a06      	ldr	r2, [pc, #24]	; (8001230 <_sbrk+0x38>)
 8001216:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_sbrk.c:62

  return (caddr_t) current_block_address;
}
 8001218:	bd08      	pop	{r3, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_sbrk.c:32
      current_heap_end = &_Heap_Begin;
 800121a:	4a05      	ldr	r2, [pc, #20]	; (8001230 <_sbrk+0x38>)
 800121c:	4906      	ldr	r1, [pc, #24]	; (8001238 <_sbrk+0x40>)
 800121e:	6011      	str	r1, [r2, #0]
 8001220:	e7ef      	b.n	8001202 <_sbrk+0xa>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_sbrk.c:54
      errno = ENOMEM;
 8001222:	f002 f881 	bl	8003328 <__errno>
 8001226:	230c      	movs	r3, #12
 8001228:	6003      	str	r3, [r0, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_sbrk.c:55
      return (caddr_t) - 1;
 800122a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800122e:	e7f3      	b.n	8001218 <_sbrk+0x20>
 8001230:	20000098 	.word	0x20000098
 8001234:	2001fc00 	.word	0x2001fc00
 8001238:	20002af4 	.word	0x20002af4

0800123c <__initialize_args>:
__initialize_args():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_syscalls.c:51
  // available from the host environment. argv[argc] shall be a null pointer.
  // (static, no const)
  static char* argv[2] =
    { name, NULL };

  *p_argc = 1;
 800123c:	2301      	movs	r3, #1
 800123e:	6003      	str	r3, [r0, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_syscalls.c:52
  *p_argv = &argv[0];
 8001240:	4b01      	ldr	r3, [pc, #4]	; (8001248 <__initialize_args+0xc>)
 8001242:	600b      	str	r3, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/_syscalls.c:54
  return;
}
 8001244:	4770      	bx	lr
 8001246:	bf00      	nop
 8001248:	20000004 	.word	0x20000004

0800124c <assert_failed>:
assert_failed():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/assert.c:47

// Called from the assert_param() macro, usually defined in the stm32f*_conf.h
void
__attribute__((noreturn))
assert_failed (uint8_t* file, uint32_t line)
{
 800124c:	b508      	push	{r3, lr}
 800124e:	460a      	mov	r2, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/assert.c:48
  trace_printf ("assert_param() failed: file \"%s\", line %d\n", file, line);
 8001250:	4601      	mov	r1, r0
 8001252:	4802      	ldr	r0, [pc, #8]	; (800125c <assert_failed+0x10>)
 8001254:	f000 f804 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/newlib/assert.c:49
  abort ();
 8001258:	f7ff ffc4 	bl	80011e4 <abort>
 800125c:	08003d5c 	.word	0x08003d5c

08001260 <trace_printf>:
trace_printf():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:23

// ----------------------------------------------------------------------------

int
trace_printf(const char* format, ...)
{
 8001260:	b40f      	push	{r0, r1, r2, r3}
 8001262:	b500      	push	{lr}
 8001264:	b083      	sub	sp, #12
 8001266:	ab04      	add	r3, sp, #16
 8001268:	f853 2b04 	ldr.w	r2, [r3], #4
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:27
  int ret;
  va_list ap;

  va_start (ap, format);
 800126c:	9301      	str	r3, [sp, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:34
  // TODO: rewrite it to no longer use newlib, it is way too heavy

  static char buf[OS_INTEGER_TRACE_PRINTF_TMP_ARRAY_SIZE];

  // Print to the local buffer
  ret = vsnprintf (buf, sizeof(buf), format, ap);
 800126e:	2180      	movs	r1, #128	; 0x80
 8001270:	4807      	ldr	r0, [pc, #28]	; (8001290 <trace_printf+0x30>)
 8001272:	f002 f8b9 	bl	80033e8 <vsniprintf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:35
  if (ret > 0)
 8001276:	2800      	cmp	r0, #0
 8001278:	dc04      	bgt.n	8001284 <trace_printf+0x24>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:43
      ret = trace_write (buf, (size_t)ret);
    }

  va_end (ap);
  return ret;
}
 800127a:	b003      	add	sp, #12
 800127c:	f85d eb04 	ldr.w	lr, [sp], #4
 8001280:	b004      	add	sp, #16
 8001282:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:38
      ret = trace_write (buf, (size_t)ret);
 8001284:	4601      	mov	r1, r0
 8001286:	4802      	ldr	r0, [pc, #8]	; (8001290 <trace_printf+0x30>)
 8001288:	f000 f844 	bl	8001314 <trace_write>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:42
  return ret;
 800128c:	e7f5      	b.n	800127a <trace_printf+0x1a>
 800128e:	bf00      	nop
 8001290:	200000a4 	.word	0x200000a4

08001294 <trace_puts>:
trace_puts():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:47

int
trace_puts(const char *s)
{
 8001294:	b510      	push	{r4, lr}
 8001296:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:48
  trace_write(s, strlen(s));
 8001298:	f002 f872 	bl	8003380 <strlen>
 800129c:	4601      	mov	r1, r0
 800129e:	4620      	mov	r0, r4
 80012a0:	f000 f838 	bl	8001314 <trace_write>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:49
  return trace_write("\n", 1);
 80012a4:	2101      	movs	r1, #1
 80012a6:	4802      	ldr	r0, [pc, #8]	; (80012b0 <trace_puts+0x1c>)
 80012a8:	f000 f834 	bl	8001314 <trace_write>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/Trace.c:50
}
 80012ac:	bd10      	pop	{r4, pc}
 80012ae:	bf00      	nop
 80012b0:	08003e20 	.word	0x08003e20

080012b4 <_trace_write_semihosting_debug>:
_trace_write_semihosting_debug():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:214

#define OS_INTEGER_TRACE_TMP_ARRAY_SIZE  (16)

static ssize_t
_trace_write_semihosting_debug (const char* buf, size_t nbyte)
{
 80012b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80012b8:	b085      	sub	sp, #20
 80012ba:	4604      	mov	r4, r0
 80012bc:	460f      	mov	r7, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:217
  // Since the single character debug channel is quite slow, try to
  // optimise and send a null terminated string, if possible.
  if (buf[nbyte] == '\0')
 80012be:	5643      	ldrsb	r3, [r0, r1]
 80012c0:	bb33      	cbnz	r3, 8001310 <_trace_write_semihosting_debug+0x5c>
call_host():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/arm/semihosting.h:80
static inline int
__attribute__ ((always_inline))
call_host (int reason, void* arg)
{
  int value;
  asm volatile (
 80012c2:	2504      	movs	r5, #4
 80012c4:	4628      	mov	r0, r5
 80012c6:	4621      	mov	r1, r4
 80012c8:	beab      	bkpt	0x00ab
 80012ca:	4604      	mov	r4, r0
_trace_write_semihosting_debug():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:245
        }
    }

  // All bytes written
  return (ssize_t) nbyte;
}
 80012cc:	4638      	mov	r0, r7
 80012ce:	b005      	add	sp, #20
 80012d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:233 (discriminator 2)
              tmp[i] = *buf;
 80012d4:	f914 cb01 	ldrsb.w	ip, [r4], #1
 80012d8:	aa04      	add	r2, sp, #16
 80012da:	441a      	add	r2, r3
 80012dc:	f802 cc10 	strb.w	ip, [r2, #-16]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:231 (discriminator 2)
          for (; i < n; ++i, ++buf)
 80012e0:	3301      	adds	r3, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:231 (discriminator 1)
 80012e2:	42ab      	cmp	r3, r5
 80012e4:	d3f6      	bcc.n	80012d4 <_trace_write_semihosting_debug+0x20>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:235
          tmp[i] = '\0';
 80012e6:	aa04      	add	r2, sp, #16
 80012e8:	4413      	add	r3, r2
 80012ea:	2200      	movs	r2, #0
 80012ec:	f803 2c10 	strb.w	r2, [r3, #-16]
call_host():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/arm/semihosting.h:80
 80012f0:	f04f 0804 	mov.w	r8, #4
 80012f4:	46e9      	mov	r9, sp
 80012f6:	4640      	mov	r0, r8
 80012f8:	4649      	mov	r1, r9
 80012fa:	beab      	bkpt	0x00ab
 80012fc:	4680      	mov	r8, r0
_trace_write_semihosting_debug():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:239
          togo -= n;
 80012fe:	1b76      	subs	r6, r6, r5
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:227
      while (togo > 0)
 8001300:	2e00      	cmp	r6, #0
 8001302:	d0e3      	beq.n	80012cc <_trace_write_semihosting_debug+0x18>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:229
          unsigned int n = ((togo < sizeof(tmp)) ? togo : sizeof(tmp));
 8001304:	4635      	mov	r5, r6
 8001306:	2e10      	cmp	r6, #16
 8001308:	bf28      	it	cs
 800130a:	2510      	movcs	r5, #16
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:230
          unsigned int i = 0;
 800130c:	2300      	movs	r3, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:231
          for (; i < n; ++i, ++buf)
 800130e:	e7e8      	b.n	80012e2 <_trace_write_semihosting_debug+0x2e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:226
      size_t togo = nbyte;
 8001310:	460e      	mov	r6, r1
 8001312:	e7f5      	b.n	8001300 <_trace_write_semihosting_debug+0x4c>

08001314 <trace_write>:
trace_write():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:70
{
 8001314:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:76
  return _trace_write_semihosting_debug(buf, nbyte);
 8001316:	f7ff ffcd 	bl	80012b4 <_trace_write_semihosting_debug>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/diag/trace_impl.c:80
}
 800131a:	bd08      	pop	{r3, pc}

0800131c <__initialize_hardware_early>:
__initialize_hardware_early():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/_initialize_hardware.c:36
// priority is Privileged, and the Stack is set to Main.

void
__attribute__((weak))
__initialize_hardware_early(void)
{
 800131c:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/_initialize_hardware.c:38
  // Call the CSMSIS system initialisation routine.
  SystemInit();
 800131e:	f000 f893 	bl	8001448 <SystemInit>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/_initialize_hardware.c:42

  // Set VTOR to the actual address, provided by the linker script.
  // Override the manual, possibly wrong, SystemInit() setting.
  SCB->VTOR = (uint32_t)(&__vectors_start);
 8001322:	4a02      	ldr	r2, [pc, #8]	; (800132c <__initialize_hardware_early+0x10>)
 8001324:	4b02      	ldr	r3, [pc, #8]	; (8001330 <__initialize_hardware_early+0x14>)
 8001326:	609a      	str	r2, [r3, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/_initialize_hardware.c:66
#endif // (__VFP_FP__) && !(__SOFTFP__)

#if defined(OS_DEBUG_SEMIHOSTING_FAULTS)
  SCB->SHCSR |= SCB_SHCSR_USGFAULTENA_Msk;
#endif
}
 8001328:	bd08      	pop	{r3, pc}
 800132a:	bf00      	nop
 800132c:	08000000 	.word	0x08000000
 8001330:	e000ed00 	.word	0xe000ed00

08001334 <dumpExceptionStack>:
dumpExceptionStack():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:85
{
 8001334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001336:	4604      	mov	r4, r0
 8001338:	460d      	mov	r5, r1
 800133a:	4617      	mov	r7, r2
 800133c:	461e      	mov	r6, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:86
  trace_printf ("Stack frame:\n");
 800133e:	4827      	ldr	r0, [pc, #156]	; (80013dc <dumpExceptionStack+0xa8>)
 8001340:	f7ff ff8e 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:87
  trace_printf (" R0 =  %08X\n", frame->r0);
 8001344:	6821      	ldr	r1, [r4, #0]
 8001346:	4826      	ldr	r0, [pc, #152]	; (80013e0 <dumpExceptionStack+0xac>)
 8001348:	f7ff ff8a 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:88
  trace_printf (" R1 =  %08X\n", frame->r1);
 800134c:	6861      	ldr	r1, [r4, #4]
 800134e:	4825      	ldr	r0, [pc, #148]	; (80013e4 <dumpExceptionStack+0xb0>)
 8001350:	f7ff ff86 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:89
  trace_printf (" R2 =  %08X\n", frame->r2);
 8001354:	68a1      	ldr	r1, [r4, #8]
 8001356:	4824      	ldr	r0, [pc, #144]	; (80013e8 <dumpExceptionStack+0xb4>)
 8001358:	f7ff ff82 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:90
  trace_printf (" R3 =  %08X\n", frame->r3);
 800135c:	68e1      	ldr	r1, [r4, #12]
 800135e:	4823      	ldr	r0, [pc, #140]	; (80013ec <dumpExceptionStack+0xb8>)
 8001360:	f7ff ff7e 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:91
  trace_printf (" R12 = %08X\n", frame->r12);
 8001364:	6921      	ldr	r1, [r4, #16]
 8001366:	4822      	ldr	r0, [pc, #136]	; (80013f0 <dumpExceptionStack+0xbc>)
 8001368:	f7ff ff7a 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:92
  trace_printf (" LR =  %08X\n", frame->lr);
 800136c:	6961      	ldr	r1, [r4, #20]
 800136e:	4821      	ldr	r0, [pc, #132]	; (80013f4 <dumpExceptionStack+0xc0>)
 8001370:	f7ff ff76 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:93
  trace_printf (" PC =  %08X\n", frame->pc);
 8001374:	69a1      	ldr	r1, [r4, #24]
 8001376:	4820      	ldr	r0, [pc, #128]	; (80013f8 <dumpExceptionStack+0xc4>)
 8001378:	f7ff ff72 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:94
  trace_printf (" PSR = %08X\n", frame->psr);
 800137c:	69e1      	ldr	r1, [r4, #28]
 800137e:	481f      	ldr	r0, [pc, #124]	; (80013fc <dumpExceptionStack+0xc8>)
 8001380:	f7ff ff6e 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:95
  trace_printf ("FSR/FAR:\n");
 8001384:	481e      	ldr	r0, [pc, #120]	; (8001400 <dumpExceptionStack+0xcc>)
 8001386:	f7ff ff6b 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:96
  trace_printf (" CFSR =  %08X\n", cfsr);
 800138a:	4629      	mov	r1, r5
 800138c:	481d      	ldr	r0, [pc, #116]	; (8001404 <dumpExceptionStack+0xd0>)
 800138e:	f7ff ff67 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:97
  trace_printf (" HFSR =  %08X\n", SCB->HFSR);
 8001392:	4c1d      	ldr	r4, [pc, #116]	; (8001408 <dumpExceptionStack+0xd4>)
 8001394:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8001396:	481d      	ldr	r0, [pc, #116]	; (800140c <dumpExceptionStack+0xd8>)
 8001398:	f7ff ff62 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:98
  trace_printf (" DFSR =  %08X\n", SCB->DFSR);
 800139c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800139e:	481c      	ldr	r0, [pc, #112]	; (8001410 <dumpExceptionStack+0xdc>)
 80013a0:	f7ff ff5e 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:99
  trace_printf (" AFSR =  %08X\n", SCB->AFSR);
 80013a4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80013a6:	481b      	ldr	r0, [pc, #108]	; (8001414 <dumpExceptionStack+0xe0>)
 80013a8:	f7ff ff5a 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:101
  if (cfsr & (1UL << 7))
 80013ac:	f015 0f80 	tst.w	r5, #128	; 0x80
 80013b0:	d10a      	bne.n	80013c8 <dumpExceptionStack+0x94>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:105
  if (cfsr & (1UL << 15))
 80013b2:	f415 4f00 	tst.w	r5, #32768	; 0x8000
 80013b6:	d10c      	bne.n	80013d2 <dumpExceptionStack+0x9e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:109
  trace_printf ("Misc\n");
 80013b8:	4817      	ldr	r0, [pc, #92]	; (8001418 <dumpExceptionStack+0xe4>)
 80013ba:	f7ff ff51 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:110
  trace_printf (" LR/EXC_RETURN= %08X\n", lr);
 80013be:	9906      	ldr	r1, [sp, #24]
 80013c0:	4816      	ldr	r0, [pc, #88]	; (800141c <dumpExceptionStack+0xe8>)
 80013c2:	f7ff ff4d 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:111
}
 80013c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:103
      trace_printf (" MMFAR = %08X\n", mmfar);
 80013c8:	4639      	mov	r1, r7
 80013ca:	4815      	ldr	r0, [pc, #84]	; (8001420 <dumpExceptionStack+0xec>)
 80013cc:	f7ff ff48 	bl	8001260 <trace_printf>
 80013d0:	e7ef      	b.n	80013b2 <dumpExceptionStack+0x7e>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:107
      trace_printf (" BFAR =  %08X\n", bfar);
 80013d2:	4631      	mov	r1, r6
 80013d4:	4813      	ldr	r0, [pc, #76]	; (8001424 <dumpExceptionStack+0xf0>)
 80013d6:	f7ff ff43 	bl	8001260 <trace_printf>
 80013da:	e7ed      	b.n	80013b8 <dumpExceptionStack+0x84>
 80013dc:	08003d88 	.word	0x08003d88
 80013e0:	08003d98 	.word	0x08003d98
 80013e4:	08003da8 	.word	0x08003da8
 80013e8:	08003db8 	.word	0x08003db8
 80013ec:	08003dc8 	.word	0x08003dc8
 80013f0:	08003dd8 	.word	0x08003dd8
 80013f4:	08003de8 	.word	0x08003de8
 80013f8:	08003df8 	.word	0x08003df8
 80013fc:	08003e08 	.word	0x08003e08
 8001400:	08003e18 	.word	0x08003e18
 8001404:	08003e24 	.word	0x08003e24
 8001408:	e000ed00 	.word	0xe000ed00
 800140c:	08003e34 	.word	0x08003e34
 8001410:	08003e44 	.word	0x08003e44
 8001414:	08003e54 	.word	0x08003e54
 8001418:	08003e84 	.word	0x08003e84
 800141c:	08003e8c 	.word	0x08003e8c
 8001420:	08003e64 	.word	0x08003e64
 8001424:	08003e74 	.word	0x08003e74

08001428 <isSemihosting>:
isSemihosting():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:155
  uint16_t* pw = (uint16_t*) frame->pc;
 8001428:	6983      	ldr	r3, [r0, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:156
  if (*pw == opCode)
 800142a:	881a      	ldrh	r2, [r3, #0]
 800142c:	428a      	cmp	r2, r1
 800142e:	d001      	beq.n	8001434 <isSemihosting+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:313
  return 0;
 8001430:	2000      	movs	r0, #0
 8001432:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:158
      uint32_t r0 = frame->r0;
 8001434:	6802      	ldr	r2, [r0, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:170
      switch (r0)
 8001436:	3a03      	subs	r2, #3
 8001438:	2a01      	cmp	r2, #1
 800143a:	d901      	bls.n	8001440 <isSemihosting+0x18>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:305
          return 0;
 800143c:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:314
}
 800143e:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:310
      frame->pc += 2;
 8001440:	3302      	adds	r3, #2
 8001442:	6183      	str	r3, [r0, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cortexm/exception_handlers.c:311
      return 1;
 8001444:	2001      	movs	r0, #1
 8001446:	4770      	bx	lr

08001448 <SystemInit>:
SystemInit():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:178
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8001448:	4b0c      	ldr	r3, [pc, #48]	; (800147c <SystemInit+0x34>)
 800144a:	681a      	ldr	r2, [r3, #0]
 800144c:	f042 0201 	orr.w	r2, r2, #1
 8001450:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:181

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8001452:	2100      	movs	r1, #0
 8001454:	6099      	str	r1, [r3, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:184

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8001456:	681a      	ldr	r2, [r3, #0]
 8001458:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 800145c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001460:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:187

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8001462:	4a07      	ldr	r2, [pc, #28]	; (8001480 <SystemInit+0x38>)
 8001464:	605a      	str	r2, [r3, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:190

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8001466:	681a      	ldr	r2, [r3, #0]
 8001468:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800146c:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:193

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 800146e:	60d9      	str	r1, [r3, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:203

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8001470:	4b04      	ldr	r3, [pc, #16]	; (8001484 <SystemInit+0x3c>)
 8001472:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001476:	609a      	str	r2, [r3, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:205
#endif
}
 8001478:	4770      	bx	lr
 800147a:	bf00      	nop
 800147c:	40023800 	.word	0x40023800
 8001480:	24003010 	.word	0x24003010
 8001484:	e000ed00 	.word	0xe000ed00

08001488 <SystemCoreClockUpdate>:
SystemCoreClockUpdate():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:248
void SystemCoreClockUpdate(void)
{
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8001488:	4b22      	ldr	r3, [pc, #136]	; (8001514 <SystemCoreClockUpdate+0x8c>)
 800148a:	689b      	ldr	r3, [r3, #8]
 800148c:	f003 030c 	and.w	r3, r3, #12
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:250

  switch (tmp)
 8001490:	2b04      	cmp	r3, #4
 8001492:	d015      	beq.n	80014c0 <SystemCoreClockUpdate+0x38>
 8001494:	2b08      	cmp	r3, #8
 8001496:	d017      	beq.n	80014c8 <SystemCoreClockUpdate+0x40>
 8001498:	b11b      	cbz	r3, 80014a2 <SystemCoreClockUpdate+0x1a>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:281

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      SystemCoreClock = pllvco/pllp;
      break;
    default:
      SystemCoreClock = HSI_VALUE;
 800149a:	4b1f      	ldr	r3, [pc, #124]	; (8001518 <SystemCoreClockUpdate+0x90>)
 800149c:	4a1f      	ldr	r2, [pc, #124]	; (800151c <SystemCoreClockUpdate+0x94>)
 800149e:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:282
      break;
 80014a0:	e002      	b.n	80014a8 <SystemCoreClockUpdate+0x20>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:253
      SystemCoreClock = HSI_VALUE;
 80014a2:	4b1d      	ldr	r3, [pc, #116]	; (8001518 <SystemCoreClockUpdate+0x90>)
 80014a4:	4a1d      	ldr	r2, [pc, #116]	; (800151c <SystemCoreClockUpdate+0x94>)
 80014a6:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:286
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80014a8:	4b1a      	ldr	r3, [pc, #104]	; (8001514 <SystemCoreClockUpdate+0x8c>)
 80014aa:	689b      	ldr	r3, [r3, #8]
 80014ac:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80014b0:	4a1b      	ldr	r2, [pc, #108]	; (8001520 <SystemCoreClockUpdate+0x98>)
 80014b2:	5cd3      	ldrb	r3, [r2, r3]
 80014b4:	b2da      	uxtb	r2, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:288
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 80014b6:	4918      	ldr	r1, [pc, #96]	; (8001518 <SystemCoreClockUpdate+0x90>)
 80014b8:	680b      	ldr	r3, [r1, #0]
 80014ba:	40d3      	lsrs	r3, r2
 80014bc:	600b      	str	r3, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:289
}
 80014be:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:256
      SystemCoreClock = HSE_VALUE;
 80014c0:	4b15      	ldr	r3, [pc, #84]	; (8001518 <SystemCoreClockUpdate+0x90>)
 80014c2:	4a18      	ldr	r2, [pc, #96]	; (8001524 <SystemCoreClockUpdate+0x9c>)
 80014c4:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:257
      break;
 80014c6:	e7ef      	b.n	80014a8 <SystemCoreClockUpdate+0x20>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:263
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 80014c8:	4b12      	ldr	r3, [pc, #72]	; (8001514 <SystemCoreClockUpdate+0x8c>)
 80014ca:	6859      	ldr	r1, [r3, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:264
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80014cc:	685a      	ldr	r2, [r3, #4]
 80014ce:	f002 023f 	and.w	r2, r2, #63	; 0x3f
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:266
      if (pllsource != 0)
 80014d2:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 80014d6:	d013      	beq.n	8001500 <SystemCoreClockUpdate+0x78>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:269
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80014d8:	4b12      	ldr	r3, [pc, #72]	; (8001524 <SystemCoreClockUpdate+0x9c>)
 80014da:	fbb3 f3f2 	udiv	r3, r3, r2
 80014de:	4a0d      	ldr	r2, [pc, #52]	; (8001514 <SystemCoreClockUpdate+0x8c>)
 80014e0:	6852      	ldr	r2, [r2, #4]
 80014e2:	f3c2 1288 	ubfx	r2, r2, #6, #9
 80014e6:	fb02 f303 	mul.w	r3, r2, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:277
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 80014ea:	4a0a      	ldr	r2, [pc, #40]	; (8001514 <SystemCoreClockUpdate+0x8c>)
 80014ec:	6852      	ldr	r2, [r2, #4]
 80014ee:	f3c2 4201 	ubfx	r2, r2, #16, #2
 80014f2:	3201      	adds	r2, #1
 80014f4:	0052      	lsls	r2, r2, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:278
      SystemCoreClock = pllvco/pllp;
 80014f6:	fbb3 f3f2 	udiv	r3, r3, r2
 80014fa:	4a07      	ldr	r2, [pc, #28]	; (8001518 <SystemCoreClockUpdate+0x90>)
 80014fc:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:279
      break;
 80014fe:	e7d3      	b.n	80014a8 <SystemCoreClockUpdate+0x20>
/home/vlad/Downloads/f407-disc-blink/Debug/../system/src/cmsis/system_stm32f4xx.c:274
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001500:	4b06      	ldr	r3, [pc, #24]	; (800151c <SystemCoreClockUpdate+0x94>)
 8001502:	fbb3 f3f2 	udiv	r3, r3, r2
 8001506:	4a03      	ldr	r2, [pc, #12]	; (8001514 <SystemCoreClockUpdate+0x8c>)
 8001508:	6852      	ldr	r2, [r2, #4]
 800150a:	f3c2 1288 	ubfx	r2, r2, #6, #9
 800150e:	fb02 f303 	mul.w	r3, r2, r3
 8001512:	e7ea      	b.n	80014ea <SystemCoreClockUpdate+0x62>
 8001514:	40023800 	.word	0x40023800
 8001518:	2000001c 	.word	0x2000001c
 800151c:	00f42400 	.word	0x00f42400
 8001520:	2000000c 	.word	0x2000000c
 8001524:	007a1200 	.word	0x007a1200

08001528 <blink_led_init>:
blink_led_init():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/BlinkLed.c:12

// ----------------------------------------------------------------------------

void
blink_led_init()
{
 8001528:	b530      	push	{r4, r5, lr}
 800152a:	b087      	sub	sp, #28
/home/vlad/Downloads/f407-disc-blink/Debug/../src/BlinkLed.c:14
  // Enable GPIO Peripheral clock
  RCC->AHB1ENR |= BLINK_RCC_MASKx(BLINK_PORT_NUMBER);
 800152c:	4a0c      	ldr	r2, [pc, #48]	; (8001560 <blink_led_init+0x38>)
 800152e:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001530:	f043 0308 	orr.w	r3, r3, #8
 8001534:	6313      	str	r3, [r2, #48]	; 0x30
/home/vlad/Downloads/f407-disc-blink/Debug/../src/BlinkLed.c:19

  GPIO_InitTypeDef GPIO_InitStructure;

  // Configure pin in output push/pull mode
  GPIO_InitStructure.Pin = BLINK_PIN_MASK(BLINK_PIN_NUMBER);
 8001536:	f44f 5580 	mov.w	r5, #4096	; 0x1000
 800153a:	9501      	str	r5, [sp, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/BlinkLed.c:20
  GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
 800153c:	2301      	movs	r3, #1
 800153e:	9302      	str	r3, [sp, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/BlinkLed.c:21
  GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
 8001540:	2202      	movs	r2, #2
 8001542:	9204      	str	r2, [sp, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/BlinkLed.c:22
  GPIO_InitStructure.Pull = GPIO_PULLUP;
 8001544:	9303      	str	r3, [sp, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/BlinkLed.c:23
  HAL_GPIO_Init(BLINK_GPIOx(BLINK_PORT_NUMBER), &GPIO_InitStructure);
 8001546:	4c07      	ldr	r4, [pc, #28]	; (8001564 <blink_led_init+0x3c>)
 8001548:	a901      	add	r1, sp, #4
 800154a:	4620      	mov	r0, r4
 800154c:	f7ff f842 	bl	80005d4 <HAL_GPIO_Init>
blink_led_off():
/home/vlad/Downloads/f407-disc-blink/Debug/../include/BlinkLed.h:77
{
#if (BLINK_ACTIVE_LOW)
    HAL_GPIO_WritePin(BLINK_GPIOx(BLINK_PORT_NUMBER),
        BLINK_PIN_MASK(BLINK_PIN_NUMBER), GPIO_PIN_SET);
#else
    HAL_GPIO_WritePin(BLINK_GPIOx(BLINK_PORT_NUMBER),
 8001550:	2200      	movs	r2, #0
 8001552:	4629      	mov	r1, r5
 8001554:	4620      	mov	r0, r4
 8001556:	f7ff f9b9 	bl	80008cc <HAL_GPIO_WritePin>
blink_led_init():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/BlinkLed.c:27

  // Start with led turned off
  blink_led_off();
}
 800155a:	b007      	add	sp, #28
 800155c:	bd30      	pop	{r4, r5, pc}
 800155e:	bf00      	nop
 8001560:	40023800 	.word	0x40023800
 8001564:	40020c00 	.word	0x40020c00

08001568 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/FreeRTOS_helper.c:56 (discriminator 1)
{

  (void) pxTask;
  (void) pcTaskName;

  for (;;)
 8001568:	e7fe      	b.n	8001568 <vApplicationStackOverflowHook>

0800156a <vAssertCalled>:
vAssertCalled():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/FreeRTOS_helper.c:71 (discriminator 1)
vAssertCalled (char *pucFile, unsigned long ulLine)
{
  (void) pucFile;
  (void) ulLine;

  for (;;)
 800156a:	e7fe      	b.n	800156a <vAssertCalled>

0800156c <SystemClock_Config>:
SystemClock_Config():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:108
 * @param  None
 * @retval None
 */
void
SystemClock_Config(void)
{
 800156c:	b510      	push	{r4, lr}
 800156e:	b094      	sub	sp, #80	; 0x50
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:110
  // Enable Power Control clock
  __PWR_CLK_ENABLE();
 8001570:	4b21      	ldr	r3, [pc, #132]	; (80015f8 <SystemClock_Config+0x8c>)
 8001572:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001574:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001578:	641a      	str	r2, [r3, #64]	; 0x40
 800157a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800157c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001580:	9301      	str	r3, [sp, #4]
 8001582:	9b01      	ldr	r3, [sp, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:116

  // The voltage scaling allows optimizing the power consumption when the
  // device is clocked below the maximum system frequency, to update the
  // voltage scaling value regarding system frequency refer to product
  // datasheet.
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001584:	4b1d      	ldr	r3, [pc, #116]	; (80015fc <SystemClock_Config+0x90>)
 8001586:	681a      	ldr	r2, [r3, #0]
 8001588:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800158c:	601a      	str	r2, [r3, #0]
 800158e:	681b      	ldr	r3, [r3, #0]
 8001590:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001594:	9302      	str	r3, [sp, #8]
 8001596:	9b02      	ldr	r3, [sp, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:122

  RCC_OscInitTypeDef RCC_OscInitStruct;

#if defined(HSE_VALUE) && (HSE_VALUE != 0)
  // Enable HSE Oscillator and activate PLL with HSE as source
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001598:	2301      	movs	r3, #1
 800159a:	9308      	str	r3, [sp, #32]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:123
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800159c:	9309      	str	r3, [sp, #36]	; 0x24
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:124
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800159e:	2402      	movs	r4, #2
 80015a0:	940e      	str	r4, [sp, #56]	; 0x38
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:125
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80015a2:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80015a6:	930f      	str	r3, [sp, #60]	; 0x3c
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:128
  // This assumes the HSE_VALUE is a multiple of 1MHz. If this is not
  // your case, you have to recompute these PLL constants.
  RCC_OscInitStruct.PLL.PLLM = (HSE_VALUE/1000000u);
 80015a8:	2308      	movs	r3, #8
 80015aa:	9310      	str	r3, [sp, #64]	; 0x40
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:139
  // This assumes the HSI_VALUE is a multiple of 1MHz. If this is not
  // your case, you have to recompute these PLL constants.
  RCC_OscInitStruct.PLL.PLLM = (HSI_VALUE/1000000u);
#endif

  RCC_OscInitStruct.PLL.PLLN = 336;
 80015ac:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80015b0:	9311      	str	r3, [sp, #68]	; 0x44
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:140
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80015b2:	9412      	str	r4, [sp, #72]	; 0x48
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:141
  RCC_OscInitStruct.PLL.PLLQ = 7;
 80015b4:	2307      	movs	r3, #7
 80015b6:	9313      	str	r3, [sp, #76]	; 0x4c
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:142
  HAL_RCC_OscConfig(&RCC_OscInitStruct);
 80015b8:	a808      	add	r0, sp, #32
 80015ba:	f7ff f9a3 	bl	8000904 <HAL_RCC_OscConfig>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:147

  RCC_ClkInitTypeDef RCC_ClkInitStruct;
  // Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2
  // clocks dividers
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK
 80015be:	230f      	movs	r3, #15
 80015c0:	9303      	str	r3, [sp, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:149
      | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80015c2:	9404      	str	r4, [sp, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:150
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80015c4:	2300      	movs	r3, #0
 80015c6:	9305      	str	r3, [sp, #20]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:151
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80015c8:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80015cc:	9306      	str	r3, [sp, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:152
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80015ce:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80015d2:	9307      	str	r3, [sp, #28]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:153
  HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5);
 80015d4:	2105      	movs	r1, #5
 80015d6:	a803      	add	r0, sp, #12
 80015d8:	f7ff fbe2 	bl	8000da0 <HAL_RCC_ClockConfig>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:155

  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 80015dc:	f7ff fde4 	bl	80011a8 <HAL_RCC_GetHCLKFreq>
 80015e0:	4b07      	ldr	r3, [pc, #28]	; (8001600 <SystemClock_Config+0x94>)
 80015e2:	fba3 3000 	umull	r3, r0, r3, r0
 80015e6:	0980      	lsrs	r0, r0, #6
 80015e8:	f7fe ffc2 	bl	8000570 <HAL_SYSTICK_Config>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:157

  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 80015ec:	2004      	movs	r0, #4
 80015ee:	f7fe ffd3 	bl	8000598 <HAL_SYSTICK_CLKSourceConfig>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:158
}
 80015f2:	b014      	add	sp, #80	; 0x50
 80015f4:	bd10      	pop	{r4, pc}
 80015f6:	bf00      	nop
 80015f8:	40023800 	.word	0x40023800
 80015fc:	40007000 	.word	0x40007000
 8001600:	10624dd3 	.word	0x10624dd3

08001604 <__initialize_hardware>:
__initialize_hardware():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:57
{
 8001604:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:60
  HAL_Init();
 8001606:	f7fe ff29 	bl	800045c <HAL_Init>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:63
  SystemClock_Config();
 800160a:	f7ff ffaf 	bl	800156c <SystemClock_Config>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:67
  SystemCoreClockUpdate();
 800160e:	f7ff ff3b 	bl	8001488 <SystemCoreClockUpdate>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/_initialize_hardware.c:68
}
 8001612:	bd08      	pop	{r3, pc}

08001614 <taskB>:
taskB():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:55

#define BUTTON_PORT_NUMBER        (0)
#define BUTTON_PIN_NUMBER         (0)
SemaphoreHandle_t xSemaphore = NULL;

void taskB(void *parms __attribute__((unused))) {
 8001614:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:60
	char buffer[10];

	// Infinite loop
	while (1) {
		trace_puts("Wait for ISR semaphore");
 8001616:	4817      	ldr	r0, [pc, #92]	; (8001674 <taskB+0x60>)
 8001618:	f7ff fe3c 	bl	8001294 <trace_puts>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:62

		if ( xSemaphoreTake( xSemaphore, portMAX_DELAY ) == pdTRUE) {
 800161c:	2300      	movs	r3, #0
 800161e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001622:	4619      	mov	r1, r3
 8001624:	4814      	ldr	r0, [pc, #80]	; (8001678 <taskB+0x64>)
 8001626:	6800      	ldr	r0, [r0, #0]
 8001628:	f000 fdbc 	bl	80021a4 <xQueueGenericReceive>
 800162c:	2801      	cmp	r0, #1
 800162e:	d1f2      	bne.n	8001616 <taskB+0x2>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:66
			/* We were able to obtain the semaphore and can now access the
			 shared resource. */

			it2 = SysTick->VAL;
 8001630:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001634:	699a      	ldr	r2, [r3, #24]
 8001636:	4c11      	ldr	r4, [pc, #68]	; (800167c <taskB+0x68>)
 8001638:	6022      	str	r2, [r4, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:67
			SysTick->CTRL &= ~0x00000001;
 800163a:	691a      	ldr	r2, [r3, #16]
 800163c:	f022 0201 	bic.w	r2, r2, #1
 8001640:	611a      	str	r2, [r3, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:68
			trace_puts("Semaphore given");
 8001642:	480f      	ldr	r0, [pc, #60]	; (8001680 <taskB+0x6c>)
 8001644:	f7ff fe26 	bl	8001294 <trace_puts>
blink_led_off():
/home/vlad/Downloads/f407-disc-blink/Debug/../include/BlinkLed.h:77
 8001648:	2200      	movs	r2, #0
 800164a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800164e:	480d      	ldr	r0, [pc, #52]	; (8001684 <taskB+0x70>)
 8001650:	f7ff f93c 	bl	80008cc <HAL_GPIO_WritePin>
taskB():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:70
			blink_led_off();
			trace_printf("Time: %u\t%u\n", xTaskGetTickCount(),
 8001654:	f001 f89e 	bl	8002794 <xTaskGetTickCount>
 8001658:	4601      	mov	r1, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:71
					0x00FFFFFF & (it1 - it2));\
 800165a:	4b0b      	ldr	r3, [pc, #44]	; (8001688 <taskB+0x74>)
 800165c:	681a      	ldr	r2, [r3, #0]
 800165e:	6823      	ldr	r3, [r4, #0]
 8001660:	1ad2      	subs	r2, r2, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:70
			trace_printf("Time: %u\t%u\n", xTaskGetTickCount(),
 8001662:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8001666:	4809      	ldr	r0, [pc, #36]	; (800168c <taskB+0x78>)
 8001668:	f7ff fdfa 	bl	8001260 <trace_printf>
NVIC_EnableIRQ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1496
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
 800166c:	4b08      	ldr	r3, [pc, #32]	; (8001690 <taskB+0x7c>)
 800166e:	2240      	movs	r2, #64	; 0x40
 8001670:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1497
}
 8001672:	e7d0      	b.n	8001616 <taskB+0x2>
 8001674:	08003ed0 	.word	0x08003ed0
 8001678:	20000130 	.word	0x20000130
 800167c:	20000128 	.word	0x20000128
 8001680:	08003ee8 	.word	0x08003ee8
 8001684:	40020c00 	.word	0x40020c00
 8001688:	20000124 	.word	0x20000124
 800168c:	08003ef8 	.word	0x08003ef8
 8001690:	e000e100 	.word	0xe000e100

08001694 <SysTick_Init>:
SysTick_Init():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:92
#pragma GCC diagnostic ignored "-Wunused-parameter"
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#pragma GCC diagnostic ignored "-Wreturn-type"

void SysTick_Init(void) {
	SysTick->CTRL = 0x00000005;
 8001694:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001698:	2205      	movs	r2, #5
 800169a:	611a      	str	r2, [r3, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:93
}
 800169c:	4770      	bx	lr
	...

080016a0 <main>:
main():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:95

int main(int argc, char *argv[]) {
 80016a0:	b530      	push	{r4, r5, lr}
 80016a2:	b08b      	sub	sp, #44	; 0x2c
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:98
	// Show the program parameters (passed via semihosting).
	// Output is via the semihosting output channel.
	SysTick_Init();
 80016a4:	f7ff fff6 	bl	8001694 <SysTick_Init>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:99
	vSemaphoreCreateBinary(xSemaphore);
 80016a8:	2203      	movs	r2, #3
 80016aa:	2100      	movs	r1, #0
 80016ac:	2001      	movs	r0, #1
 80016ae:	f000 fc0d 	bl	8001ecc <xQueueGenericCreate>
 80016b2:	4b21      	ldr	r3, [pc, #132]	; (8001738 <main+0x98>)
 80016b4:	6018      	str	r0, [r3, #0]
 80016b6:	b120      	cbz	r0, 80016c2 <main+0x22>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:99 (discriminator 1)
 80016b8:	2300      	movs	r3, #0
 80016ba:	461a      	mov	r2, r3
 80016bc:	4619      	mov	r1, r3
 80016be:	f000 fc31 	bl	8001f24 <xQueueGenericSend>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:100 (discriminator 3)
	xSemaphoreTake(xSemaphore, portMAX_DELAY);
 80016c2:	2300      	movs	r3, #0
 80016c4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80016c8:	4619      	mov	r1, r3
 80016ca:	481b      	ldr	r0, [pc, #108]	; (8001738 <main+0x98>)
 80016cc:	6800      	ldr	r0, [r0, #0]
 80016ce:	f000 fd69 	bl	80021a4 <xQueueGenericReceive>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:101 (discriminator 3)
	blink_led_init();
 80016d2:	f7ff ff29 	bl	8001528 <blink_led_init>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:107 (discriminator 3)

	// Send a greeting to the trace device (skipped on Release).

	// At this stage the system clock should have already been configured
	// at high speed.
	trace_printf("System clock: %u Hz\n", SystemCoreClock);
 80016d6:	4b19      	ldr	r3, [pc, #100]	; (800173c <main+0x9c>)
 80016d8:	6819      	ldr	r1, [r3, #0]
 80016da:	4819      	ldr	r0, [pc, #100]	; (8001740 <main+0xa0>)
 80016dc:	f7ff fdc0 	bl	8001260 <trace_printf>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:109 (discriminator 3)

	RCC->AHB1ENR |= BLINK_RCC_MASKx(BUTTON_PORT_NUMBER);
 80016e0:	4a18      	ldr	r2, [pc, #96]	; (8001744 <main+0xa4>)
 80016e2:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80016e4:	f043 0301 	orr.w	r3, r3, #1
 80016e8:	6313      	str	r3, [r2, #48]	; 0x30
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:114 (discriminator 3)

	GPIO_InitTypeDef GPIO_InitStructure;

	// Configure pin in output push/pull mode
	GPIO_InitStructure.Pin = BLINK_PIN_MASK(BUTTON_PIN_NUMBER);
 80016ea:	2301      	movs	r3, #1
 80016ec:	9305      	str	r3, [sp, #20]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:115 (discriminator 3)
	GPIO_InitStructure.Mode = GPIO_MODE_IT_RISING;
 80016ee:	4b16      	ldr	r3, [pc, #88]	; (8001748 <main+0xa8>)
 80016f0:	9306      	str	r3, [sp, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:116 (discriminator 3)
	GPIO_InitStructure.Speed = GPIO_SPEED_LOW;
 80016f2:	2400      	movs	r4, #0
 80016f4:	9408      	str	r4, [sp, #32]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:117 (discriminator 3)
	GPIO_InitStructure.Pull = GPIO_NOPULL;
 80016f6:	9407      	str	r4, [sp, #28]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:118 (discriminator 3)
	HAL_GPIO_Init(BLINK_GPIOx(BUTTON_PORT_NUMBER), &GPIO_InitStructure);
 80016f8:	a905      	add	r1, sp, #20
 80016fa:	4814      	ldr	r0, [pc, #80]	; (800174c <main+0xac>)
 80016fc:	f7fe ff6a 	bl	80005d4 <HAL_GPIO_Init>
NVIC_SetPriority():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1581 (discriminator 3)
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 8001700:	4b13      	ldr	r3, [pc, #76]	; (8001750 <main+0xb0>)
 8001702:	22e0      	movs	r2, #224	; 0xe0
 8001704:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
NVIC_EnableIRQ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1496 (discriminator 3)
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
 8001708:	2240      	movs	r2, #64	; 0x40
 800170a:	601a      	str	r2, [r3, #0]
main():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:122 (discriminator 3)
	NVIC_SetPriority(EXTI0_IRQn, configMAX_SYSCALL_INTERRUPT_PRIORITY - 1);
	NVIC_EnableIRQ(EXTI0_IRQn);

	xTaskCreate(taskB, "taskB", 256, NULL, configMAX_PRIORITIES-1,
 800170c:	9403      	str	r4, [sp, #12]
 800170e:	9402      	str	r4, [sp, #8]
 8001710:	4d10      	ldr	r5, [pc, #64]	; (8001754 <main+0xb4>)
 8001712:	9501      	str	r5, [sp, #4]
 8001714:	2304      	movs	r3, #4
 8001716:	9300      	str	r3, [sp, #0]
 8001718:	4623      	mov	r3, r4
 800171a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800171e:	490e      	ldr	r1, [pc, #56]	; (8001758 <main+0xb8>)
 8001720:	480e      	ldr	r0, [pc, #56]	; (800175c <main+0xbc>)
 8001722:	f000 ff2b 	bl	800257c <xTaskGenericCreate>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:125 (discriminator 3)
			&taskBHandle);

	vTaskStartScheduler();
 8001726:	f000 fff3 	bl	8002710 <vTaskStartScheduler>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:126 (discriminator 3)
	vTaskResume(taskBHandle);
 800172a:	6828      	ldr	r0, [r5, #0]
 800172c:	f000 ffb4 	bl	8002698 <vTaskResume>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:129 (discriminator 3)

	return 0;
}
 8001730:	4620      	mov	r0, r4
 8001732:	b00b      	add	sp, #44	; 0x2c
 8001734:	bd30      	pop	{r4, r5, pc}
 8001736:	bf00      	nop
 8001738:	20000130 	.word	0x20000130
 800173c:	2000001c 	.word	0x2000001c
 8001740:	08003f08 	.word	0x08003f08
 8001744:	40023800 	.word	0x40023800
 8001748:	10110000 	.word	0x10110000
 800174c:	40020000 	.word	0x40020000
 8001750:	e000e100 	.word	0xe000e100
 8001754:	2000012c 	.word	0x2000012c
 8001758:	08003f20 	.word	0x08003f20
 800175c:	08001615 	.word	0x08001615

08001760 <EXTI0_IRQHandler>:
EXTI0_IRQHandler():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:133

#pragma GCC diagnostic pop

void EXTI0_IRQHandler(void) {
 8001760:	b500      	push	{lr}
 8001762:	b083      	sub	sp, #12
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:135

	trace_printf("EXTI\n");
 8001764:	4814      	ldr	r0, [pc, #80]	; (80017b8 <EXTI0_IRQHandler+0x58>)
 8001766:	f7ff fd7b 	bl	8001260 <trace_printf>
NVIC_DisableIRQ():
/home/vlad/Downloads/f407-disc-blink/Debug/../system/include/cmsis/core_cm4.h:1508
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 800176a:	4b14      	ldr	r3, [pc, #80]	; (80017bc <EXTI0_IRQHandler+0x5c>)
 800176c:	2240      	movs	r2, #64	; 0x40
 800176e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
blink_led_on():
/home/vlad/Downloads/f407-disc-blink/Debug/../include/BlinkLed.h:64
    HAL_GPIO_WritePin(BLINK_GPIOx(BLINK_PORT_NUMBER),
 8001772:	2201      	movs	r2, #1
 8001774:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001778:	4811      	ldr	r0, [pc, #68]	; (80017c0 <EXTI0_IRQHandler+0x60>)
 800177a:	f7ff f8a7 	bl	80008cc <HAL_GPIO_WritePin>
EXTI0_IRQHandler():
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:141

	NVIC_DisableIRQ(EXTI0_IRQn);

	BaseType_t xHigherPriorityTaskWoken;
	blink_led_on();
	SysTick->LOAD = 0x00FFFFFF;
 800177e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001782:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8001786:	615a      	str	r2, [r3, #20]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:142
	SysTick->CTRL |= 0x00000001;
 8001788:	691a      	ldr	r2, [r3, #16]
 800178a:	f042 0201 	orr.w	r2, r2, #1
 800178e:	611a      	str	r2, [r3, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:143
	it1 = SysTick->VAL;
 8001790:	699a      	ldr	r2, [r3, #24]
 8001792:	4b0c      	ldr	r3, [pc, #48]	; (80017c4 <EXTI0_IRQHandler+0x64>)
 8001794:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:145

	xSemaphoreGiveFromISR(xSemaphore, &xHigherPriorityTaskWoken);
 8001796:	a901      	add	r1, sp, #4
 8001798:	4b0b      	ldr	r3, [pc, #44]	; (80017c8 <EXTI0_IRQHandler+0x68>)
 800179a:	6818      	ldr	r0, [r3, #0]
 800179c:	f000 fcb6 	bl	800210c <xQueueGiveFromISR>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:149

	// Resume the suspended task.

	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 80017a0:	9b01      	ldr	r3, [sp, #4]
 80017a2:	b12b      	cbz	r3, 80017b0 <EXTI0_IRQHandler+0x50>
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:149 (discriminator 1)
 80017a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80017a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80017ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
/home/vlad/Downloads/f407-disc-blink/Debug/../src/main.c:151

}
 80017b0:	b003      	add	sp, #12
 80017b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80017b6:	bf00      	nop
 80017b8:	08003f28 	.word	0x08003f28
 80017bc:	e000e100 	.word	0xe000e100
 80017c0:	40020c00 	.word	0x40020c00
 80017c4:	20000124 	.word	0x20000124
 80017c8:	20000130 	.word	0x20000130

080017cc <prvHeapInit>:
prvHeapInit():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:286
{
BlockLink_t *pxFirstFreeBlock;
uint8_t *pucAlignedHeap;

	/* Ensure the heap starts on a correctly aligned boundary. */
	pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
 80017cc:	4b07      	ldr	r3, [pc, #28]	; (80017ec <prvHeapInit+0x20>)
 80017ce:	f023 0307 	bic.w	r3, r3, #7
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:290

	/* xStart is used to hold a pointer to the first item in the list of free
	blocks.  The void cast is used to prevent compiler warnings. */
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80017d2:	4a07      	ldr	r2, [pc, #28]	; (80017f0 <prvHeapInit+0x24>)
 80017d4:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:291
	xStart.xBlockSize = ( size_t ) 0;
 80017d6:	2000      	movs	r0, #0
 80017d8:	6050      	str	r0, [r2, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:294

	/* xEnd is used to mark the end of the list of free blocks. */
	xEnd.xBlockSize = configADJUSTED_HEAP_SIZE;
 80017da:	4a06      	ldr	r2, [pc, #24]	; (80017f4 <prvHeapInit+0x28>)
 80017dc:	f242 71f8 	movw	r1, #10232	; 0x27f8
 80017e0:	6051      	str	r1, [r2, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:295
	xEnd.pxNextFreeBlock = NULL;
 80017e2:	6010      	str	r0, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:300

	/* To start with there is a single free block that is sized to take up the
	entire heap space. */
	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
	pxFirstFreeBlock->xBlockSize = configADJUSTED_HEAP_SIZE;
 80017e4:	6059      	str	r1, [r3, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:301
	pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
 80017e6:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:302
}
 80017e8:	4770      	bx	lr
 80017ea:	bf00      	nop
 80017ec:	2000013c 	.word	0x2000013c
 80017f0:	20002940 	.word	0x20002940
 80017f4:	20002934 	.word	0x20002934

080017f8 <pvPortMalloc>:
pvPortMalloc():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:150
{
 80017f8:	b570      	push	{r4, r5, r6, lr}
 80017fa:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:155
	vTaskSuspendAll();
 80017fc:	f000 ffc2 	bl	8002784 <vTaskSuspendAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:159
		if( xHeapHasBeenInitialised == pdFALSE )
 8001800:	4b22      	ldr	r3, [pc, #136]	; (800188c <pvPortMalloc+0x94>)
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	b17b      	cbz	r3, 8001826 <pvPortMalloc+0x2e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:167
		if( xWantedSize > 0 )
 8001806:	b134      	cbz	r4, 8001816 <pvPortMalloc+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:169
			xWantedSize += heapSTRUCT_SIZE;
 8001808:	3408      	adds	r4, #8
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:172
			if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0 )
 800180a:	f014 0f07 	tst.w	r4, #7
 800180e:	d002      	beq.n	8001816 <pvPortMalloc+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:175
				xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8001810:	f024 0407 	bic.w	r4, r4, #7
 8001814:	3408      	adds	r4, #8
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:179
		if( ( xWantedSize > 0 ) && ( xWantedSize < configADJUSTED_HEAP_SIZE ) )
 8001816:	1e62      	subs	r2, r4, #1
 8001818:	f242 73f6 	movw	r3, #10230	; 0x27f6
 800181c:	429a      	cmp	r2, r3
 800181e:	d830      	bhi.n	8001882 <pvPortMalloc+0x8a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:184
			pxBlock = xStart.pxNextFreeBlock;
 8001820:	491b      	ldr	r1, [pc, #108]	; (8001890 <pvPortMalloc+0x98>)
 8001822:	680b      	ldr	r3, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:185
			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8001824:	e007      	b.n	8001836 <pvPortMalloc+0x3e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:161
			prvHeapInit();
 8001826:	f7ff ffd1 	bl	80017cc <prvHeapInit>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:162
			xHeapHasBeenInitialised = pdTRUE;
 800182a:	4b18      	ldr	r3, [pc, #96]	; (800188c <pvPortMalloc+0x94>)
 800182c:	2201      	movs	r2, #1
 800182e:	601a      	str	r2, [r3, #0]
 8001830:	e7e9      	b.n	8001806 <pvPortMalloc+0xe>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:187
				pxPreviousBlock = pxBlock;
 8001832:	4619      	mov	r1, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:188
				pxBlock = pxBlock->pxNextFreeBlock;
 8001834:	4613      	mov	r3, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:185
			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8001836:	685a      	ldr	r2, [r3, #4]
 8001838:	42a2      	cmp	r2, r4
 800183a:	d202      	bcs.n	8001842 <pvPortMalloc+0x4a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:185 (discriminator 1)
 800183c:	681a      	ldr	r2, [r3, #0]
 800183e:	2a00      	cmp	r2, #0
 8001840:	d1f7      	bne.n	8001832 <pvPortMalloc+0x3a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:192
			if( pxBlock != &xEnd )
 8001842:	4a14      	ldr	r2, [pc, #80]	; (8001894 <pvPortMalloc+0x9c>)
 8001844:	4293      	cmp	r3, r2
 8001846:	d01e      	beq.n	8001886 <pvPortMalloc+0x8e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:196
				pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + heapSTRUCT_SIZE );
 8001848:	680d      	ldr	r5, [r1, #0]
 800184a:	3508      	adds	r5, #8
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:200
				pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800184c:	681a      	ldr	r2, [r3, #0]
 800184e:	600a      	str	r2, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:203
				if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8001850:	685a      	ldr	r2, [r3, #4]
 8001852:	1b12      	subs	r2, r2, r4
 8001854:	2a10      	cmp	r2, #16
 8001856:	d90b      	bls.n	8001870 <pvPortMalloc+0x78>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:208
					pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8001858:	191e      	adds	r6, r3, r4
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:212
					pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800185a:	6072      	str	r2, [r6, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:213
					pxBlock->xBlockSize = xWantedSize;
 800185c:	605c      	str	r4, [r3, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:216
					prvInsertBlockIntoFreeList( ( pxNewBlockLink ) );
 800185e:	6874      	ldr	r4, [r6, #4]
 8001860:	4a0b      	ldr	r2, [pc, #44]	; (8001890 <pvPortMalloc+0x98>)
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:216 (discriminator 1)
 8001862:	4610      	mov	r0, r2
 8001864:	6812      	ldr	r2, [r2, #0]
 8001866:	6851      	ldr	r1, [r2, #4]
 8001868:	42a1      	cmp	r1, r4
 800186a:	d3fa      	bcc.n	8001862 <pvPortMalloc+0x6a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:216 (discriminator 4)
 800186c:	6032      	str	r2, [r6, #0]
 800186e:	6006      	str	r6, [r0, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:219 (discriminator 5)
				xFreeBytesRemaining -= pxBlock->xBlockSize;
 8001870:	6859      	ldr	r1, [r3, #4]
 8001872:	4a09      	ldr	r2, [pc, #36]	; (8001898 <pvPortMalloc+0xa0>)
 8001874:	6813      	ldr	r3, [r2, #0]
 8001876:	1a5b      	subs	r3, r3, r1
 8001878:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:225
	( void ) xTaskResumeAll();
 800187a:	f001 f837 	bl	80028ec <xTaskResumeAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:238
}
 800187e:	4628      	mov	r0, r5
 8001880:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:153
void *pvReturn = NULL;
 8001882:	2500      	movs	r5, #0
 8001884:	e7f9      	b.n	800187a <pvPortMalloc+0x82>
 8001886:	2500      	movs	r5, #0
 8001888:	e7f7      	b.n	800187a <pvPortMalloc+0x82>
 800188a:	bf00      	nop
 800188c:	2000293c 	.word	0x2000293c
 8001890:	20002940 	.word	0x20002940
 8001894:	20002934 	.word	0x20002934
 8001898:	20000020 	.word	0x20000020

0800189c <vPortFree>:
vPortFree():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:246
	if( pv != NULL )
 800189c:	b1c8      	cbz	r0, 80018d2 <vPortFree+0x36>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:242
{
 800189e:	b538      	push	{r3, r4, r5, lr}
 80018a0:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:250
		puc -= heapSTRUCT_SIZE;
 80018a2:	f1a0 0508 	sub.w	r5, r0, #8
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:256
		vTaskSuspendAll();
 80018a6:	f000 ff6d 	bl	8002784 <vTaskSuspendAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:259
			prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80018aa:	f854 0c04 	ldr.w	r0, [r4, #-4]
 80018ae:	4b09      	ldr	r3, [pc, #36]	; (80018d4 <vPortFree+0x38>)
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:259 (discriminator 1)
 80018b0:	4619      	mov	r1, r3
 80018b2:	681b      	ldr	r3, [r3, #0]
 80018b4:	685a      	ldr	r2, [r3, #4]
 80018b6:	4282      	cmp	r2, r0
 80018b8:	d3fa      	bcc.n	80018b0 <vPortFree+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:259 (discriminator 4)
 80018ba:	f844 3c08 	str.w	r3, [r4, #-8]
 80018be:	600d      	str	r5, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:260 (discriminator 4)
			xFreeBytesRemaining += pxLink->xBlockSize;
 80018c0:	f854 1c04 	ldr.w	r1, [r4, #-4]
 80018c4:	4a04      	ldr	r2, [pc, #16]	; (80018d8 <vPortFree+0x3c>)
 80018c6:	6813      	ldr	r3, [r2, #0]
 80018c8:	440b      	add	r3, r1
 80018ca:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:263 (discriminator 4)
		( void ) xTaskResumeAll();
 80018cc:	f001 f80e 	bl	80028ec <xTaskResumeAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/MemMang/heap_2.c:265 (discriminator 4)
}
 80018d0:	bd38      	pop	{r3, r4, r5, pc}
 80018d2:	4770      	bx	lr
 80018d4:	20002940 	.word	0x20002940
 80018d8:	20000020 	.word	0x20000020

080018dc <prvPortStartFirstTask>:
prvPortStartFirstTask():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:266
}
/*-----------------------------------------------------------*/

static void prvPortStartFirstTask( void )
{
	__asm volatile(
 80018dc:	4806      	ldr	r0, [pc, #24]	; (80018f8 <prvPortStartFirstTask+0x1c>)
 80018de:	6800      	ldr	r0, [r0, #0]
 80018e0:	6800      	ldr	r0, [r0, #0]
 80018e2:	f380 8808 	msr	MSP, r0
 80018e6:	b662      	cpsie	i
 80018e8:	b661      	cpsie	f
 80018ea:	f3bf 8f4f 	dsb	sy
 80018ee:	f3bf 8f6f 	isb	sy
 80018f2:	df00      	svc	0
 80018f4:	bf00      	nop
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:278
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80018f6:	0000      	.short	0x0000
 80018f8:	e000ed08 	.word	0xe000ed08

080018fc <pxPortInitialiseStack>:
pxPortInitialiseStack():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:217
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80018fc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001900:	f840 3c04 	str.w	r3, [r0, #-4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:219
	*pxTopOfStack = ( StackType_t ) pxCode;	/* PC */
 8001904:	f840 1c08 	str.w	r1, [r0, #-8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:221
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8001908:	4b03      	ldr	r3, [pc, #12]	; (8001918 <pxPortInitialiseStack+0x1c>)
 800190a:	f840 3c0c 	str.w	r3, [r0, #-12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:223
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800190e:	f840 2c20 	str.w	r2, [r0, #-32]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:227
}
 8001912:	3840      	subs	r0, #64	; 0x40
 8001914:	4770      	bx	lr
 8001916:	bf00      	nop
 8001918:	08001969 	.word	0x08001969

0800191c <SVC_Handler>:
SVC_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:246
	__asm volatile (
 800191c:	4b07      	ldr	r3, [pc, #28]	; (800193c <pxCurrentTCBConst2>)
 800191e:	6819      	ldr	r1, [r3, #0]
 8001920:	6808      	ldr	r0, [r1, #0]
 8001922:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8001926:	f380 8809 	msr	PSP, r0
 800192a:	f3bf 8f6f 	isb	sy
 800192e:	f04f 0000 	mov.w	r0, #0
 8001932:	f380 8811 	msr	BASEPRI, r0
 8001936:	f04e 0e0d 	orr.w	lr, lr, #13
 800193a:	4770      	bx	lr

0800193c <pxCurrentTCBConst2>:
 800193c:	200029ac 	.word	0x200029ac

08001940 <vPortYield>:
vPortYield():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:370
/*-----------------------------------------------------------*/

void vPortYield( void )
{
	/* Set a PendSV to request a context switch. */
	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8001940:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001944:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001948:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:374

	/* Barriers are normally not required but do ensure the code is completely
	within the specified behaviour for the architecture. */
	__asm volatile( "dsb" );
 800194c:	f3bf 8f4f 	dsb	sy
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:375
	__asm volatile( "isb" );
 8001950:	f3bf 8f6f 	isb	sy
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:376
}
 8001954:	4770      	bx	lr

08001956 <ulPortSetInterruptMask>:
ulPortSetInterruptMask():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:411
}
/*-----------------------------------------------------------*/

__attribute__(( naked )) uint32_t ulPortSetInterruptMask( void )
{
	__asm volatile														\
 8001956:	f3ef 8011 	mrs	r0, BASEPRI
 800195a:	f04f 01bf 	mov.w	r1, #191	; 0xbf
 800195e:	f381 8811 	msr	BASEPRI, r1
 8001962:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:423
	);

	/* This return will not be reached but is necessary to prevent compiler
	warnings. */
	return 0;
}
 8001964:	2000      	movs	r0, #0
	...

08001968 <prvTaskExitError>:
prvTaskExitError():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:231
{
 8001968:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:238
	configASSERT( uxCriticalNesting == ~0UL );
 800196a:	4b06      	ldr	r3, [pc, #24]	; (8001984 <prvTaskExitError+0x1c>)
 800196c:	681b      	ldr	r3, [r3, #0]
 800196e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8001972:	d102      	bne.n	800197a <prvTaskExitError+0x12>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:239
	portDISABLE_INTERRUPTS();
 8001974:	f7ff ffef 	bl	8001956 <ulPortSetInterruptMask>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:240 (discriminator 1)
	for( ;; );
 8001978:	e7fe      	b.n	8001978 <prvTaskExitError+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:238 (discriminator 1)
	configASSERT( uxCriticalNesting == ~0UL );
 800197a:	21ee      	movs	r1, #238	; 0xee
 800197c:	4802      	ldr	r0, [pc, #8]	; (8001988 <prvTaskExitError+0x20>)
 800197e:	f7ff fdf4 	bl	800156a <vAssertCalled>
 8001982:	e7f7      	b.n	8001974 <prvTaskExitError+0xc>
 8001984:	20000024 	.word	0x20000024
 8001988:	08003f30 	.word	0x08003f30

0800198c <vPortEnterCritical>:
vPortEnterCritical():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:380
{
 800198c:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:381
	portDISABLE_INTERRUPTS();
 800198e:	f7ff ffe2 	bl	8001956 <ulPortSetInterruptMask>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:382
	uxCriticalNesting++;
 8001992:	4b0c      	ldr	r3, [pc, #48]	; (80019c4 <vPortEnterCritical+0x38>)
 8001994:	681a      	ldr	r2, [r3, #0]
 8001996:	3201      	adds	r2, #1
 8001998:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:383
	__asm volatile( "dsb" );
 800199a:	f3bf 8f4f 	dsb	sy
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:384
	__asm volatile( "isb" );
 800199e:	f3bf 8f6f 	isb	sy
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:391
	if( uxCriticalNesting == 1 )
 80019a2:	681b      	ldr	r3, [r3, #0]
 80019a4:	2b01      	cmp	r3, #1
 80019a6:	d000      	beq.n	80019aa <vPortEnterCritical+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:395
}
 80019a8:	bd08      	pop	{r3, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:393
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80019aa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80019ae:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 80019b2:	f013 0fff 	tst.w	r3, #255	; 0xff
 80019b6:	d0f7      	beq.n	80019a8 <vPortEnterCritical+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:393 (discriminator 1)
 80019b8:	f240 1189 	movw	r1, #393	; 0x189
 80019bc:	4802      	ldr	r0, [pc, #8]	; (80019c8 <vPortEnterCritical+0x3c>)
 80019be:	f7ff fdd4 	bl	800156a <vAssertCalled>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:395 (discriminator 1)
}
 80019c2:	e7f1      	b.n	80019a8 <vPortEnterCritical+0x1c>
 80019c4:	20000024 	.word	0x20000024
 80019c8:	08003f30 	.word	0x08003f30

080019cc <vPortClearInterruptMask>:
vPortClearInterruptMask():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:428
/*-----------------------------------------------------------*/

__attribute__(( naked )) void vPortClearInterruptMask( uint32_t ulNewMaskValue )
{
	__asm volatile													\
 80019cc:	f380 8811 	msr	BASEPRI, r0
 80019d0:	4770      	bx	lr
	...

080019d4 <vPortExitCritical>:
vPortExitCritical():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:399
{
 80019d4:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:400
	configASSERT( uxCriticalNesting );
 80019d6:	4b09      	ldr	r3, [pc, #36]	; (80019fc <vPortExitCritical+0x28>)
 80019d8:	681b      	ldr	r3, [r3, #0]
 80019da:	b12b      	cbz	r3, 80019e8 <vPortExitCritical+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:401
	uxCriticalNesting--;
 80019dc:	4a07      	ldr	r2, [pc, #28]	; (80019fc <vPortExitCritical+0x28>)
 80019de:	6813      	ldr	r3, [r2, #0]
 80019e0:	3b01      	subs	r3, #1
 80019e2:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:402
	if( uxCriticalNesting == 0 )
 80019e4:	b133      	cbz	r3, 80019f4 <vPortExitCritical+0x20>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:406
}
 80019e6:	bd08      	pop	{r3, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:400 (discriminator 1)
	configASSERT( uxCriticalNesting );
 80019e8:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80019ec:	4804      	ldr	r0, [pc, #16]	; (8001a00 <vPortExitCritical+0x2c>)
 80019ee:	f7ff fdbc 	bl	800156a <vAssertCalled>
 80019f2:	e7f3      	b.n	80019dc <vPortExitCritical+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:404
		portENABLE_INTERRUPTS();
 80019f4:	2000      	movs	r0, #0
 80019f6:	f7ff ffe9 	bl	80019cc <vPortClearInterruptMask>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:406
}
 80019fa:	e7f4      	b.n	80019e6 <vPortExitCritical+0x12>
 80019fc:	20000024 	.word	0x20000024
 8001a00:	08003f30 	.word	0x08003f30

08001a04 <PendSV_Handler>:
PendSV_Handler():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:444

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
 8001a04:	f3ef 8009 	mrs	r0, PSP
 8001a08:	f3bf 8f6f 	isb	sy
 8001a0c:	4b0d      	ldr	r3, [pc, #52]	; (8001a44 <pxCurrentTCBConst>)
 8001a0e:	681a      	ldr	r2, [r3, #0]
 8001a10:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8001a14:	6010      	str	r0, [r2, #0]
 8001a16:	e92d 4008 	stmdb	sp!, {r3, lr}
 8001a1a:	f04f 00bf 	mov.w	r0, #191	; 0xbf
 8001a1e:	f380 8811 	msr	BASEPRI, r0
 8001a22:	f001 f831 	bl	8002a88 <vTaskSwitchContext>
 8001a26:	f04f 0000 	mov.w	r0, #0
 8001a2a:	f380 8811 	msr	BASEPRI, r0
 8001a2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001a32:	6819      	ldr	r1, [r3, #0]
 8001a34:	6808      	ldr	r0, [r1, #0]
 8001a36:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8001a3a:	f380 8809 	msr	PSP, r0
 8001a3e:	f3bf 8f6f 	isb	sy
 8001a42:	4770      	bx	lr

08001a44 <pxCurrentTCBConst>:
 8001a44:	200029ac 	.word	0x200029ac

08001a48 <xPortSysTickHandler>:
xPortSysTickHandler():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:478
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
 8001a48:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:483
	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
	executes all interrupts must be unmasked.  There is therefore no need to
	save and then restore the interrupt mask value as its value is already
	known. */
	( void ) portSET_INTERRUPT_MASK_FROM_ISR();
 8001a4a:	f7ff ff84 	bl	8001956 <ulPortSetInterruptMask>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:486
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
 8001a4e:	f000 fec1 	bl	80027d4 <xTaskIncrementTick>
 8001a52:	b128      	cbz	r0, 8001a60 <xPortSysTickHandler+0x18>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:490
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8001a54:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001a58:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001a5c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:493
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( 0 );
 8001a60:	2000      	movs	r0, #0
 8001a62:	f7ff ffb3 	bl	80019cc <vPortClearInterruptMask>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:494
}
 8001a66:	bd08      	pop	{r3, pc}

08001a68 <vPortSuppressTicksAndSleep>:
vPortSuppressTicksAndSleep():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:500
/*-----------------------------------------------------------*/

#if configUSE_TICKLESS_IDLE == 1

	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
	{
 8001a68:	b570      	push	{r4, r5, r6, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:505
	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements, ulSysTickCTRL;
	TickType_t xModifiableIdleTime;

		/* Make sure the SysTick reload value does not overflow the counter. */
		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 8001a6a:	4b3b      	ldr	r3, [pc, #236]	; (8001b58 <vPortSuppressTicksAndSleep+0xf0>)
 8001a6c:	681d      	ldr	r5, [r3, #0]
 8001a6e:	4285      	cmp	r5, r0
 8001a70:	d300      	bcc.n	8001a74 <vPortSuppressTicksAndSleep+0xc>
 8001a72:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:514

		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
		is accounted for as best it can be, but using the tickless mode will
		inevitably result in some tiny drift of the time maintained by the
		kernel with respect to calendar time. */
		portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 8001a74:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001a78:	691a      	ldr	r2, [r3, #16]
 8001a7a:	f022 0201 	bic.w	r2, r2, #1
 8001a7e:	611a      	str	r2, [r3, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:519

		/* Calculate the reload value required to wait xExpectedIdleTime
		tick periods.  -1 is used because this code will execute part way
		through one of the tick periods. */
		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpectedIdleTime - 1UL ) );
 8001a80:	699c      	ldr	r4, [r3, #24]
 8001a82:	1e6e      	subs	r6, r5, #1
 8001a84:	4b35      	ldr	r3, [pc, #212]	; (8001b5c <vPortSuppressTicksAndSleep+0xf4>)
 8001a86:	681b      	ldr	r3, [r3, #0]
 8001a88:	fb03 4406 	mla	r4, r3, r6, r4
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:520
		if( ulReloadValue > ulStoppedTimerCompensation )
 8001a8c:	4b34      	ldr	r3, [pc, #208]	; (8001b60 <vPortSuppressTicksAndSleep+0xf8>)
 8001a8e:	681b      	ldr	r3, [r3, #0]
 8001a90:	42a3      	cmp	r3, r4
 8001a92:	d200      	bcs.n	8001a96 <vPortSuppressTicksAndSleep+0x2e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:522
		{
			ulReloadValue -= ulStoppedTimerCompensation;
 8001a94:	1ae4      	subs	r4, r4, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:527
		}

		/* Enter a critical section but don't use the taskENTER_CRITICAL()
		method as that will mask interrupts that should exit sleep mode. */
		__asm volatile( "cpsid i" );
 8001a96:	b672      	cpsid	i
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:531

		/* If a context switch is pending or a task is waiting for the scheduler
		to be unsuspended then abandon the low power entry. */
		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 8001a98:	f001 f974 	bl	8002d84 <eTaskConfirmSleepModeStatus>
 8001a9c:	b968      	cbnz	r0, 8001aba <vPortSuppressTicksAndSleep+0x52>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:535
		{
			/* Restart from whatever is left in the count register to complete
			this tick period. */
			portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 8001a9e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001aa2:	699a      	ldr	r2, [r3, #24]
 8001aa4:	615a      	str	r2, [r3, #20]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:538

			/* Restart SysTick. */
			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 8001aa6:	691a      	ldr	r2, [r3, #16]
 8001aa8:	f042 0201 	orr.w	r2, r2, #1
 8001aac:	611a      	str	r2, [r3, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:542

			/* Reset the reload register to the value required for normal tick
			periods. */
			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 8001aae:	4a2b      	ldr	r2, [pc, #172]	; (8001b5c <vPortSuppressTicksAndSleep+0xf4>)
 8001ab0:	6812      	ldr	r2, [r2, #0]
 8001ab2:	3a01      	subs	r2, #1
 8001ab4:	615a      	str	r2, [r3, #20]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:546

			/* Re-enable interrupts - see comments above the cpsid instruction()
			above. */
			__asm volatile( "cpsie i" );
 8001ab6:	b662      	cpsie	i
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:644
				vTaskStepTick( ulCompleteTickPeriods );
				portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
			}
			portEXIT_CRITICAL();
		}
	}
 8001ab8:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:551
			portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 8001aba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001abe:	615c      	str	r4, [r3, #20]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:555
			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8001ac0:	2200      	movs	r2, #0
 8001ac2:	619a      	str	r2, [r3, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:558
			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 8001ac4:	691a      	ldr	r2, [r3, #16]
 8001ac6:	f042 0201 	orr.w	r2, r2, #1
 8001aca:	611a      	str	r2, [r3, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:567
			if( xModifiableIdleTime > 0 )
 8001acc:	b125      	cbz	r5, 8001ad8 <vPortSuppressTicksAndSleep+0x70>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:569
				__asm volatile( "dsb" );
 8001ace:	f3bf 8f4f 	dsb	sy
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:570
				__asm volatile( "wfi" );
 8001ad2:	bf30      	wfi
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:571
				__asm volatile( "isb" );
 8001ad4:	f3bf 8f6f 	isb	sy
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:579
			ulSysTickCTRL = portNVIC_SYSTICK_CTRL_REG;
 8001ad8:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8001adc:	6913      	ldr	r3, [r2, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:580
			portNVIC_SYSTICK_CTRL_REG = ( ulSysTickCTRL & ~portNVIC_SYSTICK_ENABLE_BIT );
 8001ade:	f023 0101 	bic.w	r1, r3, #1
 8001ae2:	6111      	str	r1, [r2, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:584
			__asm volatile( "cpsie i" );
 8001ae4:	b662      	cpsie	i
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:586
			if( ( ulSysTickCTRL & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 8001ae6:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8001aea:	d025      	beq.n	8001b38 <vPortSuppressTicksAndSleep+0xd0>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:594
				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_CURRENT_VALUE_REG );
 8001aec:	4b1b      	ldr	r3, [pc, #108]	; (8001b5c <vPortSuppressTicksAndSleep+0xf4>)
 8001aee:	681a      	ldr	r2, [r3, #0]
 8001af0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001af4:	699b      	ldr	r3, [r3, #24]
 8001af6:	1b1c      	subs	r4, r3, r4
 8001af8:	4414      	add	r4, r2
 8001afa:	3c01      	subs	r4, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:599
				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimerCountsForOneTick ) )
 8001afc:	4b18      	ldr	r3, [pc, #96]	; (8001b60 <vPortSuppressTicksAndSleep+0xf8>)
 8001afe:	681b      	ldr	r3, [r3, #0]
 8001b00:	42a3      	cmp	r3, r4
 8001b02:	d801      	bhi.n	8001b08 <vPortSuppressTicksAndSleep+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:599 (discriminator 1)
 8001b04:	42a2      	cmp	r2, r4
 8001b06:	d200      	bcs.n	8001b0a <vPortSuppressTicksAndSleep+0xa2>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:601
					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 8001b08:	1e54      	subs	r4, r2, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:604
				portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 8001b0a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001b0e:	615c      	str	r4, [r3, #20]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:635
			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8001b10:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
 8001b14:	2300      	movs	r3, #0
 8001b16:	61a3      	str	r3, [r4, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:636
			portENTER_CRITICAL();
 8001b18:	f7ff ff38 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:638
				portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 8001b1c:	6923      	ldr	r3, [r4, #16]
 8001b1e:	f043 0301 	orr.w	r3, r3, #1
 8001b22:	6123      	str	r3, [r4, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:639
				vTaskStepTick( ulCompleteTickPeriods );
 8001b24:	4630      	mov	r0, r6
 8001b26:	f000 fe3b 	bl	80027a0 <vTaskStepTick>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:640
				portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 8001b2a:	4b0c      	ldr	r3, [pc, #48]	; (8001b5c <vPortSuppressTicksAndSleep+0xf4>)
 8001b2c:	681b      	ldr	r3, [r3, #0]
 8001b2e:	3b01      	subs	r3, #1
 8001b30:	6163      	str	r3, [r4, #20]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:642
			portEXIT_CRITICAL();
 8001b32:	f7ff ff4f 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:644
	}
 8001b36:	e7bf      	b.n	8001ab8 <vPortSuppressTicksAndSleep+0x50>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:619
				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTICK_CURRENT_VALUE_REG;
 8001b38:	4b08      	ldr	r3, [pc, #32]	; (8001b5c <vPortSuppressTicksAndSleep+0xf4>)
 8001b3a:	681a      	ldr	r2, [r3, #0]
 8001b3c:	fb02 f505 	mul.w	r5, r2, r5
 8001b40:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
 8001b44:	698b      	ldr	r3, [r1, #24]
 8001b46:	1aee      	subs	r6, r5, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:623
				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 8001b48:	fbb6 f6f2 	udiv	r6, r6, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:627
				portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1 ) * ulTimerCountsForOneTick ) - ulCompletedSysTickDecrements;
 8001b4c:	fb06 2202 	mla	r2, r6, r2, r2
 8001b50:	1b5d      	subs	r5, r3, r5
 8001b52:	4415      	add	r5, r2
 8001b54:	614d      	str	r5, [r1, #20]
 8001b56:	e7db      	b.n	8001b10 <vPortSuppressTicksAndSleep+0xa8>
 8001b58:	20002958 	.word	0x20002958
 8001b5c:	20002954 	.word	0x20002954
 8001b60:	20002950 	.word	0x20002950

08001b64 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:658
__attribute__(( weak )) void vPortSetupTimerInterrupt( void )
{
	/* Calculate the constants required to configure the tick interrupt. */
	#if configUSE_TICKLESS_IDLE == 1
	{
		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 8001b64:	4b07      	ldr	r3, [pc, #28]	; (8001b84 <vPortSetupTimerInterrupt+0x20>)
 8001b66:	4a08      	ldr	r2, [pc, #32]	; (8001b88 <vPortSetupTimerInterrupt+0x24>)
 8001b68:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:659
		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 8001b6a:	4b08      	ldr	r3, [pc, #32]	; (8001b8c <vPortSetupTimerInterrupt+0x28>)
 8001b6c:	2263      	movs	r2, #99	; 0x63
 8001b6e:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:660
		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
 8001b70:	4b07      	ldr	r3, [pc, #28]	; (8001b90 <vPortSetupTimerInterrupt+0x2c>)
 8001b72:	222d      	movs	r2, #45	; 0x2d
 8001b74:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:665
	}
	#endif /* configUSE_TICKLESS_IDLE */

	/* Configure SysTick to interrupt at the requested rate. */
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8001b76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001b7a:	4a06      	ldr	r2, [pc, #24]	; (8001b94 <vPortSetupTimerInterrupt+0x30>)
 8001b7c:	615a      	str	r2, [r3, #20]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:666
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8001b7e:	2207      	movs	r2, #7
 8001b80:	611a      	str	r2, [r3, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:667
}
 8001b82:	4770      	bx	lr
 8001b84:	20002954 	.word	0x20002954
 8001b88:	00029040 	.word	0x00029040
 8001b8c:	20002958 	.word	0x20002958
 8001b90:	20002950 	.word	0x20002950
 8001b94:	0002903f 	.word	0x0002903f

08001b98 <xPortStartScheduler>:
xPortStartScheduler():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:285
{
 8001b98:	b500      	push	{lr}
 8001b9a:	b083      	sub	sp, #12
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:302
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8001b9c:	4b22      	ldr	r3, [pc, #136]	; (8001c28 <xPortStartScheduler+0x90>)
 8001b9e:	781a      	ldrb	r2, [r3, #0]
 8001ba0:	b2d2      	uxtb	r2, r2
 8001ba2:	9201      	str	r2, [sp, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:306
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8001ba4:	22ff      	movs	r2, #255	; 0xff
 8001ba6:	701a      	strb	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:309
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8001ba8:	781b      	ldrb	r3, [r3, #0]
 8001baa:	b2db      	uxtb	r3, r3
 8001bac:	f88d 3003 	strb.w	r3, [sp, #3]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:312
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8001bb0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8001bb4:	f003 03bf 	and.w	r3, r3, #191	; 0xbf
 8001bb8:	4a1c      	ldr	r2, [pc, #112]	; (8001c2c <xPortStartScheduler+0x94>)
 8001bba:	7013      	strb	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:316
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8001bbc:	4b1c      	ldr	r3, [pc, #112]	; (8001c30 <xPortStartScheduler+0x98>)
 8001bbe:	2207      	movs	r2, #7
 8001bc0:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:317
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8001bc2:	e009      	b.n	8001bd8 <xPortStartScheduler+0x40>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:319
			ulMaxPRIGROUPValue--;
 8001bc4:	4a1a      	ldr	r2, [pc, #104]	; (8001c30 <xPortStartScheduler+0x98>)
 8001bc6:	6813      	ldr	r3, [r2, #0]
 8001bc8:	3b01      	subs	r3, #1
 8001bca:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:320
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8001bcc:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8001bd0:	005b      	lsls	r3, r3, #1
 8001bd2:	b2db      	uxtb	r3, r3
 8001bd4:	f88d 3003 	strb.w	r3, [sp, #3]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:317
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8001bd8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8001bdc:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001be0:	d1f0      	bne.n	8001bc4 <xPortStartScheduler+0x2c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:325
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 8001be2:	4a13      	ldr	r2, [pc, #76]	; (8001c30 <xPortStartScheduler+0x98>)
 8001be4:	6813      	ldr	r3, [r2, #0]
 8001be6:	021b      	lsls	r3, r3, #8
 8001be8:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:326
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8001bea:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8001bee:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:330
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8001bf0:	9b01      	ldr	r3, [sp, #4]
 8001bf2:	b2db      	uxtb	r3, r3
 8001bf4:	4a0c      	ldr	r2, [pc, #48]	; (8001c28 <xPortStartScheduler+0x90>)
 8001bf6:	7013      	strb	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:335
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8001bf8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001bfc:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
 8001c00:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 8001c04:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:336
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8001c08:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
 8001c0c:	f042 427f 	orr.w	r2, r2, #4278190080	; 0xff000000
 8001c10:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:340
	vPortSetupTimerInterrupt();
 8001c14:	f7ff ffa6 	bl	8001b64 <vPortSetupTimerInterrupt>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:343
	uxCriticalNesting = 0;
 8001c18:	4b06      	ldr	r3, [pc, #24]	; (8001c34 <xPortStartScheduler+0x9c>)
 8001c1a:	2200      	movs	r2, #0
 8001c1c:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:346
	prvPortStartFirstTask();
 8001c1e:	f7ff fe5d 	bl	80018dc <prvPortStartFirstTask>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:352
	prvTaskExitError();
 8001c22:	f7ff fea1 	bl	8001968 <prvTaskExitError>
 8001c26:	bf00      	nop
 8001c28:	e000e400 	.word	0xe000e400
 8001c2c:	20002948 	.word	0x20002948
 8001c30:	2000294c 	.word	0x2000294c
 8001c34:	20000024 	.word	0x20000024

08001c38 <vPortValidateInterruptPriority>:
vPortValidateInterruptPriority():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:673
/*-----------------------------------------------------------*/

#if( configASSERT_DEFINED == 1 )

	void vPortValidateInterruptPriority( void )
	{
 8001c38:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:678
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 8001c3a:	f3ef 8305 	mrs	r3, IPSR
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:681

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8001c3e:	2b0f      	cmp	r3, #15
 8001c40:	d906      	bls.n	8001c50 <vPortValidateInterruptPriority+0x18>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:684
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8001c42:	4a0f      	ldr	r2, [pc, #60]	; (8001c80 <vPortValidateInterruptPriority+0x48>)
 8001c44:	5c9b      	ldrb	r3, [r3, r2]
 8001c46:	b2db      	uxtb	r3, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:709
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8001c48:	4a0e      	ldr	r2, [pc, #56]	; (8001c84 <vPortValidateInterruptPriority+0x4c>)
 8001c4a:	7812      	ldrb	r2, [r2, #0]
 8001c4c:	429a      	cmp	r2, r3
 8001c4e:	d80a      	bhi.n	8001c66 <vPortValidateInterruptPriority+0x2e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:725
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredicable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8001c50:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001c54:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8001c58:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8001c5c:	4a0a      	ldr	r2, [pc, #40]	; (8001c88 <vPortValidateInterruptPriority+0x50>)
 8001c5e:	6812      	ldr	r2, [r2, #0]
 8001c60:	4293      	cmp	r3, r2
 8001c62:	d806      	bhi.n	8001c72 <vPortValidateInterruptPriority+0x3a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:726
	}
 8001c64:	bd08      	pop	{r3, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:709 (discriminator 1)
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8001c66:	f240 21c5 	movw	r1, #709	; 0x2c5
 8001c6a:	4808      	ldr	r0, [pc, #32]	; (8001c8c <vPortValidateInterruptPriority+0x54>)
 8001c6c:	f7ff fc7d 	bl	800156a <vAssertCalled>
 8001c70:	e7ee      	b.n	8001c50 <vPortValidateInterruptPriority+0x18>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:725 (discriminator 1)
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8001c72:	f240 21d5 	movw	r1, #725	; 0x2d5
 8001c76:	4805      	ldr	r0, [pc, #20]	; (8001c8c <vPortValidateInterruptPriority+0x54>)
 8001c78:	f7ff fc77 	bl	800156a <vAssertCalled>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/portable/GCC/ARM_CM3/port.c:726 (discriminator 1)
	}
 8001c7c:	e7f2      	b.n	8001c64 <vPortValidateInterruptPriority+0x2c>
 8001c7e:	bf00      	nop
 8001c80:	e000e3f0 	.word	0xe000e3f0
 8001c84:	20002948 	.word	0x20002948
 8001c88:	2000294c 	.word	0x2000294c
 8001c8c:	08003f30 	.word	0x08003f30

08001c90 <vListInitialise>:
vListInitialise():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:84
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8001c90:	f100 0308 	add.w	r3, r0, #8
 8001c94:	6043      	str	r3, [r0, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:88

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8001c96:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001c9a:	6082      	str	r2, [r0, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:92

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8001c9c:	60c3      	str	r3, [r0, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:93
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8001c9e:	6103      	str	r3, [r0, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:95

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8001ca0:	2300      	movs	r3, #0
 8001ca2:	6003      	str	r3, [r0, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:101

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8001ca4:	4770      	bx	lr

08001ca6 <vListInitialiseItem>:
vListInitialiseItem():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:107
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	6103      	str	r3, [r0, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:113

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8001caa:	4770      	bx	lr

08001cac <vListInsertEnd>:
vListInsertEnd():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:118
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8001cac:	6843      	ldr	r3, [r0, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:129
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8001cae:	604b      	str	r3, [r1, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:130
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8001cb0:	689a      	ldr	r2, [r3, #8]
 8001cb2:	608a      	str	r2, [r1, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:135

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8001cb4:	6051      	str	r1, [r2, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:136
	pxIndex->pxPrevious = pxNewListItem;
 8001cb6:	6099      	str	r1, [r3, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:139

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
 8001cb8:	6108      	str	r0, [r1, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:141

	( pxList->uxNumberOfItems )++;
 8001cba:	6803      	ldr	r3, [r0, #0]
 8001cbc:	3301      	adds	r3, #1
 8001cbe:	6003      	str	r3, [r0, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:142
}
 8001cc0:	4770      	bx	lr

08001cc2 <vListInsert>:
vListInsert():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:146
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8001cc2:	b430      	push	{r4, r5}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:148
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8001cc4:	680d      	ldr	r5, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:164
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8001cc6:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 8001cca:	d011      	beq.n	8001cf0 <vListInsert+0x2e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:192
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8001ccc:	f100 0308 	add.w	r3, r0, #8
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:192 (discriminator 1)
 8001cd0:	461c      	mov	r4, r3
 8001cd2:	685b      	ldr	r3, [r3, #4]
 8001cd4:	681a      	ldr	r2, [r3, #0]
 8001cd6:	42aa      	cmp	r2, r5
 8001cd8:	d9fa      	bls.n	8001cd0 <vListInsert+0xe>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:199
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8001cda:	6863      	ldr	r3, [r4, #4]
 8001cdc:	604b      	str	r3, [r1, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:200
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8001cde:	6099      	str	r1, [r3, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:201
	pxNewListItem->pxPrevious = pxIterator;
 8001ce0:	608c      	str	r4, [r1, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:202
	pxIterator->pxNext = pxNewListItem;
 8001ce2:	6061      	str	r1, [r4, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:206

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
 8001ce4:	6108      	str	r0, [r1, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:208

	( pxList->uxNumberOfItems )++;
 8001ce6:	6803      	ldr	r3, [r0, #0]
 8001ce8:	3301      	adds	r3, #1
 8001cea:	6003      	str	r3, [r0, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:209
}
 8001cec:	bc30      	pop	{r4, r5}
 8001cee:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:166
		pxIterator = pxList->xListEnd.pxPrevious;
 8001cf0:	6904      	ldr	r4, [r0, #16]
 8001cf2:	e7f2      	b.n	8001cda <vListInsert+0x18>

08001cf4 <uxListRemove>:
uxListRemove():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:216

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
 8001cf4:	6903      	ldr	r3, [r0, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:218

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8001cf6:	6841      	ldr	r1, [r0, #4]
 8001cf8:	6882      	ldr	r2, [r0, #8]
 8001cfa:	608a      	str	r2, [r1, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:219
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8001cfc:	6841      	ldr	r1, [r0, #4]
 8001cfe:	6051      	str	r1, [r2, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:225

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8001d00:	685a      	ldr	r2, [r3, #4]
 8001d02:	4282      	cmp	r2, r0
 8001d04:	d005      	beq.n	8001d12 <uxListRemove+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:234
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
 8001d06:	2200      	movs	r2, #0
 8001d08:	6102      	str	r2, [r0, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:235
	( pxList->uxNumberOfItems )--;
 8001d0a:	6818      	ldr	r0, [r3, #0]
 8001d0c:	3801      	subs	r0, #1
 8001d0e:	6018      	str	r0, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:238

	return pxList->uxNumberOfItems;
}
 8001d10:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/list.c:227
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8001d12:	6882      	ldr	r2, [r0, #8]
 8001d14:	605a      	str	r2, [r3, #4]
 8001d16:	e7f6      	b.n	8001d06 <uxListRemove+0x12>

08001d18 <prvIsQueueFull>:
prvIsQueueFull():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2032
	return xReturn;
} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
 8001d18:	b510      	push	{r4, lr}
 8001d1a:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2035
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8001d1c:	f7ff fe36 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2037
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8001d20:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8001d22:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001d24:	429a      	cmp	r2, r3
 8001d26:	d004      	beq.n	8001d32 <prvIsQueueFull+0x1a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2043
		{
			xReturn = pdTRUE;
		}
		else
		{
			xReturn = pdFALSE;
 8001d28:	2400      	movs	r4, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2046
		}
	}
	taskEXIT_CRITICAL();
 8001d2a:	f7ff fe53 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2049

	return xReturn;
}
 8001d2e:	4620      	mov	r0, r4
 8001d30:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2039
			xReturn = pdTRUE;
 8001d32:	2401      	movs	r4, #1
 8001d34:	e7f9      	b.n	8001d2a <prvIsQueueFull+0x12>

08001d36 <prvIsQueueEmpty>:
prvIsQueueEmpty():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1993
{
 8001d36:	b510      	push	{r4, lr}
 8001d38:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1996
	taskENTER_CRITICAL();
 8001d3a:	f7ff fe27 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1998
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8001d3e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001d40:	b923      	cbnz	r3, 8001d4c <prvIsQueueEmpty+0x16>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2000
			xReturn = pdTRUE;
 8001d42:	2401      	movs	r4, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2007
	taskEXIT_CRITICAL();
 8001d44:	f7ff fe46 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2010
}
 8001d48:	4620      	mov	r0, r4
 8001d4a:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2004
			xReturn = pdFALSE;
 8001d4c:	2400      	movs	r4, #0
 8001d4e:	e7f9      	b.n	8001d44 <prvIsQueueEmpty+0xe>

08001d50 <prvCopyDataToQueue>:
prvCopyDataToQueue():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1786
{
 8001d50:	b538      	push	{r3, r4, r5, lr}
 8001d52:	4604      	mov	r4, r0
 8001d54:	4615      	mov	r5, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1789
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8001d56:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8001d58:	b962      	cbnz	r2, 8001d74 <prvCopyDataToQueue+0x24>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1793
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8001d5a:	6803      	ldr	r3, [r0, #0]
 8001d5c:	b123      	cbz	r3, 8001d68 <prvCopyDataToQueue+0x18>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1787
BaseType_t xReturn = pdFALSE;
 8001d5e:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1853
	++( pxQueue->uxMessagesWaiting );
 8001d60:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001d62:	3301      	adds	r3, #1
 8001d64:	63a3      	str	r3, [r4, #56]	; 0x38
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1856
}
 8001d66:	bd38      	pop	{r3, r4, r5, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1796
				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
 8001d68:	6840      	ldr	r0, [r0, #4]
 8001d6a:	f001 f889 	bl	8002e80 <xTaskPriorityDisinherit>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1797
				pxQueue->pxMutexHolder = NULL;
 8001d6e:	2300      	movs	r3, #0
 8001d70:	6063      	str	r3, [r4, #4]
 8001d72:	e7f5      	b.n	8001d60 <prvCopyDataToQueue+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1806
	else if( xPosition == queueSEND_TO_BACK )
 8001d74:	b96d      	cbnz	r5, 8001d92 <prvCopyDataToQueue+0x42>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1808
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
 8001d76:	6880      	ldr	r0, [r0, #8]
 8001d78:	f001 faec 	bl	8003354 <memcpy>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1809
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 8001d7c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8001d7e:	68a3      	ldr	r3, [r4, #8]
 8001d80:	4413      	add	r3, r2
 8001d82:	60a3      	str	r3, [r4, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1810
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8001d84:	6862      	ldr	r2, [r4, #4]
 8001d86:	4293      	cmp	r3, r2
 8001d88:	d31c      	bcc.n	8001dc4 <prvCopyDataToQueue+0x74>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1812
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8001d8a:	6823      	ldr	r3, [r4, #0]
 8001d8c:	60a3      	str	r3, [r4, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1787
BaseType_t xReturn = pdFALSE;
 8001d8e:	4628      	mov	r0, r5
 8001d90:	e7e6      	b.n	8001d60 <prvCopyDataToQueue+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1821
		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8001d92:	68c0      	ldr	r0, [r0, #12]
 8001d94:	f001 fade 	bl	8003354 <memcpy>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1822
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 8001d98:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8001d9a:	4251      	negs	r1, r2
 8001d9c:	68e3      	ldr	r3, [r4, #12]
 8001d9e:	1a9b      	subs	r3, r3, r2
 8001da0:	60e3      	str	r3, [r4, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1823
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8001da2:	6822      	ldr	r2, [r4, #0]
 8001da4:	4293      	cmp	r3, r2
 8001da6:	d202      	bcs.n	8001dae <prvCopyDataToQueue+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1825
			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 8001da8:	6863      	ldr	r3, [r4, #4]
 8001daa:	440b      	add	r3, r1
 8001dac:	60e3      	str	r3, [r4, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1832
		if( xPosition == queueOVERWRITE )
 8001dae:	2d02      	cmp	r5, #2
 8001db0:	d001      	beq.n	8001db6 <prvCopyDataToQueue+0x66>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1787
BaseType_t xReturn = pdFALSE;
 8001db2:	2000      	movs	r0, #0
 8001db4:	e7d4      	b.n	8001d60 <prvCopyDataToQueue+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1834
			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 8001db6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001db8:	b133      	cbz	r3, 8001dc8 <prvCopyDataToQueue+0x78>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1840
				--( pxQueue->uxMessagesWaiting );
 8001dba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001dbc:	3b01      	subs	r3, #1
 8001dbe:	63a3      	str	r3, [r4, #56]	; 0x38
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1787
BaseType_t xReturn = pdFALSE;
 8001dc0:	2000      	movs	r0, #0
 8001dc2:	e7cd      	b.n	8001d60 <prvCopyDataToQueue+0x10>
 8001dc4:	4628      	mov	r0, r5
 8001dc6:	e7cb      	b.n	8001d60 <prvCopyDataToQueue+0x10>
 8001dc8:	2000      	movs	r0, #0
 8001dca:	e7c9      	b.n	8001d60 <prvCopyDataToQueue+0x10>

08001dcc <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1860
{
 8001dcc:	b508      	push	{r3, lr}
 8001dce:	4603      	mov	r3, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1861
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8001dd0:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8001dd2:	b162      	cbz	r2, 8001dee <prvCopyDataFromQueue+0x22>
 8001dd4:	4608      	mov	r0, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1863
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
 8001dd6:	68d9      	ldr	r1, [r3, #12]
 8001dd8:	4411      	add	r1, r2
 8001dda:	60d9      	str	r1, [r3, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1864
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8001ddc:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8001de0:	4561      	cmp	r1, ip
 8001de2:	d301      	bcc.n	8001de8 <prvCopyDataFromQueue+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1866
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
 8001de4:	6819      	ldr	r1, [r3, #0]
 8001de6:	60d9      	str	r1, [r3, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1872
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
 8001de8:	68d9      	ldr	r1, [r3, #12]
 8001dea:	f001 fab3 	bl	8003354 <memcpy>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1874
}
 8001dee:	bd08      	pop	{r3, pc}

08001df0 <prvUnlockQueue>:
prvUnlockQueue():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1878
{
 8001df0:	b510      	push	{r4, lr}
 8001df2:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1885
	taskENTER_CRITICAL();
 8001df4:	f7ff fdca 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1888
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 8001df8:	e002      	b.n	8001e00 <prvUnlockQueue+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1955
			--( pxQueue->xTxLock );
 8001dfa:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001dfc:	3b01      	subs	r3, #1
 8001dfe:	64a3      	str	r3, [r4, #72]	; 0x48
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1888
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 8001e00:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	dd0a      	ble.n	8001e1c <prvUnlockQueue+0x2c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1935
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8001e06:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e08:	b143      	cbz	r3, 8001e1c <prvUnlockQueue+0x2c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1937
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8001e0a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8001e0e:	f000 ff19 	bl	8002c44 <xTaskRemoveFromEventList>
 8001e12:	2800      	cmp	r0, #0
 8001e14:	d0f1      	beq.n	8001dfa <prvUnlockQueue+0xa>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1941
						vTaskMissedYield();
 8001e16:	f000 ffaf 	bl	8002d78 <vTaskMissedYield>
 8001e1a:	e7ee      	b.n	8001dfa <prvUnlockQueue+0xa>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1958
		pxQueue->xTxLock = queueUNLOCKED;
 8001e1c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001e20:	64a3      	str	r3, [r4, #72]	; 0x48
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1960
	taskEXIT_CRITICAL();
 8001e22:	f7ff fdd7 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1963
	taskENTER_CRITICAL();
 8001e26:	f7ff fdb1 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1965
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 8001e2a:	e002      	b.n	8001e32 <prvUnlockQueue+0x42>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1978
				--( pxQueue->xRxLock );
 8001e2c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001e2e:	3b01      	subs	r3, #1
 8001e30:	6463      	str	r3, [r4, #68]	; 0x44
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1965
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 8001e32:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001e34:	2b00      	cmp	r3, #0
 8001e36:	dd0a      	ble.n	8001e4e <prvUnlockQueue+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1967
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8001e38:	6923      	ldr	r3, [r4, #16]
 8001e3a:	b143      	cbz	r3, 8001e4e <prvUnlockQueue+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1969
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8001e3c:	f104 0010 	add.w	r0, r4, #16
 8001e40:	f000 ff00 	bl	8002c44 <xTaskRemoveFromEventList>
 8001e44:	2800      	cmp	r0, #0
 8001e46:	d0f1      	beq.n	8001e2c <prvUnlockQueue+0x3c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1971
					vTaskMissedYield();
 8001e48:	f000 ff96 	bl	8002d78 <vTaskMissedYield>
 8001e4c:	e7ee      	b.n	8001e2c <prvUnlockQueue+0x3c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1986
		pxQueue->xRxLock = queueUNLOCKED;
 8001e4e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001e52:	6463      	str	r3, [r4, #68]	; 0x44
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1988
	taskEXIT_CRITICAL();
 8001e54:	f7ff fdbe 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1989
}
 8001e58:	bd10      	pop	{r4, pc}
	...

08001e5c <xQueueGenericReset>:
xQueueGenericReset():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:261
{
 8001e5c:	b538      	push	{r3, r4, r5, lr}
 8001e5e:	460d      	mov	r5, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:264
	configASSERT( pxQueue );
 8001e60:	4604      	mov	r4, r0
 8001e62:	b1c8      	cbz	r0, 8001e98 <xQueueGenericReset+0x3c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:266
	taskENTER_CRITICAL();
 8001e64:	f7ff fd92 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:268
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 8001e68:	6823      	ldr	r3, [r4, #0]
 8001e6a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8001e6c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8001e6e:	fb01 3002 	mla	r0, r1, r2, r3
 8001e72:	6060      	str	r0, [r4, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:269
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8001e74:	2000      	movs	r0, #0
 8001e76:	63a0      	str	r0, [r4, #56]	; 0x38
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:270
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8001e78:	60a3      	str	r3, [r4, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:271
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
 8001e7a:	3a01      	subs	r2, #1
 8001e7c:	fb02 3301 	mla	r3, r2, r1, r3
 8001e80:	60e3      	str	r3, [r4, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:272
		pxQueue->xRxLock = queueUNLOCKED;
 8001e82:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001e86:	6463      	str	r3, [r4, #68]	; 0x44
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:273
		pxQueue->xTxLock = queueUNLOCKED;
 8001e88:	64a3      	str	r3, [r4, #72]	; 0x48
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:275
		if( xNewQueue == pdFALSE )
 8001e8a:	b9a5      	cbnz	r5, 8001eb6 <xQueueGenericReset+0x5a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:282
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8001e8c:	6923      	ldr	r3, [r4, #16]
 8001e8e:	b94b      	cbnz	r3, 8001ea4 <xQueueGenericReset+0x48>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:305
	taskEXIT_CRITICAL();
 8001e90:	f7ff fda0 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:310
}
 8001e94:	2001      	movs	r0, #1
 8001e96:	bd38      	pop	{r3, r4, r5, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:264 (discriminator 1)
	configASSERT( pxQueue );
 8001e98:	f44f 7184 	mov.w	r1, #264	; 0x108
 8001e9c:	480a      	ldr	r0, [pc, #40]	; (8001ec8 <xQueueGenericReset+0x6c>)
 8001e9e:	f7ff fb64 	bl	800156a <vAssertCalled>
 8001ea2:	e7df      	b.n	8001e64 <xQueueGenericReset+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:284
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 8001ea4:	f104 0010 	add.w	r0, r4, #16
 8001ea8:	f000 fecc 	bl	8002c44 <xTaskRemoveFromEventList>
 8001eac:	2801      	cmp	r0, #1
 8001eae:	d1ef      	bne.n	8001e90 <xQueueGenericReset+0x34>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:286
					queueYIELD_IF_USING_PREEMPTION();
 8001eb0:	f7ff fd46 	bl	8001940 <vPortYield>
 8001eb4:	e7ec      	b.n	8001e90 <xQueueGenericReset+0x34>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:301
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8001eb6:	f104 0010 	add.w	r0, r4, #16
 8001eba:	f7ff fee9 	bl	8001c90 <vListInitialise>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:302
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8001ebe:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8001ec2:	f7ff fee5 	bl	8001c90 <vListInitialise>
 8001ec6:	e7e3      	b.n	8001e90 <xQueueGenericReset+0x34>
 8001ec8:	08003f58 	.word	0x08003f58

08001ecc <xQueueGenericCreate>:
xQueueGenericCreate():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:314
{
 8001ecc:	b570      	push	{r4, r5, r6, lr}
 8001ece:	460c      	mov	r4, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:323
	configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8001ed0:	4606      	mov	r6, r0
 8001ed2:	b190      	cbz	r0, 8001efa <xQueueGenericCreate+0x2e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:325
	if( uxItemSize == ( UBaseType_t ) 0 )
 8001ed4:	b1bc      	cbz	r4, 8001f06 <xQueueGenericCreate+0x3a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:334
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8001ed6:	fb04 f006 	mul.w	r0, r4, r6
 8001eda:	3001      	adds	r0, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:338
	pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 8001edc:	304c      	adds	r0, #76	; 0x4c
 8001ede:	f7ff fc8b 	bl	80017f8 <pvPortMalloc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:340
	if( pxNewQueue != NULL )
 8001ee2:	4605      	mov	r5, r0
 8001ee4:	b188      	cbz	r0, 8001f0a <xQueueGenericCreate+0x3e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:342
		if( uxItemSize == ( UBaseType_t ) 0 )
 8001ee6:	b9b4      	cbnz	r4, 8001f16 <xQueueGenericCreate+0x4a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:348
			pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8001ee8:	6028      	str	r0, [r5, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:359
		pxNewQueue->uxLength = uxQueueLength;
 8001eea:	63ee      	str	r6, [r5, #60]	; 0x3c
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:360
		pxNewQueue->uxItemSize = uxItemSize;
 8001eec:	642c      	str	r4, [r5, #64]	; 0x40
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:361
		( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8001eee:	2101      	movs	r1, #1
 8001ef0:	4628      	mov	r0, r5
 8001ef2:	f7ff ffb3 	bl	8001e5c <xQueueGenericReset>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:386
}
 8001ef6:	4628      	mov	r0, r5
 8001ef8:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:323 (discriminator 1)
	configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8001efa:	f240 1143 	movw	r1, #323	; 0x143
 8001efe:	4808      	ldr	r0, [pc, #32]	; (8001f20 <xQueueGenericCreate+0x54>)
 8001f00:	f7ff fb33 	bl	800156a <vAssertCalled>
 8001f04:	e7e6      	b.n	8001ed4 <xQueueGenericCreate+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:328
		xQueueSizeInBytes = ( size_t ) 0;
 8001f06:	4620      	mov	r0, r4
 8001f08:	e7e8      	b.n	8001edc <xQueueGenericCreate+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:383
	configASSERT( xReturn );
 8001f0a:	f240 117f 	movw	r1, #383	; 0x17f
 8001f0e:	4804      	ldr	r0, [pc, #16]	; (8001f20 <xQueueGenericCreate+0x54>)
 8001f10:	f7ff fb2b 	bl	800156a <vAssertCalled>
 8001f14:	e7ef      	b.n	8001ef6 <xQueueGenericCreate+0x2a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:354
			pxNewQueue->pcHead = ( ( int8_t * ) pxNewQueue ) + sizeof( Queue_t );
 8001f16:	f100 034c 	add.w	r3, r0, #76	; 0x4c
 8001f1a:	6003      	str	r3, [r0, #0]
 8001f1c:	e7e5      	b.n	8001eea <xQueueGenericCreate+0x1e>
 8001f1e:	bf00      	nop
 8001f20:	08003f58 	.word	0x08003f58

08001f24 <xQueueGenericSend>:
xQueueGenericSend():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:611
{
 8001f24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f26:	b085      	sub	sp, #20
 8001f28:	460f      	mov	r7, r1
 8001f2a:	9201      	str	r2, [sp, #4]
 8001f2c:	461d      	mov	r5, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:616
	configASSERT( pxQueue );
 8001f2e:	4604      	mov	r4, r0
 8001f30:	b148      	cbz	r0, 8001f46 <xQueueGenericSend+0x22>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:617
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8001f32:	b177      	cbz	r7, 8001f52 <xQueueGenericSend+0x2e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:618
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8001f34:	2d02      	cmp	r5, #2
 8001f36:	d015      	beq.n	8001f64 <xQueueGenericSend+0x40>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:621
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8001f38:	f000 ff42 	bl	8002dc0 <xTaskGetSchedulerState>
 8001f3c:	b908      	cbnz	r0, 8001f42 <xQueueGenericSend+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:621 (discriminator 2)
 8001f3e:	9b01      	ldr	r3, [sp, #4]
 8001f40:	b9cb      	cbnz	r3, 8001f76 <xQueueGenericSend+0x52>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:611
{
 8001f42:	2600      	movs	r6, #0
 8001f44:	e04a      	b.n	8001fdc <xQueueGenericSend+0xb8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:616 (discriminator 1)
	configASSERT( pxQueue );
 8001f46:	f44f 711a 	mov.w	r1, #616	; 0x268
 8001f4a:	4843      	ldr	r0, [pc, #268]	; (8002058 <xQueueGenericSend+0x134>)
 8001f4c:	f7ff fb0d 	bl	800156a <vAssertCalled>
 8001f50:	e7ef      	b.n	8001f32 <xQueueGenericSend+0xe>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:617 (discriminator 2)
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8001f52:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001f54:	2b00      	cmp	r3, #0
 8001f56:	d0ed      	beq.n	8001f34 <xQueueGenericSend+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:617
 8001f58:	f240 2169 	movw	r1, #617	; 0x269
 8001f5c:	483e      	ldr	r0, [pc, #248]	; (8002058 <xQueueGenericSend+0x134>)
 8001f5e:	f7ff fb04 	bl	800156a <vAssertCalled>
 8001f62:	e7e7      	b.n	8001f34 <xQueueGenericSend+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:618 (discriminator 2)
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8001f64:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001f66:	2b01      	cmp	r3, #1
 8001f68:	d0e6      	beq.n	8001f38 <xQueueGenericSend+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:618
 8001f6a:	f240 216a 	movw	r1, #618	; 0x26a
 8001f6e:	483a      	ldr	r0, [pc, #232]	; (8002058 <xQueueGenericSend+0x134>)
 8001f70:	f7ff fafb 	bl	800156a <vAssertCalled>
 8001f74:	e7e0      	b.n	8001f38 <xQueueGenericSend+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:621
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8001f76:	f240 216d 	movw	r1, #621	; 0x26d
 8001f7a:	4837      	ldr	r0, [pc, #220]	; (8002058 <xQueueGenericSend+0x134>)
 8001f7c:	f7ff faf5 	bl	800156a <vAssertCalled>
 8001f80:	e7df      	b.n	8001f42 <xQueueGenericSend+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:640
				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8001f82:	462a      	mov	r2, r5
 8001f84:	4639      	mov	r1, r7
 8001f86:	4620      	mov	r0, r4
 8001f88:	f7ff fee2 	bl	8001d50 <prvCopyDataToQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:695
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8001f8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f8e:	b92b      	cbnz	r3, 8001f9c <xQueueGenericSend+0x78>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:710
					else if( xYieldRequired != pdFALSE )
 8001f90:	b968      	cbnz	r0, 8001fae <xQueueGenericSend+0x8a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:725
				taskEXIT_CRITICAL();
 8001f92:	f7ff fd1f 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:726
				return pdPASS;
 8001f96:	2001      	movs	r0, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:807
}
 8001f98:	b005      	add	sp, #20
 8001f9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:697
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 8001f9c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8001fa0:	f000 fe50 	bl	8002c44 <xTaskRemoveFromEventList>
 8001fa4:	2801      	cmp	r0, #1
 8001fa6:	d1f4      	bne.n	8001f92 <xQueueGenericSend+0x6e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:703
							queueYIELD_IF_USING_PREEMPTION();
 8001fa8:	f7ff fcca 	bl	8001940 <vPortYield>
 8001fac:	e7f1      	b.n	8001f92 <xQueueGenericSend+0x6e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:716
						queueYIELD_IF_USING_PREEMPTION();
 8001fae:	f7ff fcc7 	bl	8001940 <vPortYield>
 8001fb2:	e7ee      	b.n	8001f92 <xQueueGenericSend+0x6e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:734
					taskEXIT_CRITICAL();
 8001fb4:	f7ff fd0e 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:739
					return errQUEUE_FULL;
 8001fb8:	2000      	movs	r0, #0
 8001fba:	e7ed      	b.n	8001f98 <xQueueGenericSend+0x74>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:745
					vTaskSetTimeOutState( &xTimeOut );
 8001fbc:	a802      	add	r0, sp, #8
 8001fbe:	f000 fe89 	bl	8002cd4 <vTaskSetTimeOutState>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:746
					xEntryTimeSet = pdTRUE;
 8001fc2:	2601      	movs	r6, #1
 8001fc4:	e017      	b.n	8001ff6 <xQueueGenericSend+0xd2>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:761 (discriminator 1)
		prvLockQueue( pxQueue );
 8001fc6:	2300      	movs	r3, #0
 8001fc8:	6463      	str	r3, [r4, #68]	; 0x44
 8001fca:	e01e      	b.n	800200a <xQueueGenericSend+0xe6>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:761 (discriminator 4)
 8001fcc:	2300      	movs	r3, #0
 8001fce:	64a3      	str	r3, [r4, #72]	; 0x48
 8001fd0:	e01f      	b.n	8002012 <xQueueGenericSend+0xee>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:791
				prvUnlockQueue( pxQueue );
 8001fd2:	4620      	mov	r0, r4
 8001fd4:	f7ff ff0c 	bl	8001df0 <prvUnlockQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:792
				( void ) xTaskResumeAll();
 8001fd8:	f000 fc88 	bl	80028ec <xTaskResumeAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:631
		taskENTER_CRITICAL();
 8001fdc:	f7ff fcd6 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:637
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8001fe0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8001fe2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8001fe4:	4282      	cmp	r2, r0
 8001fe6:	d3cc      	bcc.n	8001f82 <xQueueGenericSend+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:637 (discriminator 1)
 8001fe8:	2d02      	cmp	r5, #2
 8001fea:	d0ca      	beq.n	8001f82 <xQueueGenericSend+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:730
				if( xTicksToWait == ( TickType_t ) 0 )
 8001fec:	9801      	ldr	r0, [sp, #4]
 8001fee:	2800      	cmp	r0, #0
 8001ff0:	d0e0      	beq.n	8001fb4 <xQueueGenericSend+0x90>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:741
				else if( xEntryTimeSet == pdFALSE )
 8001ff2:	2e00      	cmp	r6, #0
 8001ff4:	d0e2      	beq.n	8001fbc <xQueueGenericSend+0x98>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:755
		taskEXIT_CRITICAL();
 8001ff6:	f7ff fced 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:760
		vTaskSuspendAll();
 8001ffa:	f000 fbc3 	bl	8002784 <vTaskSuspendAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:761
		prvLockQueue( pxQueue );
 8001ffe:	f7ff fcc5 	bl	800198c <vPortEnterCritical>
 8002002:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8002004:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002008:	d0dd      	beq.n	8001fc6 <xQueueGenericSend+0xa2>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:761 (discriminator 3)
 800200a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800200c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002010:	d0dc      	beq.n	8001fcc <xQueueGenericSend+0xa8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:761 (discriminator 6)
 8002012:	f7ff fcdf 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:764 (discriminator 6)
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8002016:	a901      	add	r1, sp, #4
 8002018:	a802      	add	r0, sp, #8
 800201a:	f000 fe71 	bl	8002d00 <xTaskCheckForTimeOut>
 800201e:	b998      	cbnz	r0, 8002048 <xQueueGenericSend+0x124>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:766
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 8002020:	4620      	mov	r0, r4
 8002022:	f7ff fe79 	bl	8001d18 <prvIsQueueFull>
 8002026:	2800      	cmp	r0, #0
 8002028:	d0d3      	beq.n	8001fd2 <xQueueGenericSend+0xae>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:769
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800202a:	9901      	ldr	r1, [sp, #4]
 800202c:	f104 0010 	add.w	r0, r4, #16
 8002030:	f000 fd94 	bl	8002b5c <vTaskPlaceOnEventList>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:776
				prvUnlockQueue( pxQueue );
 8002034:	4620      	mov	r0, r4
 8002036:	f7ff fedb 	bl	8001df0 <prvUnlockQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:783
				if( xTaskResumeAll() == pdFALSE )
 800203a:	f000 fc57 	bl	80028ec <xTaskResumeAll>
 800203e:	2800      	cmp	r0, #0
 8002040:	d1cc      	bne.n	8001fdc <xQueueGenericSend+0xb8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:785
					portYIELD_WITHIN_API();
 8002042:	f7ff fc7d 	bl	8001940 <vPortYield>
 8002046:	e7c9      	b.n	8001fdc <xQueueGenericSend+0xb8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:798
			prvUnlockQueue( pxQueue );
 8002048:	4620      	mov	r0, r4
 800204a:	f7ff fed1 	bl	8001df0 <prvUnlockQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:799
			( void ) xTaskResumeAll();
 800204e:	f000 fc4d 	bl	80028ec <xTaskResumeAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:804
			return errQUEUE_FULL;
 8002052:	2000      	movs	r0, #0
 8002054:	e7a0      	b.n	8001f98 <xQueueGenericSend+0x74>
 8002056:	bf00      	nop
 8002058:	08003f58 	.word	0x08003f58

0800205c <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1056
{
 800205c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002060:	460e      	mov	r6, r1
 8002062:	4690      	mov	r8, r2
 8002064:	461d      	mov	r5, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1061
	configASSERT( pxQueue );
 8002066:	4604      	mov	r4, r0
 8002068:	b1a0      	cbz	r0, 8002094 <xQueueGenericSendFromISR+0x38>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1062
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800206a:	b1ce      	cbz	r6, 80020a0 <xQueueGenericSendFromISR+0x44>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1063
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800206c:	2d02      	cmp	r5, #2
 800206e:	d020      	beq.n	80020b2 <xQueueGenericSendFromISR+0x56>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1079
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8002070:	f7ff fde2 	bl	8001c38 <vPortValidateInterruptPriority>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1086
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8002074:	f7ff fc6f 	bl	8001956 <ulPortSetInterruptMask>
 8002078:	4607      	mov	r7, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1088
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800207a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800207c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800207e:	429a      	cmp	r2, r3
 8002080:	d320      	bcc.n	80020c4 <xQueueGenericSendFromISR+0x68>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1088 (discriminator 1)
 8002082:	2d02      	cmp	r5, #2
 8002084:	d01e      	beq.n	80020c4 <xQueueGenericSendFromISR+0x68>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1195
			xReturn = errQUEUE_FULL;
 8002086:	2400      	movs	r4, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1198
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 8002088:	4638      	mov	r0, r7
 800208a:	f7ff fc9f 	bl	80019cc <vPortClearInterruptMask>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1201
}
 800208e:	4620      	mov	r0, r4
 8002090:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1061 (discriminator 1)
	configASSERT( pxQueue );
 8002094:	f240 4125 	movw	r1, #1061	; 0x425
 8002098:	481b      	ldr	r0, [pc, #108]	; (8002108 <xQueueGenericSendFromISR+0xac>)
 800209a:	f7ff fa66 	bl	800156a <vAssertCalled>
 800209e:	e7e4      	b.n	800206a <xQueueGenericSendFromISR+0xe>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1062 (discriminator 2)
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80020a0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d0e2      	beq.n	800206c <xQueueGenericSendFromISR+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1062
 80020a6:	f240 4126 	movw	r1, #1062	; 0x426
 80020aa:	4817      	ldr	r0, [pc, #92]	; (8002108 <xQueueGenericSendFromISR+0xac>)
 80020ac:	f7ff fa5d 	bl	800156a <vAssertCalled>
 80020b0:	e7dc      	b.n	800206c <xQueueGenericSendFromISR+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1063 (discriminator 2)
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80020b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80020b4:	2b01      	cmp	r3, #1
 80020b6:	d0db      	beq.n	8002070 <xQueueGenericSendFromISR+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1063
 80020b8:	f240 4127 	movw	r1, #1063	; 0x427
 80020bc:	4812      	ldr	r0, [pc, #72]	; (8002108 <xQueueGenericSendFromISR+0xac>)
 80020be:	f7ff fa54 	bl	800156a <vAssertCalled>
 80020c2:	e7d5      	b.n	8002070 <xQueueGenericSendFromISR+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1097
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80020c4:	462a      	mov	r2, r5
 80020c6:	4631      	mov	r1, r6
 80020c8:	4620      	mov	r0, r4
 80020ca:	f7ff fe41 	bl	8001d50 <prvCopyDataToQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1101
			if( pxQueue->xTxLock == queueUNLOCKED )
 80020ce:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80020d0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80020d4:	d004      	beq.n	80020e0 <xQueueGenericSendFromISR+0x84>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1187
				++( pxQueue->xTxLock );
 80020d6:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80020d8:	3301      	adds	r3, #1
 80020da:	64a3      	str	r3, [r4, #72]	; 0x48
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1190
			xReturn = pdPASS;
 80020dc:	2401      	movs	r4, #1
 80020de:	e7d3      	b.n	8002088 <xQueueGenericSendFromISR+0x2c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1156
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80020e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80020e2:	b90b      	cbnz	r3, 80020e8 <xQueueGenericSendFromISR+0x8c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1190
			xReturn = pdPASS;
 80020e4:	2401      	movs	r4, #1
 80020e6:	e7cf      	b.n	8002088 <xQueueGenericSendFromISR+0x2c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1158
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80020e8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80020ec:	f000 fdaa 	bl	8002c44 <xTaskRemoveFromEventList>
 80020f0:	b130      	cbz	r0, 8002100 <xQueueGenericSendFromISR+0xa4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1162
							if( pxHigherPriorityTaskWoken != NULL )
 80020f2:	f1b8 0f00 	cmp.w	r8, #0
 80020f6:	d005      	beq.n	8002104 <xQueueGenericSendFromISR+0xa8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1164
								*pxHigherPriorityTaskWoken = pdTRUE;
 80020f8:	2401      	movs	r4, #1
 80020fa:	f8c8 4000 	str.w	r4, [r8]
 80020fe:	e7c3      	b.n	8002088 <xQueueGenericSendFromISR+0x2c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1190
			xReturn = pdPASS;
 8002100:	2401      	movs	r4, #1
 8002102:	e7c1      	b.n	8002088 <xQueueGenericSendFromISR+0x2c>
 8002104:	2401      	movs	r4, #1
 8002106:	e7bf      	b.n	8002088 <xQueueGenericSendFromISR+0x2c>
 8002108:	08003f58 	.word	0x08003f58

0800210c <xQueueGiveFromISR>:
xQueueGiveFromISR():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1205
{
 800210c:	b570      	push	{r4, r5, r6, lr}
 800210e:	460e      	mov	r6, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1216
	configASSERT( pxQueue );
 8002110:	4604      	mov	r4, r0
 8002112:	b1c0      	cbz	r0, 8002146 <xQueueGiveFromISR+0x3a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1220
	configASSERT( pxQueue->uxItemSize == 0 );
 8002114:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002116:	b9e3      	cbnz	r3, 8002152 <xQueueGiveFromISR+0x46>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1225
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NULL ) ) );
 8002118:	6823      	ldr	r3, [r4, #0]
 800211a:	b303      	cbz	r3, 800215e <xQueueGiveFromISR+0x52>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1241
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800211c:	f7ff fd8c 	bl	8001c38 <vPortValidateInterruptPriority>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1243
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8002120:	f7ff fc19 	bl	8001956 <ulPortSetInterruptMask>
 8002124:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1248
		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 8002126:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002128:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800212a:	429a      	cmp	r2, r3
 800212c:	d22d      	bcs.n	800218a <xQueueGiveFromISR+0x7e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1258
			++( pxQueue->uxMessagesWaiting );
 800212e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002130:	3301      	adds	r3, #1
 8002132:	63a3      	str	r3, [r4, #56]	; 0x38
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1262
			if( pxQueue->xTxLock == queueUNLOCKED )
 8002134:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8002136:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800213a:	d019      	beq.n	8002170 <xQueueGiveFromISR+0x64>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1348
				++( pxQueue->xTxLock );
 800213c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800213e:	3301      	adds	r3, #1
 8002140:	64a3      	str	r3, [r4, #72]	; 0x48
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1351
			xReturn = pdPASS;
 8002142:	2401      	movs	r4, #1
 8002144:	e022      	b.n	800218c <xQueueGiveFromISR+0x80>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1216 (discriminator 1)
	configASSERT( pxQueue );
 8002146:	f44f 6198 	mov.w	r1, #1216	; 0x4c0
 800214a:	4815      	ldr	r0, [pc, #84]	; (80021a0 <xQueueGiveFromISR+0x94>)
 800214c:	f7ff fa0d 	bl	800156a <vAssertCalled>
 8002150:	e7e0      	b.n	8002114 <xQueueGiveFromISR+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1220 (discriminator 1)
	configASSERT( pxQueue->uxItemSize == 0 );
 8002152:	f240 41c4 	movw	r1, #1220	; 0x4c4
 8002156:	4812      	ldr	r0, [pc, #72]	; (80021a0 <xQueueGiveFromISR+0x94>)
 8002158:	f7ff fa07 	bl	800156a <vAssertCalled>
 800215c:	e7dc      	b.n	8002118 <xQueueGiveFromISR+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1225 (discriminator 2)
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NULL ) ) );
 800215e:	6863      	ldr	r3, [r4, #4]
 8002160:	2b00      	cmp	r3, #0
 8002162:	d0db      	beq.n	800211c <xQueueGiveFromISR+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1225
 8002164:	f240 41c9 	movw	r1, #1225	; 0x4c9
 8002168:	480d      	ldr	r0, [pc, #52]	; (80021a0 <xQueueGiveFromISR+0x94>)
 800216a:	f7ff f9fe 	bl	800156a <vAssertCalled>
 800216e:	e7d5      	b.n	800211c <xQueueGiveFromISR+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1317
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8002170:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002172:	b90b      	cbnz	r3, 8002178 <xQueueGiveFromISR+0x6c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1351
			xReturn = pdPASS;
 8002174:	2401      	movs	r4, #1
 8002176:	e009      	b.n	800218c <xQueueGiveFromISR+0x80>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1319
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8002178:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800217c:	f000 fd62 	bl	8002c44 <xTaskRemoveFromEventList>
 8002180:	b148      	cbz	r0, 8002196 <xQueueGiveFromISR+0x8a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1323
							if( pxHigherPriorityTaskWoken != NULL )
 8002182:	b156      	cbz	r6, 800219a <xQueueGiveFromISR+0x8e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1325
								*pxHigherPriorityTaskWoken = pdTRUE;
 8002184:	2401      	movs	r4, #1
 8002186:	6034      	str	r4, [r6, #0]
 8002188:	e000      	b.n	800218c <xQueueGiveFromISR+0x80>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1356
			xReturn = errQUEUE_FULL;
 800218a:	2400      	movs	r4, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1359
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 800218c:	4628      	mov	r0, r5
 800218e:	f7ff fc1d 	bl	80019cc <vPortClearInterruptMask>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1362
}
 8002192:	4620      	mov	r0, r4
 8002194:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1351
			xReturn = pdPASS;
 8002196:	2401      	movs	r4, #1
 8002198:	e7f8      	b.n	800218c <xQueueGiveFromISR+0x80>
 800219a:	2401      	movs	r4, #1
 800219c:	e7f6      	b.n	800218c <xQueueGiveFromISR+0x80>
 800219e:	bf00      	nop
 80021a0:	08003f58 	.word	0x08003f58

080021a4 <xQueueGenericReceive>:
xQueueGenericReceive():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1366
{
 80021a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80021a6:	b085      	sub	sp, #20
 80021a8:	460e      	mov	r6, r1
 80021aa:	9201      	str	r2, [sp, #4]
 80021ac:	461f      	mov	r7, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1372
	configASSERT( pxQueue );
 80021ae:	4604      	mov	r4, r0
 80021b0:	b138      	cbz	r0, 80021c2 <xQueueGenericReceive+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1373
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80021b2:	b166      	cbz	r6, 80021ce <xQueueGenericReceive+0x2a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1376
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80021b4:	f000 fe04 	bl	8002dc0 <xTaskGetSchedulerState>
 80021b8:	b908      	cbnz	r0, 80021be <xQueueGenericReceive+0x1a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1376 (discriminator 2)
 80021ba:	9b01      	ldr	r3, [sp, #4]
 80021bc:	b983      	cbnz	r3, 80021e0 <xQueueGenericReceive+0x3c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1366
{
 80021be:	2500      	movs	r5, #0
 80021c0:	e05c      	b.n	800227c <xQueueGenericReceive+0xd8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1372 (discriminator 1)
	configASSERT( pxQueue );
 80021c2:	f240 515c 	movw	r1, #1372	; 0x55c
 80021c6:	484c      	ldr	r0, [pc, #304]	; (80022f8 <xQueueGenericReceive+0x154>)
 80021c8:	f7ff f9cf 	bl	800156a <vAssertCalled>
 80021cc:	e7f1      	b.n	80021b2 <xQueueGenericReceive+0xe>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1373 (discriminator 2)
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80021ce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80021d0:	2b00      	cmp	r3, #0
 80021d2:	d0ef      	beq.n	80021b4 <xQueueGenericReceive+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1373
 80021d4:	f240 515d 	movw	r1, #1373	; 0x55d
 80021d8:	4847      	ldr	r0, [pc, #284]	; (80022f8 <xQueueGenericReceive+0x154>)
 80021da:	f7ff f9c6 	bl	800156a <vAssertCalled>
 80021de:	e7e9      	b.n	80021b4 <xQueueGenericReceive+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1376
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80021e0:	f44f 61ac 	mov.w	r1, #1376	; 0x560
 80021e4:	4844      	ldr	r0, [pc, #272]	; (80022f8 <xQueueGenericReceive+0x154>)
 80021e6:	f7ff f9c0 	bl	800156a <vAssertCalled>
 80021ea:	e7e8      	b.n	80021be <xQueueGenericReceive+0x1a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1394
				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 80021ec:	68e5      	ldr	r5, [r4, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1396
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80021ee:	4631      	mov	r1, r6
 80021f0:	4620      	mov	r0, r4
 80021f2:	f7ff fdeb 	bl	8001dcc <prvCopyDataFromQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1398
				if( xJustPeeking == pdFALSE )
 80021f6:	b9c7      	cbnz	r7, 800222a <xQueueGenericReceive+0x86>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1403
					--( pxQueue->uxMessagesWaiting );
 80021f8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80021fa:	3b01      	subs	r3, #1
 80021fc:	63a3      	str	r3, [r4, #56]	; 0x38
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1407
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80021fe:	6823      	ldr	r3, [r4, #0]
 8002200:	b133      	cbz	r3, 8002210 <xQueueGenericReceive+0x6c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1420
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8002202:	6923      	ldr	r3, [r4, #16]
 8002204:	b943      	cbnz	r3, 8002218 <xQueueGenericReceive+0x74>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1464
				taskEXIT_CRITICAL();
 8002206:	f7ff fbe5 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1465
				return pdPASS;
 800220a:	2001      	movs	r0, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1549
}
 800220c:	b005      	add	sp, #20
 800220e:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1411
							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is not redundant as TaskHandle_t is a typedef. */
 8002210:	f000 fe8a 	bl	8002f28 <pvTaskIncrementMutexHeldCount>
 8002214:	6060      	str	r0, [r4, #4]
 8002216:	e7f4      	b.n	8002202 <xQueueGenericReceive+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1422
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 8002218:	f104 0010 	add.w	r0, r4, #16
 800221c:	f000 fd12 	bl	8002c44 <xTaskRemoveFromEventList>
 8002220:	2801      	cmp	r0, #1
 8002222:	d1f0      	bne.n	8002206 <xQueueGenericReceive+0x62>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1424
							queueYIELD_IF_USING_PREEMPTION();
 8002224:	f7ff fb8c 	bl	8001940 <vPortYield>
 8002228:	e7ed      	b.n	8002206 <xQueueGenericReceive+0x62>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1442
					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 800222a:	60e5      	str	r5, [r4, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1446
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800222c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800222e:	2b00      	cmp	r3, #0
 8002230:	d0e9      	beq.n	8002206 <xQueueGenericReceive+0x62>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1448
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8002232:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8002236:	f000 fd05 	bl	8002c44 <xTaskRemoveFromEventList>
 800223a:	2800      	cmp	r0, #0
 800223c:	d0e3      	beq.n	8002206 <xQueueGenericReceive+0x62>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1451
							queueYIELD_IF_USING_PREEMPTION();
 800223e:	f7ff fb7f 	bl	8001940 <vPortYield>
 8002242:	e7e0      	b.n	8002206 <xQueueGenericReceive+0x62>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1473
					taskEXIT_CRITICAL();
 8002244:	f7ff fbc6 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1475
					return errQUEUE_EMPTY;
 8002248:	2000      	movs	r0, #0
 800224a:	e7df      	b.n	800220c <xQueueGenericReceive+0x68>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1481
					vTaskSetTimeOutState( &xTimeOut );
 800224c:	a802      	add	r0, sp, #8
 800224e:	f000 fd41 	bl	8002cd4 <vTaskSetTimeOutState>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1482
					xEntryTimeSet = pdTRUE;
 8002252:	2501      	movs	r5, #1
 8002254:	e01c      	b.n	8002290 <xQueueGenericReceive+0xec>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1497 (discriminator 1)
		prvLockQueue( pxQueue );
 8002256:	2300      	movs	r3, #0
 8002258:	6463      	str	r3, [r4, #68]	; 0x44
 800225a:	e023      	b.n	80022a4 <xQueueGenericReceive+0x100>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1497 (discriminator 4)
 800225c:	2300      	movs	r3, #0
 800225e:	64a3      	str	r3, [r4, #72]	; 0x48
 8002260:	e024      	b.n	80022ac <xQueueGenericReceive+0x108>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1510
						taskENTER_CRITICAL();
 8002262:	f7ff fb93 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1512
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
 8002266:	6860      	ldr	r0, [r4, #4]
 8002268:	f000 fdba 	bl	8002de0 <vTaskPriorityInherit>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1514
						taskEXIT_CRITICAL();
 800226c:	f7ff fbb2 	bl	80019d4 <vPortExitCritical>
 8002270:	e02b      	b.n	80022ca <xQueueGenericReceive+0x126>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1537
				prvUnlockQueue( pxQueue );
 8002272:	4620      	mov	r0, r4
 8002274:	f7ff fdbc 	bl	8001df0 <prvUnlockQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1538
				( void ) xTaskResumeAll();
 8002278:	f000 fb38 	bl	80028ec <xTaskResumeAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1386
		taskENTER_CRITICAL();
 800227c:	f7ff fb86 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1390
			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 8002280:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002282:	2a00      	cmp	r2, #0
 8002284:	d1b2      	bne.n	80021ec <xQueueGenericReceive+0x48>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1469
				if( xTicksToWait == ( TickType_t ) 0 )
 8002286:	9a01      	ldr	r2, [sp, #4]
 8002288:	2a00      	cmp	r2, #0
 800228a:	d0db      	beq.n	8002244 <xQueueGenericReceive+0xa0>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1477
				else if( xEntryTimeSet == pdFALSE )
 800228c:	2d00      	cmp	r5, #0
 800228e:	d0dd      	beq.n	800224c <xQueueGenericReceive+0xa8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1491
		taskEXIT_CRITICAL();
 8002290:	f7ff fba0 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1496
		vTaskSuspendAll();
 8002294:	f000 fa76 	bl	8002784 <vTaskSuspendAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1497
		prvLockQueue( pxQueue );
 8002298:	f7ff fb78 	bl	800198c <vPortEnterCritical>
 800229c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800229e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80022a2:	d0d8      	beq.n	8002256 <xQueueGenericReceive+0xb2>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1497 (discriminator 3)
 80022a4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80022a6:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 80022aa:	d0d7      	beq.n	800225c <xQueueGenericReceive+0xb8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1497 (discriminator 6)
 80022ac:	f7ff fb92 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1500 (discriminator 6)
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80022b0:	a901      	add	r1, sp, #4
 80022b2:	a802      	add	r0, sp, #8
 80022b4:	f000 fd24 	bl	8002d00 <xTaskCheckForTimeOut>
 80022b8:	b9b0      	cbnz	r0, 80022e8 <xQueueGenericReceive+0x144>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1502
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80022ba:	4620      	mov	r0, r4
 80022bc:	f7ff fd3b 	bl	8001d36 <prvIsQueueEmpty>
 80022c0:	2800      	cmp	r0, #0
 80022c2:	d0d6      	beq.n	8002272 <xQueueGenericReceive+0xce>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1508
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80022c4:	6823      	ldr	r3, [r4, #0]
 80022c6:	2b00      	cmp	r3, #0
 80022c8:	d0cb      	beq.n	8002262 <xQueueGenericReceive+0xbe>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1523
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80022ca:	9901      	ldr	r1, [sp, #4]
 80022cc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80022d0:	f000 fc44 	bl	8002b5c <vTaskPlaceOnEventList>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1524
				prvUnlockQueue( pxQueue );
 80022d4:	4620      	mov	r0, r4
 80022d6:	f7ff fd8b 	bl	8001df0 <prvUnlockQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1525
				if( xTaskResumeAll() == pdFALSE )
 80022da:	f000 fb07 	bl	80028ec <xTaskResumeAll>
 80022de:	2800      	cmp	r0, #0
 80022e0:	d1cc      	bne.n	800227c <xQueueGenericReceive+0xd8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1527
					portYIELD_WITHIN_API();
 80022e2:	f7ff fb2d 	bl	8001940 <vPortYield>
 80022e6:	e7c9      	b.n	800227c <xQueueGenericReceive+0xd8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1543
			prvUnlockQueue( pxQueue );
 80022e8:	4620      	mov	r0, r4
 80022ea:	f7ff fd81 	bl	8001df0 <prvUnlockQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1544
			( void ) xTaskResumeAll();
 80022ee:	f000 fafd 	bl	80028ec <xTaskResumeAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:1546
			return errQUEUE_EMPTY;
 80022f2:	2000      	movs	r0, #0
 80022f4:	e78a      	b.n	800220c <xQueueGenericReceive+0x68>
 80022f6:	bf00      	nop
 80022f8:	08003f58 	.word	0x08003f58

080022fc <vQueueAddToRegistry>:
vQueueAddToRegistry():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2353
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80022fc:	2300      	movs	r3, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2353 (discriminator 1)
 80022fe:	2b09      	cmp	r3, #9
 8002300:	d80c      	bhi.n	800231c <vQueueAddToRegistry+0x20>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2355
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8002302:	4a07      	ldr	r2, [pc, #28]	; (8002320 <vQueueAddToRegistry+0x24>)
 8002304:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8002308:	b10a      	cbz	r2, 800230e <vQueueAddToRegistry+0x12>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2353 (discriminator 2)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800230a:	3301      	adds	r3, #1
 800230c:	e7f7      	b.n	80022fe <vQueueAddToRegistry+0x2>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2358
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800230e:	4a04      	ldr	r2, [pc, #16]	; (8002320 <vQueueAddToRegistry+0x24>)
 8002310:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2359
				xQueueRegistry[ ux ].xHandle = xQueue;
 8002314:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002318:	6058      	str	r0, [r3, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2362

				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
				break;
 800231a:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2369
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800231c:	4770      	bx	lr
 800231e:	bf00      	nop
 8002320:	2000295c 	.word	0x2000295c

08002324 <vQueueWaitForMessageRestricted>:
vQueueWaitForMessageRestricted():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2404
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8002324:	b570      	push	{r4, r5, r6, lr}
 8002326:	4604      	mov	r4, r0
 8002328:	460e      	mov	r6, r1
 800232a:	4615      	mov	r5, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2421
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800232c:	f7ff fb2e 	bl	800198c <vPortEnterCritical>
 8002330:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8002332:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002336:	d00b      	beq.n	8002350 <vQueueWaitForMessageRestricted+0x2c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2421 (discriminator 3)
 8002338:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800233a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800233e:	d00a      	beq.n	8002356 <vQueueWaitForMessageRestricted+0x32>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2421 (discriminator 6)
 8002340:	f7ff fb48 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2422 (discriminator 6)
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8002344:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002346:	b14b      	cbz	r3, 800235c <vQueueWaitForMessageRestricted+0x38>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2431
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8002348:	4620      	mov	r0, r4
 800234a:	f7ff fd51 	bl	8001df0 <prvUnlockQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2432
	}
 800234e:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2421 (discriminator 1)
		prvLockQueue( pxQueue );
 8002350:	2300      	movs	r3, #0
 8002352:	6463      	str	r3, [r4, #68]	; 0x44
 8002354:	e7f0      	b.n	8002338 <vQueueWaitForMessageRestricted+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2421 (discriminator 4)
 8002356:	2300      	movs	r3, #0
 8002358:	64a3      	str	r3, [r4, #72]	; 0x48
 800235a:	e7f1      	b.n	8002340 <vQueueWaitForMessageRestricted+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/queue.c:2425
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800235c:	462a      	mov	r2, r5
 800235e:	4631      	mov	r1, r6
 8002360:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8002364:	f000 fc34 	bl	8002bd0 <vTaskPlaceOnEventListRestricted>
 8002368:	e7ee      	b.n	8002348 <vQueueWaitForMessageRestricted+0x24>
	...

0800236c <prvGetExpectedIdleTime>:
prvGetExpectedIdleTime():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1649

	static TickType_t prvGetExpectedIdleTime( void )
	{
	TickType_t xReturn;

		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
 800236c:	4b07      	ldr	r3, [pc, #28]	; (800238c <prvGetExpectedIdleTime+0x20>)
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8002372:	b948      	cbnz	r0, 8002388 <prvGetExpectedIdleTime+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1653
		{
			xReturn = 0;
		}
		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
 8002374:	4b06      	ldr	r3, [pc, #24]	; (8002390 <prvGetExpectedIdleTime+0x24>)
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	2b01      	cmp	r3, #1
 800237a:	d806      	bhi.n	800238a <prvGetExpectedIdleTime+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1662
			processed. */
			xReturn = 0;
		}
		else
		{
			xReturn = xNextTaskUnblockTime - xTickCount;
 800237c:	4b05      	ldr	r3, [pc, #20]	; (8002394 <prvGetExpectedIdleTime+0x28>)
 800237e:	6818      	ldr	r0, [r3, #0]
 8002380:	4b05      	ldr	r3, [pc, #20]	; (8002398 <prvGetExpectedIdleTime+0x2c>)
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	1ac0      	subs	r0, r0, r3
 8002386:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1651
			xReturn = 0;
 8002388:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1666
		}

		return xReturn;
	}
 800238a:	4770      	bx	lr
 800238c:	200029ac 	.word	0x200029ac
 8002390:	200029b8 	.word	0x200029b8
 8002394:	20002a5c 	.word	0x20002a5c
 8002398:	20002aa4 	.word	0x20002aa4

0800239c <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3352

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800239c:	4b08      	ldr	r3, [pc, #32]	; (80023c0 <prvResetNextTaskUnblockTime+0x24>)
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	b923      	cbnz	r3, 80023ae <prvResetNextTaskUnblockTime+0x12>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3358
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 80023a4:	4b07      	ldr	r3, [pc, #28]	; (80023c4 <prvResetNextTaskUnblockTime+0x28>)
 80023a6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80023aa:	601a      	str	r2, [r3, #0]
 80023ac:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3366
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 80023ae:	4b04      	ldr	r3, [pc, #16]	; (80023c0 <prvResetNextTaskUnblockTime+0x24>)
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	68db      	ldr	r3, [r3, #12]
 80023b4:	68db      	ldr	r3, [r3, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3367
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xGenericListItem ) );
 80023b6:	685a      	ldr	r2, [r3, #4]
 80023b8:	4b02      	ldr	r3, [pc, #8]	; (80023c4 <prvResetNextTaskUnblockTime+0x28>)
 80023ba:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3369
	}
}
 80023bc:	4770      	bx	lr
 80023be:	bf00      	nop
 80023c0:	200029b0 	.word	0x200029b0
 80023c4:	20002a5c 	.word	0x20002a5c

080023c8 <prvTaskIsTaskSuspended>:
prvTaskIsTaskSuspended():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1374
	{
 80023c8:	b510      	push	{r4, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1382
		configASSERT( xTask );
 80023ca:	4604      	mov	r4, r0
 80023cc:	b128      	cbz	r0, 80023da <prvTaskIsTaskSuspended+0x12>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1385
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) ) != pdFALSE )
 80023ce:	6962      	ldr	r2, [r4, #20]
 80023d0:	4b0a      	ldr	r3, [pc, #40]	; (80023fc <prvTaskIsTaskSuspended+0x34>)
 80023d2:	429a      	cmp	r2, r3
 80023d4:	d007      	beq.n	80023e6 <prvTaskIsTaskSuspended+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1375
	BaseType_t xReturn = pdFALSE;
 80023d6:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1412
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 80023d8:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1382 (discriminator 1)
		configASSERT( xTask );
 80023da:	f240 5166 	movw	r1, #1382	; 0x566
 80023de:	4808      	ldr	r0, [pc, #32]	; (8002400 <prvTaskIsTaskSuspended+0x38>)
 80023e0:	f7ff f8c3 	bl	800156a <vAssertCalled>
 80023e4:	e7f3      	b.n	80023ce <prvTaskIsTaskSuspended+0x6>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1388
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
 80023e6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80023e8:	4a06      	ldr	r2, [pc, #24]	; (8002404 <prvTaskIsTaskSuspended+0x3c>)
 80023ea:	4293      	cmp	r3, r2
 80023ec:	d002      	beq.n	80023f4 <prvTaskIsTaskSuspended+0x2c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1392
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
 80023ee:	b11b      	cbz	r3, 80023f8 <prvTaskIsTaskSuspended+0x30>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1375
	BaseType_t xReturn = pdFALSE;
 80023f0:	2000      	movs	r0, #0
 80023f2:	e7f1      	b.n	80023d8 <prvTaskIsTaskSuspended+0x10>
 80023f4:	2000      	movs	r0, #0
 80023f6:	e7ef      	b.n	80023d8 <prvTaskIsTaskSuspended+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1394
					xReturn = pdTRUE;
 80023f8:	2001      	movs	r0, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1411
		return xReturn;
 80023fa:	e7ed      	b.n	80023d8 <prvTaskIsTaskSuspended+0x10>
 80023fc:	20002a7c 	.word	0x20002a7c
 8002400:	08003f6c 	.word	0x08003f6c
 8002404:	20002a64 	.word	0x20002a64

08002408 <prvDeleteTCB>:
prvDeleteTCB():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3313
	{
 8002408:	b510      	push	{r4, lr}
 800240a:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3338
			vPortFreeAligned( pxTCB->pxStack );
 800240c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800240e:	f7ff fa45 	bl	800189c <vPortFree>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3342
		vPortFree( pxTCB );
 8002412:	4620      	mov	r0, r4
 8002414:	f7ff fa42 	bl	800189c <vPortFree>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3343
	}
 8002418:	bd10      	pop	{r4, pc}

0800241a <prvAllocateTCBAndStack>:
prvAllocateTCBAndStack():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3103
{
 800241a:	b570      	push	{r4, r5, r6, lr}
 800241c:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3135
		pxStack = ( StackType_t * ) pvPortMallocAligned( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ), puxStackBuffer ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800241e:	460e      	mov	r6, r1
 8002420:	b171      	cbz	r1, 8002440 <prvAllocateTCBAndStack+0x26>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3137 (discriminator 4)
		if( pxStack != NULL )
 8002422:	b1b6      	cbz	r6, 8002452 <prvAllocateTCBAndStack+0x38>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3141
			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 8002424:	2068      	movs	r0, #104	; 0x68
 8002426:	f7ff f9e7 	bl	80017f8 <pvPortMalloc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3143
			if( pxNewTCB != NULL )
 800242a:	4604      	mov	r4, r0
 800242c:	b168      	cbz	r0, 800244a <prvAllocateTCBAndStack+0x30>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3146
				pxNewTCB->pxStack = pxStack;
 800242e:	6306      	str	r6, [r0, #48]	; 0x30
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3162
	if( pxNewTCB != NULL )
 8002430:	b124      	cbz	r4, 800243c <prvAllocateTCBAndStack+0x22>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3168
			( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) usStackDepth * sizeof( StackType_t ) );
 8002432:	00aa      	lsls	r2, r5, #2
 8002434:	21a5      	movs	r1, #165	; 0xa5
 8002436:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002438:	f000 ff9a 	bl	8003370 <memset>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3174
}
 800243c:	4620      	mov	r0, r4
 800243e:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3135 (discriminator 1)
		pxStack = ( StackType_t * ) pvPortMallocAligned( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ), puxStackBuffer ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8002440:	0080      	lsls	r0, r0, #2
 8002442:	f7ff f9d9 	bl	80017f8 <pvPortMalloc>
 8002446:	4606      	mov	r6, r0
 8002448:	e7eb      	b.n	8002422 <prvAllocateTCBAndStack+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3152
				vPortFree( pxStack );
 800244a:	4630      	mov	r0, r6
 800244c:	f7ff fa26 	bl	800189c <vPortFree>
 8002450:	e7ee      	b.n	8002430 <prvAllocateTCBAndStack+0x16>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3157
			pxNewTCB = NULL;
 8002452:	4634      	mov	r4, r6
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3173
	return pxNewTCB;
 8002454:	e7f2      	b.n	800243c <prvAllocateTCBAndStack+0x22>

08002456 <prvInitialiseTCBVariables>:
prvInitialiseTCBVariables():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2835
{
 8002456:	b570      	push	{r4, r5, r6, lr}
 8002458:	4604      	mov	r4, r0
 800245a:	4616      	mov	r6, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2839
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800245c:	2300      	movs	r3, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2839 (discriminator 1)
 800245e:	2b0f      	cmp	r3, #15
 8002460:	d807      	bhi.n	8002472 <prvInitialiseTCBVariables+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2841
		pxTCB->pcTaskName[ x ] = pcName[ x ];
 8002462:	56cd      	ldrsb	r5, [r1, r3]
 8002464:	18e0      	adds	r0, r4, r3
 8002466:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2846
		if( pcName[ x ] == 0x00 )
 800246a:	56c8      	ldrsb	r0, [r1, r3]
 800246c:	b108      	cbz	r0, 8002472 <prvInitialiseTCBVariables+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2839 (discriminator 2)
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800246e:	3301      	adds	r3, #1
 8002470:	e7f5      	b.n	800245e <prvInitialiseTCBVariables+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2858
	pxTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8002472:	2300      	movs	r3, #0
 8002474:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2862
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8002478:	2e04      	cmp	r6, #4
 800247a:	d900      	bls.n	800247e <prvInitialiseTCBVariables+0x28>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2864
		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 800247c:	2604      	movs	r6, #4
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2871
	pxTCB->uxPriority = uxPriority;
 800247e:	62e6      	str	r6, [r4, #44]	; 0x2c
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2874
		pxTCB->uxBasePriority = uxPriority;
 8002480:	6466      	str	r6, [r4, #68]	; 0x44
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2875
		pxTCB->uxMutexesHeld = 0;
 8002482:	2500      	movs	r5, #0
 8002484:	64a5      	str	r5, [r4, #72]	; 0x48
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2879
	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 8002486:	1d20      	adds	r0, r4, #4
 8002488:	f7ff fc0d 	bl	8001ca6 <vListInitialiseItem>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2880
	vListInitialiseItem( &( pxTCB->xEventListItem ) );
 800248c:	f104 0018 	add.w	r0, r4, #24
 8002490:	f7ff fc09 	bl	8001ca6 <vListInitialiseItem>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2884
	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
 8002494:	6124      	str	r4, [r4, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2887
	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8002496:	f1c6 0605 	rsb	r6, r6, #5
 800249a:	61a6      	str	r6, [r4, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2888
	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
 800249c:	6264      	str	r4, [r4, #36]	; 0x24
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2921
		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 800249e:	462b      	mov	r3, r5
 80024a0:	e006      	b.n	80024b0 <prvInitialiseTCBVariables+0x5a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2923 (discriminator 3)
			pxTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 80024a2:	f103 0212 	add.w	r2, r3, #18
 80024a6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80024aa:	2100      	movs	r1, #0
 80024ac:	6051      	str	r1, [r2, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2921 (discriminator 3)
		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 80024ae:	3301      	adds	r3, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2921 (discriminator 1)
 80024b0:	2b04      	cmp	r3, #4
 80024b2:	d9f6      	bls.n	80024a2 <prvInitialiseTCBVariables+0x4c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2930
		pxTCB->ulNotifiedValue = 0;
 80024b4:	2300      	movs	r3, #0
 80024b6:	6623      	str	r3, [r4, #96]	; 0x60
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2931
		pxTCB->eNotifyState = eNotWaitingNotification;
 80024b8:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2941
}
 80024bc:	bd70      	pop	{r4, r5, r6, pc}
	...

080024c0 <prvInitialiseTaskLists>:
prvInitialiseTaskLists():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3000
{
 80024c0:	b538      	push	{r3, r4, r5, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3003
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80024c2:	2400      	movs	r4, #0
 80024c4:	e007      	b.n	80024d6 <prvInitialiseTaskLists+0x16>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3005 (discriminator 3)
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80024c6:	eb04 0284 	add.w	r2, r4, r4, lsl #2
 80024ca:	0093      	lsls	r3, r2, #2
 80024cc:	480e      	ldr	r0, [pc, #56]	; (8002508 <prvInitialiseTaskLists+0x48>)
 80024ce:	4418      	add	r0, r3
 80024d0:	f7ff fbde 	bl	8001c90 <vListInitialise>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3003 (discriminator 3)
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80024d4:	3401      	adds	r4, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3003 (discriminator 1)
 80024d6:	2c04      	cmp	r4, #4
 80024d8:	d9f5      	bls.n	80024c6 <prvInitialiseTaskLists+0x6>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3008
	vListInitialise( &xDelayedTaskList1 );
 80024da:	4d0c      	ldr	r5, [pc, #48]	; (800250c <prvInitialiseTaskLists+0x4c>)
 80024dc:	4628      	mov	r0, r5
 80024de:	f7ff fbd7 	bl	8001c90 <vListInitialise>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3009
	vListInitialise( &xDelayedTaskList2 );
 80024e2:	4c0b      	ldr	r4, [pc, #44]	; (8002510 <prvInitialiseTaskLists+0x50>)
 80024e4:	4620      	mov	r0, r4
 80024e6:	f7ff fbd3 	bl	8001c90 <vListInitialise>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3010
	vListInitialise( &xPendingReadyList );
 80024ea:	480a      	ldr	r0, [pc, #40]	; (8002514 <prvInitialiseTaskLists+0x54>)
 80024ec:	f7ff fbd0 	bl	8001c90 <vListInitialise>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3014
		vListInitialise( &xTasksWaitingTermination );
 80024f0:	4809      	ldr	r0, [pc, #36]	; (8002518 <prvInitialiseTaskLists+0x58>)
 80024f2:	f7ff fbcd 	bl	8001c90 <vListInitialise>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3020
		vListInitialise( &xSuspendedTaskList );
 80024f6:	4809      	ldr	r0, [pc, #36]	; (800251c <prvInitialiseTaskLists+0x5c>)
 80024f8:	f7ff fbca 	bl	8001c90 <vListInitialise>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3026
	pxDelayedTaskList = &xDelayedTaskList1;
 80024fc:	4b08      	ldr	r3, [pc, #32]	; (8002520 <prvInitialiseTaskLists+0x60>)
 80024fe:	601d      	str	r5, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3027
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8002500:	4b08      	ldr	r3, [pc, #32]	; (8002524 <prvInitialiseTaskLists+0x64>)
 8002502:	601c      	str	r4, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3028
}
 8002504:	bd38      	pop	{r3, r4, r5, pc}
 8002506:	bf00      	nop
 8002508:	200029b8 	.word	0x200029b8
 800250c:	20002a34 	.word	0x20002a34
 8002510:	20002a48 	.word	0x20002a48
 8002514:	20002a64 	.word	0x20002a64
 8002518:	20002a90 	.word	0x20002a90
 800251c:	20002a7c 	.word	0x20002a7c
 8002520:	200029b0 	.word	0x200029b0
 8002524:	200029b4 	.word	0x200029b4

08002528 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3073
{
 8002528:	b510      	push	{r4, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3075
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 800252a:	4b0f      	ldr	r3, [pc, #60]	; (8002568 <prvAddCurrentTaskToDelayedList+0x40>)
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	6058      	str	r0, [r3, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3077
	if( xTimeToWake < xTickCount )
 8002530:	4b0e      	ldr	r3, [pc, #56]	; (800256c <prvAddCurrentTaskToDelayedList+0x44>)
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	4283      	cmp	r3, r0
 8002536:	d907      	bls.n	8002548 <prvAddCurrentTaskToDelayedList+0x20>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3080
		vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xGenericListItem ) );
 8002538:	4b0d      	ldr	r3, [pc, #52]	; (8002570 <prvAddCurrentTaskToDelayedList+0x48>)
 800253a:	6818      	ldr	r0, [r3, #0]
 800253c:	4b0a      	ldr	r3, [pc, #40]	; (8002568 <prvAddCurrentTaskToDelayedList+0x40>)
 800253e:	6819      	ldr	r1, [r3, #0]
 8002540:	3104      	adds	r1, #4
 8002542:	f7ff fbbe 	bl	8001cc2 <vListInsert>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3099
}
 8002546:	bd10      	pop	{r4, pc}
 8002548:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3085
		vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xGenericListItem ) );
 800254a:	4b0a      	ldr	r3, [pc, #40]	; (8002574 <prvAddCurrentTaskToDelayedList+0x4c>)
 800254c:	6818      	ldr	r0, [r3, #0]
 800254e:	4b06      	ldr	r3, [pc, #24]	; (8002568 <prvAddCurrentTaskToDelayedList+0x40>)
 8002550:	6819      	ldr	r1, [r3, #0]
 8002552:	3104      	adds	r1, #4
 8002554:	f7ff fbb5 	bl	8001cc2 <vListInsert>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3090
		if( xTimeToWake < xNextTaskUnblockTime )
 8002558:	4b07      	ldr	r3, [pc, #28]	; (8002578 <prvAddCurrentTaskToDelayedList+0x50>)
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	42a3      	cmp	r3, r4
 800255e:	d9f2      	bls.n	8002546 <prvAddCurrentTaskToDelayedList+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3092
			xNextTaskUnblockTime = xTimeToWake;
 8002560:	4b05      	ldr	r3, [pc, #20]	; (8002578 <prvAddCurrentTaskToDelayedList+0x50>)
 8002562:	601c      	str	r4, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3099
}
 8002564:	e7ef      	b.n	8002546 <prvAddCurrentTaskToDelayedList+0x1e>
 8002566:	bf00      	nop
 8002568:	200029ac 	.word	0x200029ac
 800256c:	20002aa4 	.word	0x20002aa4
 8002570:	200029b4 	.word	0x200029b4
 8002574:	200029b0 	.word	0x200029b0
 8002578:	20002a5c 	.word	0x20002a5c

0800257c <xTaskGenericCreate>:
xTaskGenericCreate():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:552
{
 800257c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002580:	b082      	sub	sp, #8
 8002582:	460f      	mov	r7, r1
 8002584:	4614      	mov	r4, r2
 8002586:	461e      	mov	r6, r3
 8002588:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:557
	configASSERT( pxTaskCode );
 800258c:	4682      	mov	sl, r0
 800258e:	2800      	cmp	r0, #0
 8002590:	d035      	beq.n	80025fe <xTaskGenericCreate+0x82>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:558
	configASSERT( ( ( uxPriority & ( UBaseType_t ) ( ~portPRIVILEGE_BIT ) ) < ( UBaseType_t ) configMAX_PRIORITIES ) );
 8002592:	f1b8 0f04 	cmp.w	r8, #4
 8002596:	d838      	bhi.n	800260a <xTaskGenericCreate+0x8e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:562
	pxNewTCB = prvAllocateTCBAndStack( usStackDepth, puxStackBuffer );
 8002598:	990c      	ldr	r1, [sp, #48]	; 0x30
 800259a:	4620      	mov	r0, r4
 800259c:	f7ff ff3d 	bl	800241a <prvAllocateTCBAndStack>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:564
	if( pxNewTCB != NULL )
 80025a0:	4605      	mov	r5, r0
 80025a2:	2800      	cmp	r0, #0
 80025a4:	d062      	beq.n	800266c <xTaskGenericCreate+0xf0>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:600
			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( uint16_t ) 1 );
 80025a6:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80025a8:	f104 4980 	add.w	r9, r4, #1073741824	; 0x40000000
 80025ac:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80025b0:	eb03 0389 	add.w	r3, r3, r9, lsl #2
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:601
			pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type. */
 80025b4:	f023 0907 	bic.w	r9, r3, #7
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:621
		prvInitialiseTCBVariables( pxNewTCB, pcName, uxPriority, xRegions, usStackDepth );
 80025b8:	9400      	str	r4, [sp, #0]
 80025ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80025bc:	4642      	mov	r2, r8
 80025be:	4639      	mov	r1, r7
 80025c0:	f7ff ff49 	bl	8002456 <prvInitialiseTCBVariables>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:633
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80025c4:	4632      	mov	r2, r6
 80025c6:	4651      	mov	r1, sl
 80025c8:	4648      	mov	r0, r9
 80025ca:	f7ff f997 	bl	80018fc <pxPortInitialiseStack>
 80025ce:	6028      	str	r0, [r5, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:637
		if( ( void * ) pxCreatedTask != NULL )
 80025d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80025d2:	b103      	cbz	r3, 80025d6 <xTaskGenericCreate+0x5a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:642
			*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80025d4:	601d      	str	r5, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:651
		taskENTER_CRITICAL();
 80025d6:	f7ff f9d9 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:653
			uxCurrentNumberOfTasks++;
 80025da:	4a28      	ldr	r2, [pc, #160]	; (800267c <xTaskGenericCreate+0x100>)
 80025dc:	6813      	ldr	r3, [r2, #0]
 80025de:	3301      	adds	r3, #1
 80025e0:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:654
			if( pxCurrentTCB == NULL )
 80025e2:	4b27      	ldr	r3, [pc, #156]	; (8002680 <xTaskGenericCreate+0x104>)
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	b1b3      	cbz	r3, 8002616 <xTaskGenericCreate+0x9a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:677
				if( xSchedulerRunning == pdFALSE )
 80025e8:	4b26      	ldr	r3, [pc, #152]	; (8002684 <xTaskGenericCreate+0x108>)
 80025ea:	681b      	ldr	r3, [r3, #0]
 80025ec:	b9c3      	cbnz	r3, 8002620 <xTaskGenericCreate+0xa4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:679
					if( pxCurrentTCB->uxPriority <= uxPriority )
 80025ee:	4b24      	ldr	r3, [pc, #144]	; (8002680 <xTaskGenericCreate+0x104>)
 80025f0:	681b      	ldr	r3, [r3, #0]
 80025f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025f4:	4543      	cmp	r3, r8
 80025f6:	d813      	bhi.n	8002620 <xTaskGenericCreate+0xa4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:681
						pxCurrentTCB = pxNewTCB;
 80025f8:	4b21      	ldr	r3, [pc, #132]	; (8002680 <xTaskGenericCreate+0x104>)
 80025fa:	601d      	str	r5, [r3, #0]
 80025fc:	e010      	b.n	8002620 <xTaskGenericCreate+0xa4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:557 (discriminator 1)
	configASSERT( pxTaskCode );
 80025fe:	f240 212d 	movw	r1, #557	; 0x22d
 8002602:	4821      	ldr	r0, [pc, #132]	; (8002688 <xTaskGenericCreate+0x10c>)
 8002604:	f7fe ffb1 	bl	800156a <vAssertCalled>
 8002608:	e7c3      	b.n	8002592 <xTaskGenericCreate+0x16>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:558 (discriminator 1)
	configASSERT( ( ( uxPriority & ( UBaseType_t ) ( ~portPRIVILEGE_BIT ) ) < ( UBaseType_t ) configMAX_PRIORITIES ) );
 800260a:	f240 212e 	movw	r1, #558	; 0x22e
 800260e:	481e      	ldr	r0, [pc, #120]	; (8002688 <xTaskGenericCreate+0x10c>)
 8002610:	f7fe ffab 	bl	800156a <vAssertCalled>
 8002614:	e7c0      	b.n	8002598 <xTaskGenericCreate+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:658
				pxCurrentTCB =  pxNewTCB;
 8002616:	4b1a      	ldr	r3, [pc, #104]	; (8002680 <xTaskGenericCreate+0x104>)
 8002618:	601d      	str	r5, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:660
				if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800261a:	6813      	ldr	r3, [r2, #0]
 800261c:	2b01      	cmp	r3, #1
 800261e:	d01e      	beq.n	800265e <xTaskGenericCreate+0xe2>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:694
			uxTaskNumber++;
 8002620:	4a1a      	ldr	r2, [pc, #104]	; (800268c <xTaskGenericCreate+0x110>)
 8002622:	6813      	ldr	r3, [r2, #0]
 8002624:	3301      	adds	r3, #1
 8002626:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:704
			prvAddTaskToReadyList( pxNewTCB );
 8002628:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800262a:	2301      	movs	r3, #1
 800262c:	4083      	lsls	r3, r0
 800262e:	4a18      	ldr	r2, [pc, #96]	; (8002690 <xTaskGenericCreate+0x114>)
 8002630:	6811      	ldr	r1, [r2, #0]
 8002632:	430b      	orrs	r3, r1
 8002634:	6013      	str	r3, [r2, #0]
 8002636:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800263a:	1d29      	adds	r1, r5, #4
 800263c:	4b15      	ldr	r3, [pc, #84]	; (8002694 <xTaskGenericCreate+0x118>)
 800263e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8002642:	f7ff fb33 	bl	8001cac <vListInsertEnd>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:709
		taskEXIT_CRITICAL();
 8002646:	f7ff f9c5 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:719
		if( xSchedulerRunning != pdFALSE )
 800264a:	4b0e      	ldr	r3, [pc, #56]	; (8002684 <xTaskGenericCreate+0x108>)
 800264c:	681b      	ldr	r3, [r3, #0]
 800264e:	b193      	cbz	r3, 8002676 <xTaskGenericCreate+0xfa>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:723
			if( pxCurrentTCB->uxPriority < uxPriority )
 8002650:	4b0b      	ldr	r3, [pc, #44]	; (8002680 <xTaskGenericCreate+0x104>)
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002656:	4543      	cmp	r3, r8
 8002658:	d304      	bcc.n	8002664 <xTaskGenericCreate+0xe8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:706
			xReturn = pdPASS;
 800265a:	2001      	movs	r0, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:738
	return xReturn;
 800265c:	e008      	b.n	8002670 <xTaskGenericCreate+0xf4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:665
					prvInitialiseTaskLists();
 800265e:	f7ff ff2f 	bl	80024c0 <prvInitialiseTaskLists>
 8002662:	e7dd      	b.n	8002620 <xTaskGenericCreate+0xa4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:725
				taskYIELD_IF_USING_PREEMPTION();
 8002664:	f7ff f96c 	bl	8001940 <vPortYield>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:706
			xReturn = pdPASS;
 8002668:	2001      	movs	r0, #1
 800266a:	e001      	b.n	8002670 <xTaskGenericCreate+0xf4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:713
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800266c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:739
}
 8002670:	b002      	add	sp, #8
 8002672:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:706
			xReturn = pdPASS;
 8002676:	2001      	movs	r0, #1
 8002678:	e7fa      	b.n	8002670 <xTaskGenericCreate+0xf4>
 800267a:	bf00      	nop
 800267c:	20002a1c 	.word	0x20002a1c
 8002680:	200029ac 	.word	0x200029ac
 8002684:	20002a78 	.word	0x20002a78
 8002688:	08003f6c 	.word	0x08003f6c
 800268c:	20002a28 	.word	0x20002a28
 8002690:	20002a30 	.word	0x20002a30
 8002694:	200029b8 	.word	0x200029b8

08002698 <vTaskResume>:
vTaskResume():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1420
	{
 8002698:	b538      	push	{r3, r4, r5, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1424
		configASSERT( xTaskToResume );
 800269a:	4604      	mov	r4, r0
 800269c:	b170      	cbz	r0, 80026bc <vTaskResume+0x24>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1428
		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
 800269e:	b164      	cbz	r4, 80026ba <vTaskResume+0x22>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1428 (discriminator 1)
 80026a0:	4b17      	ldr	r3, [pc, #92]	; (8002700 <vTaskResume+0x68>)
 80026a2:	681b      	ldr	r3, [r3, #0]
 80026a4:	42a3      	cmp	r3, r4
 80026a6:	d008      	beq.n	80026ba <vTaskResume+0x22>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1430
			taskENTER_CRITICAL();
 80026a8:	f7ff f970 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1432
				if( prvTaskIsTaskSuspended( pxTCB ) == pdTRUE )
 80026ac:	4620      	mov	r0, r4
 80026ae:	f7ff fe8b 	bl	80023c8 <prvTaskIsTaskSuspended>
 80026b2:	2801      	cmp	r0, #1
 80026b4:	d008      	beq.n	80026c8 <vTaskResume+0x30>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1459
			taskEXIT_CRITICAL();
 80026b6:	f7ff f98d 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1465
	}
 80026ba:	bd38      	pop	{r3, r4, r5, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1424 (discriminator 1)
		configASSERT( xTaskToResume );
 80026bc:	f44f 61b2 	mov.w	r1, #1424	; 0x590
 80026c0:	4810      	ldr	r0, [pc, #64]	; (8002704 <vTaskResume+0x6c>)
 80026c2:	f7fe ff52 	bl	800156a <vAssertCalled>
 80026c6:	e7ea      	b.n	800269e <vTaskResume+0x6>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1438
					( void ) uxListRemove(  &( pxTCB->xGenericListItem ) );
 80026c8:	1d25      	adds	r5, r4, #4
 80026ca:	4628      	mov	r0, r5
 80026cc:	f7ff fb12 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1439
					prvAddTaskToReadyList( pxTCB );
 80026d0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80026d2:	2301      	movs	r3, #1
 80026d4:	4083      	lsls	r3, r0
 80026d6:	4a0c      	ldr	r2, [pc, #48]	; (8002708 <vTaskResume+0x70>)
 80026d8:	6811      	ldr	r1, [r2, #0]
 80026da:	430b      	orrs	r3, r1
 80026dc:	6013      	str	r3, [r2, #0]
 80026de:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80026e2:	4629      	mov	r1, r5
 80026e4:	4b09      	ldr	r3, [pc, #36]	; (800270c <vTaskResume+0x74>)
 80026e6:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80026ea:	f7ff fadf 	bl	8001cac <vListInsertEnd>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1442
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80026ee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80026f0:	4b03      	ldr	r3, [pc, #12]	; (8002700 <vTaskResume+0x68>)
 80026f2:	681b      	ldr	r3, [r3, #0]
 80026f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026f6:	429a      	cmp	r2, r3
 80026f8:	d3dd      	bcc.n	80026b6 <vTaskResume+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1447
						taskYIELD_IF_USING_PREEMPTION();
 80026fa:	f7ff f921 	bl	8001940 <vPortYield>
 80026fe:	e7da      	b.n	80026b6 <vTaskResume+0x1e>
 8002700:	200029ac 	.word	0x200029ac
 8002704:	08003f6c 	.word	0x08003f6c
 8002708:	20002a30 	.word	0x20002a30
 800270c:	200029b8 	.word	0x200029b8

08002710 <vTaskStartScheduler>:
vTaskStartScheduler():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1544
{
 8002710:	b500      	push	{lr}
 8002712:	b085      	sub	sp, #20
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1557
		xReturn = xTaskCreate( prvIdleTask, "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), NULL );  /*lint !e961 MISRA exception, justified as it is not a redundant explicit cast to all supported compilers. */
 8002714:	2300      	movs	r3, #0
 8002716:	9303      	str	r3, [sp, #12]
 8002718:	9302      	str	r3, [sp, #8]
 800271a:	9301      	str	r3, [sp, #4]
 800271c:	9300      	str	r3, [sp, #0]
 800271e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002722:	4912      	ldr	r1, [pc, #72]	; (800276c <vTaskStartScheduler+0x5c>)
 8002724:	4812      	ldr	r0, [pc, #72]	; (8002770 <vTaskStartScheduler+0x60>)
 8002726:	f7ff ff29 	bl	800257c <xTaskGenericCreate>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1563
		if( xReturn == pdPASS )
 800272a:	2801      	cmp	r0, #1
 800272c:	d005      	beq.n	800273a <vTaskStartScheduler+0x2a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1574
	if( xReturn == pdPASS )
 800272e:	2801      	cmp	r0, #1
 8002730:	d006      	beq.n	8002740 <vTaskStartScheduler+0x30>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1617
		configASSERT( xReturn );
 8002732:	b1a0      	cbz	r0, 800275e <vTaskStartScheduler+0x4e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1619
}
 8002734:	b005      	add	sp, #20
 8002736:	f85d fb04 	ldr.w	pc, [sp], #4
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1565
			xReturn = xTimerCreateTimerTask();
 800273a:	f000 fc71 	bl	8003020 <xTimerCreateTimerTask>
 800273e:	e7f6      	b.n	800272e <vTaskStartScheduler+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1581
		portDISABLE_INTERRUPTS();
 8002740:	f7ff f909 	bl	8001956 <ulPortSetInterruptMask>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1591
		xNextTaskUnblockTime = portMAX_DELAY;
 8002744:	4b0b      	ldr	r3, [pc, #44]	; (8002774 <vTaskStartScheduler+0x64>)
 8002746:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800274a:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1592
		xSchedulerRunning = pdTRUE;
 800274c:	4b0a      	ldr	r3, [pc, #40]	; (8002778 <vTaskStartScheduler+0x68>)
 800274e:	2201      	movs	r2, #1
 8002750:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1593
		xTickCount = ( TickType_t ) 0U;
 8002752:	4b0a      	ldr	r3, [pc, #40]	; (800277c <vTaskStartScheduler+0x6c>)
 8002754:	2200      	movs	r2, #0
 8002756:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1602
		if( xPortStartScheduler() != pdFALSE )
 8002758:	f7ff fa1e 	bl	8001b98 <xPortStartScheduler>
 800275c:	e7ea      	b.n	8002734 <vTaskStartScheduler+0x24>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1617 (discriminator 1)
		configASSERT( xReturn );
 800275e:	f240 6151 	movw	r1, #1617	; 0x651
 8002762:	4807      	ldr	r0, [pc, #28]	; (8002780 <vTaskStartScheduler+0x70>)
 8002764:	f7fe ff01 	bl	800156a <vAssertCalled>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1619 (discriminator 1)
}
 8002768:	e7e4      	b.n	8002734 <vTaskStartScheduler+0x24>
 800276a:	bf00      	nop
 800276c:	08003f80 	.word	0x08003f80
 8002770:	08002a2d 	.word	0x08002a2d
 8002774:	20002a5c 	.word	0x20002a5c
 8002778:	20002a78 	.word	0x20002a78
 800277c:	20002aa4 	.word	0x20002aa4
 8002780:	08003f6c 	.word	0x08003f6c

08002784 <vTaskSuspendAll>:
vTaskSuspendAll():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1639
	++uxSchedulerSuspended;
 8002784:	4a02      	ldr	r2, [pc, #8]	; (8002790 <vTaskSuspendAll+0xc>)
 8002786:	6813      	ldr	r3, [r2, #0]
 8002788:	3301      	adds	r3, #1
 800278a:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1640
}
 800278c:	4770      	bx	lr
 800278e:	bf00      	nop
 8002790:	20002a24 	.word	0x20002a24

08002794 <xTaskGetTickCount>:
xTaskGetTickCount():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1771
		xTicks = xTickCount;
 8002794:	4b01      	ldr	r3, [pc, #4]	; (800279c <xTaskGetTickCount+0x8>)
 8002796:	6818      	ldr	r0, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1776
}
 8002798:	4770      	bx	lr
 800279a:	bf00      	nop
 800279c:	20002aa4 	.word	0x20002aa4

080027a0 <vTaskStepTick>:
vTaskStepTick():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1927
	{
 80027a0:	b510      	push	{r4, lr}
 80027a2:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1931
		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
 80027a4:	4b08      	ldr	r3, [pc, #32]	; (80027c8 <vTaskStepTick+0x28>)
 80027a6:	681b      	ldr	r3, [r3, #0]
 80027a8:	4403      	add	r3, r0
 80027aa:	4a08      	ldr	r2, [pc, #32]	; (80027cc <vTaskStepTick+0x2c>)
 80027ac:	6812      	ldr	r2, [r2, #0]
 80027ae:	4293      	cmp	r3, r2
 80027b0:	d804      	bhi.n	80027bc <vTaskStepTick+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1932
		xTickCount += xTicksToJump;
 80027b2:	4b05      	ldr	r3, [pc, #20]	; (80027c8 <vTaskStepTick+0x28>)
 80027b4:	6818      	ldr	r0, [r3, #0]
 80027b6:	4404      	add	r4, r0
 80027b8:	601c      	str	r4, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1934
	}
 80027ba:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1931 (discriminator 1)
		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
 80027bc:	f240 718b 	movw	r1, #1931	; 0x78b
 80027c0:	4803      	ldr	r0, [pc, #12]	; (80027d0 <vTaskStepTick+0x30>)
 80027c2:	f7fe fed2 	bl	800156a <vAssertCalled>
 80027c6:	e7f4      	b.n	80027b2 <vTaskStepTick+0x12>
 80027c8:	20002aa4 	.word	0x20002aa4
 80027cc:	20002a5c 	.word	0x20002a5c
 80027d0:	08003f6c 	.word	0x08003f6c

080027d4 <xTaskIncrementTick>:
xTaskIncrementTick():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1940
{
 80027d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1949
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80027d6:	4b39      	ldr	r3, [pc, #228]	; (80028bc <xTaskIncrementTick+0xe8>)
 80027d8:	681b      	ldr	r3, [r3, #0]
 80027da:	2b00      	cmp	r3, #0
 80027dc:	d162      	bne.n	80028a4 <xTaskIncrementTick+0xd0>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1953
		++xTickCount;
 80027de:	4b38      	ldr	r3, [pc, #224]	; (80028c0 <xTaskIncrementTick+0xec>)
 80027e0:	681a      	ldr	r2, [r3, #0]
 80027e2:	3201      	adds	r2, #1
 80027e4:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1958
			const TickType_t xConstTickCount = xTickCount;
 80027e6:	681f      	ldr	r7, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1960
			if( xConstTickCount == ( TickType_t ) 0U )
 80027e8:	b97f      	cbnz	r7, 800280a <xTaskIncrementTick+0x36>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1962
				taskSWITCH_DELAYED_LISTS();
 80027ea:	4b36      	ldr	r3, [pc, #216]	; (80028c4 <xTaskIncrementTick+0xf0>)
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	b9e3      	cbnz	r3, 800282c <xTaskIncrementTick+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1962 (discriminator 3)
 80027f2:	4a34      	ldr	r2, [pc, #208]	; (80028c4 <xTaskIncrementTick+0xf0>)
 80027f4:	6811      	ldr	r1, [r2, #0]
 80027f6:	4b34      	ldr	r3, [pc, #208]	; (80028c8 <xTaskIncrementTick+0xf4>)
 80027f8:	6818      	ldr	r0, [r3, #0]
 80027fa:	6010      	str	r0, [r2, #0]
 80027fc:	6019      	str	r1, [r3, #0]
 80027fe:	4a33      	ldr	r2, [pc, #204]	; (80028cc <xTaskIncrementTick+0xf8>)
 8002800:	6813      	ldr	r3, [r2, #0]
 8002802:	3301      	adds	r3, #1
 8002804:	6013      	str	r3, [r2, #0]
 8002806:	f7ff fdc9 	bl	800239c <prvResetNextTaskUnblockTime>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1973
			if( xConstTickCount >= xNextTaskUnblockTime )
 800280a:	4b31      	ldr	r3, [pc, #196]	; (80028d0 <xTaskIncrementTick+0xfc>)
 800280c:	681b      	ldr	r3, [r3, #0]
 800280e:	42bb      	cmp	r3, r7
 8002810:	d93e      	bls.n	8002890 <xTaskIncrementTick+0xbc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1943
BaseType_t xSwitchRequired = pdFALSE;
 8002812:	2600      	movs	r6, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2057
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8002814:	4b2f      	ldr	r3, [pc, #188]	; (80028d4 <xTaskIncrementTick+0x100>)
 8002816:	681b      	ldr	r3, [r3, #0]
 8002818:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800281a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800281e:	009a      	lsls	r2, r3, #2
 8002820:	4b2d      	ldr	r3, [pc, #180]	; (80028d8 <xTaskIncrementTick+0x104>)
 8002822:	589b      	ldr	r3, [r3, r2]
 8002824:	2b01      	cmp	r3, #1
 8002826:	d942      	bls.n	80028ae <xTaskIncrementTick+0xda>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2059
				xSwitchRequired = pdTRUE;
 8002828:	2601      	movs	r6, #1
 800282a:	e040      	b.n	80028ae <xTaskIncrementTick+0xda>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1962 (discriminator 1)
				taskSWITCH_DELAYED_LISTS();
 800282c:	f240 71aa 	movw	r1, #1962	; 0x7aa
 8002830:	482a      	ldr	r0, [pc, #168]	; (80028dc <xTaskIncrementTick+0x108>)
 8002832:	f7fe fe9a 	bl	800156a <vAssertCalled>
 8002836:	e7dc      	b.n	80027f2 <xTaskIncrementTick+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2039
								xSwitchRequired = pdTRUE;
 8002838:	2601      	movs	r6, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1977
					if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800283a:	4b22      	ldr	r3, [pc, #136]	; (80028c4 <xTaskIncrementTick+0xf0>)
 800283c:	681b      	ldr	r3, [r3, #0]
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	b343      	cbz	r3, 8002894 <xTaskIncrementTick+0xc0>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1993
						pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 8002842:	4b20      	ldr	r3, [pc, #128]	; (80028c4 <xTaskIncrementTick+0xf0>)
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	68db      	ldr	r3, [r3, #12]
 8002848:	68dc      	ldr	r4, [r3, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1994
						xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 800284a:	6863      	ldr	r3, [r4, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1996
						if( xConstTickCount < xItemValue )
 800284c:	429f      	cmp	r7, r3
 800284e:	d326      	bcc.n	800289e <xTaskIncrementTick+0xca>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2012
						( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
 8002850:	1d25      	adds	r5, r4, #4
 8002852:	4628      	mov	r0, r5
 8002854:	f7ff fa4e 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2016
						if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8002858:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800285a:	b11b      	cbz	r3, 8002864 <xTaskIncrementTick+0x90>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2018
							( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800285c:	f104 0018 	add.w	r0, r4, #24
 8002860:	f7ff fa48 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2027
						prvAddTaskToReadyList( pxTCB );
 8002864:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002866:	2201      	movs	r2, #1
 8002868:	409a      	lsls	r2, r3
 800286a:	491d      	ldr	r1, [pc, #116]	; (80028e0 <xTaskIncrementTick+0x10c>)
 800286c:	6808      	ldr	r0, [r1, #0]
 800286e:	4302      	orrs	r2, r0
 8002870:	600a      	str	r2, [r1, #0]
 8002872:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8002876:	009a      	lsls	r2, r3, #2
 8002878:	4629      	mov	r1, r5
 800287a:	4817      	ldr	r0, [pc, #92]	; (80028d8 <xTaskIncrementTick+0x104>)
 800287c:	4410      	add	r0, r2
 800287e:	f7ff fa15 	bl	8001cac <vListInsertEnd>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2037
							if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8002882:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002884:	4b13      	ldr	r3, [pc, #76]	; (80028d4 <xTaskIncrementTick+0x100>)
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800288a:	429a      	cmp	r2, r3
 800288c:	d2d4      	bcs.n	8002838 <xTaskIncrementTick+0x64>
 800288e:	e7d4      	b.n	800283a <xTaskIncrementTick+0x66>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1943
BaseType_t xSwitchRequired = pdFALSE;
 8002890:	2600      	movs	r6, #0
 8002892:	e7d2      	b.n	800283a <xTaskIncrementTick+0x66>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1984
						xNextTaskUnblockTime = portMAX_DELAY;
 8002894:	4b0e      	ldr	r3, [pc, #56]	; (80028d0 <xTaskIncrementTick+0xfc>)
 8002896:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800289a:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1985
						break;
 800289c:	e7ba      	b.n	8002814 <xTaskIncrementTick+0x40>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2003
							xNextTaskUnblockTime = xItemValue;
 800289e:	4a0c      	ldr	r2, [pc, #48]	; (80028d0 <xTaskIncrementTick+0xfc>)
 80028a0:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2004
							break;
 80028a2:	e7b7      	b.n	8002814 <xTaskIncrementTick+0x40>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2085
		++uxPendedTicks;
 80028a4:	4a0f      	ldr	r2, [pc, #60]	; (80028e4 <xTaskIncrementTick+0x110>)
 80028a6:	6813      	ldr	r3, [r2, #0]
 80028a8:	3301      	adds	r3, #1
 80028aa:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1943
BaseType_t xSwitchRequired = pdFALSE;
 80028ac:	2600      	movs	r6, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2098
		if( xYieldPending != pdFALSE )
 80028ae:	4b0e      	ldr	r3, [pc, #56]	; (80028e8 <xTaskIncrementTick+0x114>)
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	b103      	cbz	r3, 80028b6 <xTaskIncrementTick+0xe2>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2100
			xSwitchRequired = pdTRUE;
 80028b4:	2601      	movs	r6, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2110
}
 80028b6:	4630      	mov	r0, r6
 80028b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80028ba:	bf00      	nop
 80028bc:	20002a24 	.word	0x20002a24
 80028c0:	20002aa4 	.word	0x20002aa4
 80028c4:	200029b0 	.word	0x200029b0
 80028c8:	200029b4 	.word	0x200029b4
 80028cc:	20002a60 	.word	0x20002a60
 80028d0:	20002a5c 	.word	0x20002a5c
 80028d4:	200029ac 	.word	0x200029ac
 80028d8:	200029b8 	.word	0x200029b8
 80028dc:	08003f6c 	.word	0x08003f6c
 80028e0:	20002a30 	.word	0x20002a30
 80028e4:	20002a20 	.word	0x20002a20
 80028e8:	20002aa8 	.word	0x20002aa8

080028ec <xTaskResumeAll>:
xTaskResumeAll():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1672
{
 80028ec:	b538      	push	{r3, r4, r5, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1678
	configASSERT( uxSchedulerSuspended );
 80028ee:	4b2f      	ldr	r3, [pc, #188]	; (80029ac <xTaskResumeAll+0xc0>)
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	b16b      	cbz	r3, 8002910 <xTaskResumeAll+0x24>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1685
	taskENTER_CRITICAL();
 80028f4:	f7ff f84a 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1687
		--uxSchedulerSuspended;
 80028f8:	4b2c      	ldr	r3, [pc, #176]	; (80029ac <xTaskResumeAll+0xc0>)
 80028fa:	681a      	ldr	r2, [r3, #0]
 80028fc:	3a01      	subs	r2, #1
 80028fe:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1689
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8002900:	681b      	ldr	r3, [r3, #0]
 8002902:	2b00      	cmp	r3, #0
 8002904:	d14d      	bne.n	80029a2 <xTaskResumeAll+0xb6>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1691
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8002906:	4b2a      	ldr	r3, [pc, #168]	; (80029b0 <xTaskResumeAll+0xc4>)
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	b93b      	cbnz	r3, 800291c <xTaskResumeAll+0x30>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1674
BaseType_t xAlreadyYielded = pdFALSE;
 800290c:	2400      	movs	r4, #0
 800290e:	e049      	b.n	80029a4 <xTaskResumeAll+0xb8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1678 (discriminator 1)
	configASSERT( uxSchedulerSuspended );
 8002910:	f240 618e 	movw	r1, #1678	; 0x68e
 8002914:	4827      	ldr	r0, [pc, #156]	; (80029b4 <xTaskResumeAll+0xc8>)
 8002916:	f7fe fe28 	bl	800156a <vAssertCalled>
 800291a:	e7eb      	b.n	80028f4 <xTaskResumeAll+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1695
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800291c:	4b26      	ldr	r3, [pc, #152]	; (80029b8 <xTaskResumeAll+0xcc>)
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	b31b      	cbz	r3, 800296a <xTaskResumeAll+0x7e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1697
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
 8002922:	4b25      	ldr	r3, [pc, #148]	; (80029b8 <xTaskResumeAll+0xcc>)
 8002924:	68db      	ldr	r3, [r3, #12]
 8002926:	68dc      	ldr	r4, [r3, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1698
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8002928:	f104 0018 	add.w	r0, r4, #24
 800292c:	f7ff f9e2 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1699
					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
 8002930:	1d25      	adds	r5, r4, #4
 8002932:	4628      	mov	r0, r5
 8002934:	f7ff f9de 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1700
					prvAddTaskToReadyList( pxTCB );
 8002938:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800293a:	2301      	movs	r3, #1
 800293c:	4083      	lsls	r3, r0
 800293e:	4a1f      	ldr	r2, [pc, #124]	; (80029bc <xTaskResumeAll+0xd0>)
 8002940:	6811      	ldr	r1, [r2, #0]
 8002942:	430b      	orrs	r3, r1
 8002944:	6013      	str	r3, [r2, #0]
 8002946:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800294a:	4629      	mov	r1, r5
 800294c:	4b1c      	ldr	r3, [pc, #112]	; (80029c0 <xTaskResumeAll+0xd4>)
 800294e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8002952:	f7ff f9ab 	bl	8001cac <vListInsertEnd>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1704
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8002956:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002958:	4b1a      	ldr	r3, [pc, #104]	; (80029c4 <xTaskResumeAll+0xd8>)
 800295a:	681b      	ldr	r3, [r3, #0]
 800295c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800295e:	429a      	cmp	r2, r3
 8002960:	d3dc      	bcc.n	800291c <xTaskResumeAll+0x30>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1706
						xYieldPending = pdTRUE;
 8002962:	4b19      	ldr	r3, [pc, #100]	; (80029c8 <xTaskResumeAll+0xdc>)
 8002964:	2201      	movs	r2, #1
 8002966:	601a      	str	r2, [r3, #0]
 8002968:	e7d8      	b.n	800291c <xTaskResumeAll+0x30>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1718
				if( uxPendedTicks > ( UBaseType_t ) 0U )
 800296a:	4b18      	ldr	r3, [pc, #96]	; (80029cc <xTaskResumeAll+0xe0>)
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	b94b      	cbnz	r3, 8002984 <xTaskResumeAll+0x98>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1738
				if( xYieldPending == pdTRUE )
 8002970:	4b15      	ldr	r3, [pc, #84]	; (80029c8 <xTaskResumeAll+0xdc>)
 8002972:	681c      	ldr	r4, [r3, #0]
 8002974:	2c01      	cmp	r4, #1
 8002976:	d011      	beq.n	800299c <xTaskResumeAll+0xb0>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1674
BaseType_t xAlreadyYielded = pdFALSE;
 8002978:	2400      	movs	r4, #0
 800297a:	e013      	b.n	80029a4 <xTaskResumeAll+0xb8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1730
						--uxPendedTicks;
 800297c:	4a13      	ldr	r2, [pc, #76]	; (80029cc <xTaskResumeAll+0xe0>)
 800297e:	6813      	ldr	r3, [r2, #0]
 8002980:	3b01      	subs	r3, #1
 8002982:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1720
					while( uxPendedTicks > ( UBaseType_t ) 0U )
 8002984:	4b11      	ldr	r3, [pc, #68]	; (80029cc <xTaskResumeAll+0xe0>)
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	2b00      	cmp	r3, #0
 800298a:	d0f1      	beq.n	8002970 <xTaskResumeAll+0x84>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1722
						if( xTaskIncrementTick() != pdFALSE )
 800298c:	f7ff ff22 	bl	80027d4 <xTaskIncrementTick>
 8002990:	2800      	cmp	r0, #0
 8002992:	d0f3      	beq.n	800297c <xTaskResumeAll+0x90>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1724
							xYieldPending = pdTRUE;
 8002994:	4b0c      	ldr	r3, [pc, #48]	; (80029c8 <xTaskResumeAll+0xdc>)
 8002996:	2201      	movs	r2, #1
 8002998:	601a      	str	r2, [r3, #0]
 800299a:	e7ef      	b.n	800297c <xTaskResumeAll+0x90>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1745
					taskYIELD_IF_USING_PREEMPTION();
 800299c:	f7fe ffd0 	bl	8001940 <vPortYield>
 80029a0:	e000      	b.n	80029a4 <xTaskResumeAll+0xb8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1674
BaseType_t xAlreadyYielded = pdFALSE;
 80029a2:	2400      	movs	r4, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1758
	taskEXIT_CRITICAL();
 80029a4:	f7ff f816 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:1761
}
 80029a8:	4620      	mov	r0, r4
 80029aa:	bd38      	pop	{r3, r4, r5, pc}
 80029ac:	20002a24 	.word	0x20002a24
 80029b0:	20002a1c 	.word	0x20002a1c
 80029b4:	08003f6c 	.word	0x08003f6c
 80029b8:	20002a64 	.word	0x20002a64
 80029bc:	20002a30 	.word	0x20002a30
 80029c0:	200029b8 	.word	0x200029b8
 80029c4:	200029ac 	.word	0x200029ac
 80029c8:	20002aa8 	.word	0x20002aa8
 80029cc:	20002a20 	.word	0x20002a20

080029d0 <prvCheckTasksWaitingTermination>:
prvCheckTasksWaitingTermination():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3039
		while( uxTasksDeleted > ( UBaseType_t ) 0U )
 80029d0:	4b13      	ldr	r3, [pc, #76]	; (8002a20 <prvCheckTasksWaitingTermination+0x50>)
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	b313      	cbz	r3, 8002a1c <prvCheckTasksWaitingTermination+0x4c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3032
{
 80029d6:	b510      	push	{r4, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3041
			vTaskSuspendAll();
 80029d8:	f7ff fed4 	bl	8002784 <vTaskSuspendAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3043
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
 80029dc:	4b11      	ldr	r3, [pc, #68]	; (8002a24 <prvCheckTasksWaitingTermination+0x54>)
 80029de:	681c      	ldr	r4, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3045
			( void ) xTaskResumeAll();
 80029e0:	f7ff ff84 	bl	80028ec <xTaskResumeAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3047
			if( xListIsEmpty == pdFALSE )
 80029e4:	b924      	cbnz	r4, 80029f0 <prvCheckTasksWaitingTermination+0x20>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3039
		while( uxTasksDeleted > ( UBaseType_t ) 0U )
 80029e6:	4b0e      	ldr	r3, [pc, #56]	; (8002a20 <prvCheckTasksWaitingTermination+0x50>)
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	d1f4      	bne.n	80029d8 <prvCheckTasksWaitingTermination+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3069
}
 80029ee:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3051
				taskENTER_CRITICAL();
 80029f0:	f7fe ffcc 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3053
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
 80029f4:	4b0b      	ldr	r3, [pc, #44]	; (8002a24 <prvCheckTasksWaitingTermination+0x54>)
 80029f6:	68db      	ldr	r3, [r3, #12]
 80029f8:	68dc      	ldr	r4, [r3, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3054
					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
 80029fa:	1d20      	adds	r0, r4, #4
 80029fc:	f7ff f97a 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3055
					--uxCurrentNumberOfTasks;
 8002a00:	4a09      	ldr	r2, [pc, #36]	; (8002a28 <prvCheckTasksWaitingTermination+0x58>)
 8002a02:	6813      	ldr	r3, [r2, #0]
 8002a04:	3b01      	subs	r3, #1
 8002a06:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3056
					--uxTasksDeleted;
 8002a08:	4a05      	ldr	r2, [pc, #20]	; (8002a20 <prvCheckTasksWaitingTermination+0x50>)
 8002a0a:	6813      	ldr	r3, [r2, #0]
 8002a0c:	3b01      	subs	r3, #1
 8002a0e:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3058
				taskEXIT_CRITICAL();
 8002a10:	f7fe ffe0 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3060
				prvDeleteTCB( pxTCB );
 8002a14:	4620      	mov	r0, r4
 8002a16:	f7ff fcf7 	bl	8002408 <prvDeleteTCB>
 8002a1a:	e7e4      	b.n	80029e6 <prvCheckTasksWaitingTermination+0x16>
 8002a1c:	4770      	bx	lr
 8002a1e:	bf00      	nop
 8002a20:	20002a2c 	.word	0x20002a2c
 8002a24:	20002a90 	.word	0x20002a90
 8002a28:	20002a1c 	.word	0x20002a1c

08002a2c <prvIdleTask>:
prvIdleTask():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2692
{
 8002a2c:	b508      	push	{r3, lr}
 8002a2e:	e003      	b.n	8002a38 <prvIdleTask+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2759
			xExpectedIdleTime = prvGetExpectedIdleTime();
 8002a30:	f7ff fc9c 	bl	800236c <prvGetExpectedIdleTime>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2761
			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
 8002a34:	2801      	cmp	r0, #1
 8002a36:	d808      	bhi.n	8002a4a <prvIdleTask+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2699
		prvCheckTasksWaitingTermination();
 8002a38:	f7ff ffca 	bl	80029d0 <prvCheckTasksWaitingTermination>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2722
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8002a3c:	4b0e      	ldr	r3, [pc, #56]	; (8002a78 <prvIdleTask+0x4c>)
 8002a3e:	681b      	ldr	r3, [r3, #0]
 8002a40:	2b01      	cmp	r3, #1
 8002a42:	d9f5      	bls.n	8002a30 <prvIdleTask+0x4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2724
				taskYIELD();
 8002a44:	f7fe ff7c 	bl	8001940 <vPortYield>
 8002a48:	e7f2      	b.n	8002a30 <prvIdleTask+0x4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2763
				vTaskSuspendAll();
 8002a4a:	f7ff fe9b 	bl	8002784 <vTaskSuspendAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2768
					configASSERT( xNextTaskUnblockTime >= xTickCount );
 8002a4e:	4b0b      	ldr	r3, [pc, #44]	; (8002a7c <prvIdleTask+0x50>)
 8002a50:	681a      	ldr	r2, [r3, #0]
 8002a52:	4b0b      	ldr	r3, [pc, #44]	; (8002a80 <prvIdleTask+0x54>)
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	429a      	cmp	r2, r3
 8002a58:	d308      	bcc.n	8002a6c <prvIdleTask+0x40>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2769
					xExpectedIdleTime = prvGetExpectedIdleTime();
 8002a5a:	f7ff fc87 	bl	800236c <prvGetExpectedIdleTime>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2771
					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
 8002a5e:	2801      	cmp	r0, #1
 8002a60:	d901      	bls.n	8002a66 <prvIdleTask+0x3a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2774
						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
 8002a62:	f7ff f801 	bl	8001a68 <vPortSuppressTicksAndSleep>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2782
				( void ) xTaskResumeAll();
 8002a66:	f7ff ff41 	bl	80028ec <xTaskResumeAll>
 8002a6a:	e7e5      	b.n	8002a38 <prvIdleTask+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2768 (discriminator 1)
					configASSERT( xNextTaskUnblockTime >= xTickCount );
 8002a6c:	f44f 612d 	mov.w	r1, #2768	; 0xad0
 8002a70:	4804      	ldr	r0, [pc, #16]	; (8002a84 <prvIdleTask+0x58>)
 8002a72:	f7fe fd7a 	bl	800156a <vAssertCalled>
 8002a76:	e7f0      	b.n	8002a5a <prvIdleTask+0x2e>
 8002a78:	200029b8 	.word	0x200029b8
 8002a7c:	20002a5c 	.word	0x20002a5c
 8002a80:	20002aa4 	.word	0x20002aa4
 8002a84:	08003f6c 	.word	0x08003f6c

08002a88 <vTaskSwitchContext>:
vTaskSwitchContext():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2205
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8002a88:	4b2d      	ldr	r3, [pc, #180]	; (8002b40 <vTaskSwitchContext+0xb8>)
 8002a8a:	681b      	ldr	r3, [r3, #0]
 8002a8c:	b11b      	cbz	r3, 8002a96 <vTaskSwitchContext+0xe>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2209
		xYieldPending = pdTRUE;
 8002a8e:	4b2d      	ldr	r3, [pc, #180]	; (8002b44 <vTaskSwitchContext+0xbc>)
 8002a90:	2201      	movs	r2, #1
 8002a92:	601a      	str	r2, [r3, #0]
 8002a94:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2204
{
 8002a96:	b510      	push	{r4, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2213
		xYieldPending = pdFALSE;
 8002a98:	4b2a      	ldr	r3, [pc, #168]	; (8002b44 <vTaskSwitchContext+0xbc>)
 8002a9a:	2200      	movs	r2, #0
 8002a9c:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2244
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
 8002a9e:	4b2a      	ldr	r3, [pc, #168]	; (8002b48 <vTaskSwitchContext+0xc0>)
 8002aa0:	681a      	ldr	r2, [r3, #0]
 8002aa2:	6812      	ldr	r2, [r2, #0]
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002aa8:	429a      	cmp	r2, r3
 8002aaa:	d92d      	bls.n	8002b08 <vTaskSwitchContext+0x80>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2245 (discriminator 3)
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
 8002aac:	4b26      	ldr	r3, [pc, #152]	; (8002b48 <vTaskSwitchContext+0xc0>)
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	2214      	movs	r2, #20
 8002ab2:	4926      	ldr	r1, [pc, #152]	; (8002b4c <vTaskSwitchContext+0xc4>)
 8002ab4:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8002ab6:	f000 fc3d 	bl	8003334 <memcmp>
 8002aba:	bb60      	cbnz	r0, 8002b16 <vTaskSwitchContext+0x8e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2249 (discriminator 3)
		taskSELECT_HIGHEST_PRIORITY_TASK();
 8002abc:	4b24      	ldr	r3, [pc, #144]	; (8002b50 <vTaskSwitchContext+0xc8>)
 8002abe:	681c      	ldr	r4, [r3, #0]
ucPortCountLeadingZeros():
/home/vlad/Downloads/f407-disc-blink/freertos/portable/GCC/ARM_CM3/portmacro.h:169 (discriminator 3)
	/* Generic helper function. */
	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitmap )
	{
	uint8_t ucReturn;

		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 8002ac0:	fab4 f484 	clz	r4, r4
 8002ac4:	b2e4      	uxtb	r4, r4
vTaskSwitchContext():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2249 (discriminator 3)
 8002ac6:	f1c4 041f 	rsb	r4, r4, #31
 8002aca:	eb04 0284 	add.w	r2, r4, r4, lsl #2
 8002ace:	4b21      	ldr	r3, [pc, #132]	; (8002b54 <vTaskSwitchContext+0xcc>)
 8002ad0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002ad4:	b333      	cbz	r3, 8002b24 <vTaskSwitchContext+0x9c>
 8002ad6:	4a1f      	ldr	r2, [pc, #124]	; (8002b54 <vTaskSwitchContext+0xcc>)
 8002ad8:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 8002adc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8002ae0:	6859      	ldr	r1, [r3, #4]
 8002ae2:	6849      	ldr	r1, [r1, #4]
 8002ae4:	6059      	str	r1, [r3, #4]
 8002ae6:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 8002aea:	009b      	lsls	r3, r3, #2
 8002aec:	3308      	adds	r3, #8
 8002aee:	4413      	add	r3, r2
 8002af0:	4299      	cmp	r1, r3
 8002af2:	d01d      	beq.n	8002b30 <vTaskSwitchContext+0xa8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2249 (discriminator 6)
 8002af4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8002af8:	4b16      	ldr	r3, [pc, #88]	; (8002b54 <vTaskSwitchContext+0xcc>)
 8002afa:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8002afe:	6863      	ldr	r3, [r4, #4]
 8002b00:	68da      	ldr	r2, [r3, #12]
 8002b02:	4b11      	ldr	r3, [pc, #68]	; (8002b48 <vTaskSwitchContext+0xc0>)
 8002b04:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2260 (discriminator 6)
}
 8002b06:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2244 (discriminator 1)
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
 8002b08:	4b0f      	ldr	r3, [pc, #60]	; (8002b48 <vTaskSwitchContext+0xc0>)
 8002b0a:	6818      	ldr	r0, [r3, #0]
 8002b0c:	6819      	ldr	r1, [r3, #0]
 8002b0e:	3134      	adds	r1, #52	; 0x34
 8002b10:	f7fe fd2a 	bl	8001568 <vApplicationStackOverflowHook>
 8002b14:	e7ca      	b.n	8002aac <vTaskSwitchContext+0x24>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2245 (discriminator 1)
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
 8002b16:	4b0c      	ldr	r3, [pc, #48]	; (8002b48 <vTaskSwitchContext+0xc0>)
 8002b18:	6818      	ldr	r0, [r3, #0]
 8002b1a:	6819      	ldr	r1, [r3, #0]
 8002b1c:	3134      	adds	r1, #52	; 0x34
 8002b1e:	f7fe fd23 	bl	8001568 <vApplicationStackOverflowHook>
 8002b22:	e7cb      	b.n	8002abc <vTaskSwitchContext+0x34>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2249 (discriminator 1)
		taskSELECT_HIGHEST_PRIORITY_TASK();
 8002b24:	f640 01c9 	movw	r1, #2249	; 0x8c9
 8002b28:	480b      	ldr	r0, [pc, #44]	; (8002b58 <vTaskSwitchContext+0xd0>)
 8002b2a:	f7fe fd1e 	bl	800156a <vAssertCalled>
 8002b2e:	e7d2      	b.n	8002ad6 <vTaskSwitchContext+0x4e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2249 (discriminator 4)
 8002b30:	6849      	ldr	r1, [r1, #4]
 8002b32:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 8002b36:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8002b3a:	6059      	str	r1, [r3, #4]
 8002b3c:	e7da      	b.n	8002af4 <vTaskSwitchContext+0x6c>
 8002b3e:	bf00      	nop
 8002b40:	20002a24 	.word	0x20002a24
 8002b44:	20002aa8 	.word	0x20002aa8
 8002b48:	200029ac 	.word	0x200029ac
 8002b4c:	08003f88 	.word	0x08003f88
 8002b50:	20002a30 	.word	0x20002a30
 8002b54:	200029b8 	.word	0x200029b8
 8002b58:	08003f6c 	.word	0x08003f6c

08002b5c <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2264
{
 8002b5c:	b570      	push	{r4, r5, r6, lr}
 8002b5e:	460c      	mov	r4, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2267
	configASSERT( pxEventList );
 8002b60:	4606      	mov	r6, r0
 8002b62:	b1e8      	cbz	r0, 8002ba0 <vTaskPlaceOnEventList+0x44>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2276
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8002b64:	4d15      	ldr	r5, [pc, #84]	; (8002bbc <vTaskPlaceOnEventList+0x60>)
 8002b66:	6829      	ldr	r1, [r5, #0]
 8002b68:	3118      	adds	r1, #24
 8002b6a:	4630      	mov	r0, r6
 8002b6c:	f7ff f8a9 	bl	8001cc2 <vListInsert>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2281
	if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 8002b70:	6828      	ldr	r0, [r5, #0]
 8002b72:	3004      	adds	r0, #4
 8002b74:	f7ff f8be 	bl	8001cf4 <uxListRemove>
 8002b78:	b948      	cbnz	r0, 8002b8e <vTaskPlaceOnEventList+0x32>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2285
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 8002b7a:	682b      	ldr	r3, [r5, #0]
 8002b7c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002b7e:	2301      	movs	r3, #1
 8002b80:	fa03 f202 	lsl.w	r2, r3, r2
 8002b84:	490e      	ldr	r1, [pc, #56]	; (8002bc0 <vTaskPlaceOnEventList+0x64>)
 8002b86:	680b      	ldr	r3, [r1, #0]
 8002b88:	ea23 0302 	bic.w	r3, r3, r2
 8002b8c:	600b      	str	r3, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2294
		if( xTicksToWait == portMAX_DELAY )
 8002b8e:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 8002b92:	d00b      	beq.n	8002bac <vTaskPlaceOnEventList+0x50>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2306
			xTimeToWake = xTickCount + xTicksToWait;
 8002b94:	4b0b      	ldr	r3, [pc, #44]	; (8002bc4 <vTaskPlaceOnEventList+0x68>)
 8002b96:	6818      	ldr	r0, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2307
			prvAddCurrentTaskToDelayedList( xTimeToWake );
 8002b98:	4420      	add	r0, r4
 8002b9a:	f7ff fcc5 	bl	8002528 <prvAddCurrentTaskToDelayedList>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2319
}
 8002b9e:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2267 (discriminator 1)
	configASSERT( pxEventList );
 8002ba0:	f640 01db 	movw	r1, #2267	; 0x8db
 8002ba4:	4808      	ldr	r0, [pc, #32]	; (8002bc8 <vTaskPlaceOnEventList+0x6c>)
 8002ba6:	f7fe fce0 	bl	800156a <vAssertCalled>
 8002baa:	e7db      	b.n	8002b64 <vTaskPlaceOnEventList+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2299
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xGenericListItem ) );
 8002bac:	4b03      	ldr	r3, [pc, #12]	; (8002bbc <vTaskPlaceOnEventList+0x60>)
 8002bae:	6819      	ldr	r1, [r3, #0]
 8002bb0:	3104      	adds	r1, #4
 8002bb2:	4806      	ldr	r0, [pc, #24]	; (8002bcc <vTaskPlaceOnEventList+0x70>)
 8002bb4:	f7ff f87a 	bl	8001cac <vListInsertEnd>
 8002bb8:	e7f1      	b.n	8002b9e <vTaskPlaceOnEventList+0x42>
 8002bba:	bf00      	nop
 8002bbc:	200029ac 	.word	0x200029ac
 8002bc0:	20002a30 	.word	0x20002a30
 8002bc4:	20002aa4 	.word	0x20002aa4
 8002bc8:	08003f6c 	.word	0x08003f6c
 8002bcc:	20002a7c 	.word	0x20002a7c

08002bd0 <vTaskPlaceOnEventListRestricted>:
vTaskPlaceOnEventListRestricted():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2391
	{
 8002bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bd2:	460d      	mov	r5, r1
 8002bd4:	4614      	mov	r4, r2
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2394
		configASSERT( pxEventList );
 8002bd6:	4607      	mov	r7, r0
 8002bd8:	b1e0      	cbz	r0, 8002c14 <vTaskPlaceOnEventListRestricted+0x44>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2406
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8002bda:	4e15      	ldr	r6, [pc, #84]	; (8002c30 <vTaskPlaceOnEventListRestricted+0x60>)
 8002bdc:	6831      	ldr	r1, [r6, #0]
 8002bde:	3118      	adds	r1, #24
 8002be0:	4638      	mov	r0, r7
 8002be2:	f7ff f863 	bl	8001cac <vListInsertEnd>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2412
		if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 8002be6:	6830      	ldr	r0, [r6, #0]
 8002be8:	3004      	adds	r0, #4
 8002bea:	f7ff f883 	bl	8001cf4 <uxListRemove>
 8002bee:	b948      	cbnz	r0, 8002c04 <vTaskPlaceOnEventListRestricted+0x34>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2416
			portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 8002bf0:	6833      	ldr	r3, [r6, #0]
 8002bf2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002bf4:	2301      	movs	r3, #1
 8002bf6:	fa03 f202 	lsl.w	r2, r3, r2
 8002bfa:	490e      	ldr	r1, [pc, #56]	; (8002c34 <vTaskPlaceOnEventListRestricted+0x64>)
 8002bfc:	680b      	ldr	r3, [r1, #0]
 8002bfe:	ea23 0302 	bic.w	r3, r3, r2
 8002c02:	600b      	str	r3, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2431
			if( xWaitIndefinitely == pdTRUE )
 8002c04:	2c01      	cmp	r4, #1
 8002c06:	d00b      	beq.n	8002c20 <vTaskPlaceOnEventListRestricted+0x50>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2443
				xTimeToWake = xTickCount + xTicksToWait;
 8002c08:	4b0b      	ldr	r3, [pc, #44]	; (8002c38 <vTaskPlaceOnEventListRestricted+0x68>)
 8002c0a:	6818      	ldr	r0, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2445
				prvAddCurrentTaskToDelayedList( xTimeToWake );
 8002c0c:	4428      	add	r0, r5
 8002c0e:	f7ff fc8b 	bl	8002528 <prvAddCurrentTaskToDelayedList>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2461
	}
 8002c12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2394 (discriminator 1)
		configASSERT( pxEventList );
 8002c14:	f640 115a 	movw	r1, #2394	; 0x95a
 8002c18:	4808      	ldr	r0, [pc, #32]	; (8002c3c <vTaskPlaceOnEventListRestricted+0x6c>)
 8002c1a:	f7fe fca6 	bl	800156a <vAssertCalled>
 8002c1e:	e7dc      	b.n	8002bda <vTaskPlaceOnEventListRestricted+0xa>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2436
				vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xGenericListItem ) );
 8002c20:	4b03      	ldr	r3, [pc, #12]	; (8002c30 <vTaskPlaceOnEventListRestricted+0x60>)
 8002c22:	6819      	ldr	r1, [r3, #0]
 8002c24:	3104      	adds	r1, #4
 8002c26:	4806      	ldr	r0, [pc, #24]	; (8002c40 <vTaskPlaceOnEventListRestricted+0x70>)
 8002c28:	f7ff f840 	bl	8001cac <vListInsertEnd>
 8002c2c:	e7f1      	b.n	8002c12 <vTaskPlaceOnEventListRestricted+0x42>
 8002c2e:	bf00      	nop
 8002c30:	200029ac 	.word	0x200029ac
 8002c34:	20002a30 	.word	0x20002a30
 8002c38:	20002aa4 	.word	0x20002aa4
 8002c3c:	08003f6c 	.word	0x08003f6c
 8002c40:	20002a7c 	.word	0x20002a7c

08002c44 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2467
{
 8002c44:	b538      	push	{r3, r4, r5, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2484
	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
 8002c46:	68c3      	ldr	r3, [r0, #12]
 8002c48:	68dc      	ldr	r4, [r3, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2485
	configASSERT( pxUnblockedTCB );
 8002c4a:	b33c      	cbz	r4, 8002c9c <xTaskRemoveFromEventList+0x58>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2486
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8002c4c:	f104 0518 	add.w	r5, r4, #24
 8002c50:	4628      	mov	r0, r5
 8002c52:	f7ff f84f 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2488
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8002c56:	4b18      	ldr	r3, [pc, #96]	; (8002cb8 <xTaskRemoveFromEventList+0x74>)
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	bb2b      	cbnz	r3, 8002ca8 <xTaskRemoveFromEventList+0x64>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2490
		( void ) uxListRemove( &( pxUnblockedTCB->xGenericListItem ) );
 8002c5c:	1d25      	adds	r5, r4, #4
 8002c5e:	4628      	mov	r0, r5
 8002c60:	f7ff f848 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2491
		prvAddTaskToReadyList( pxUnblockedTCB );
 8002c64:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8002c66:	2301      	movs	r3, #1
 8002c68:	4083      	lsls	r3, r0
 8002c6a:	4a14      	ldr	r2, [pc, #80]	; (8002cbc <xTaskRemoveFromEventList+0x78>)
 8002c6c:	6811      	ldr	r1, [r2, #0]
 8002c6e:	430b      	orrs	r3, r1
 8002c70:	6013      	str	r3, [r2, #0]
 8002c72:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8002c76:	4629      	mov	r1, r5
 8002c78:	4b11      	ldr	r3, [pc, #68]	; (8002cc0 <xTaskRemoveFromEventList+0x7c>)
 8002c7a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8002c7e:	f7ff f815 	bl	8001cac <vListInsertEnd>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2500
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8002c82:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002c84:	4b0f      	ldr	r3, [pc, #60]	; (8002cc4 <xTaskRemoveFromEventList+0x80>)
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002c8a:	429a      	cmp	r2, r3
 8002c8c:	d911      	bls.n	8002cb2 <xTaskRemoveFromEventList+0x6e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2509
		xYieldPending = pdTRUE;
 8002c8e:	2401      	movs	r4, #1
 8002c90:	4b0d      	ldr	r3, [pc, #52]	; (8002cc8 <xTaskRemoveFromEventList+0x84>)
 8002c92:	601c      	str	r4, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2526
		prvResetNextTaskUnblockTime();
 8002c94:	f7ff fb82 	bl	800239c <prvResetNextTaskUnblockTime>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2531
}
 8002c98:	4620      	mov	r0, r4
 8002c9a:	bd38      	pop	{r3, r4, r5, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2485 (discriminator 1)
	configASSERT( pxUnblockedTCB );
 8002c9c:	f640 11b5 	movw	r1, #2485	; 0x9b5
 8002ca0:	480a      	ldr	r0, [pc, #40]	; (8002ccc <xTaskRemoveFromEventList+0x88>)
 8002ca2:	f7fe fc62 	bl	800156a <vAssertCalled>
 8002ca6:	e7d1      	b.n	8002c4c <xTaskRemoveFromEventList+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2497
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8002ca8:	4629      	mov	r1, r5
 8002caa:	4809      	ldr	r0, [pc, #36]	; (8002cd0 <xTaskRemoveFromEventList+0x8c>)
 8002cac:	f7fe fffe 	bl	8001cac <vListInsertEnd>
 8002cb0:	e7e7      	b.n	8002c82 <xTaskRemoveFromEventList+0x3e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2513
		xReturn = pdFALSE;
 8002cb2:	2400      	movs	r4, #0
 8002cb4:	e7ee      	b.n	8002c94 <xTaskRemoveFromEventList+0x50>
 8002cb6:	bf00      	nop
 8002cb8:	20002a24 	.word	0x20002a24
 8002cbc:	20002a30 	.word	0x20002a30
 8002cc0:	200029b8 	.word	0x200029b8
 8002cc4:	200029ac 	.word	0x200029ac
 8002cc8:	20002aa8 	.word	0x20002aa8
 8002ccc:	08003f6c 	.word	0x08003f6c
 8002cd0:	20002a64 	.word	0x20002a64

08002cd4 <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2580
{
 8002cd4:	b510      	push	{r4, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2581
	configASSERT( pxTimeOut );
 8002cd6:	4604      	mov	r4, r0
 8002cd8:	b130      	cbz	r0, 8002ce8 <vTaskSetTimeOutState+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2582
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8002cda:	4b06      	ldr	r3, [pc, #24]	; (8002cf4 <vTaskSetTimeOutState+0x20>)
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	6023      	str	r3, [r4, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2583
	pxTimeOut->xTimeOnEntering = xTickCount;
 8002ce0:	4b05      	ldr	r3, [pc, #20]	; (8002cf8 <vTaskSetTimeOutState+0x24>)
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	6063      	str	r3, [r4, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2584
}
 8002ce6:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2581 (discriminator 1)
	configASSERT( pxTimeOut );
 8002ce8:	f640 2115 	movw	r1, #2581	; 0xa15
 8002cec:	4803      	ldr	r0, [pc, #12]	; (8002cfc <vTaskSetTimeOutState+0x28>)
 8002cee:	f7fe fc3c 	bl	800156a <vAssertCalled>
 8002cf2:	e7f2      	b.n	8002cda <vTaskSetTimeOutState+0x6>
 8002cf4:	20002a60 	.word	0x20002a60
 8002cf8:	20002aa4 	.word	0x20002aa4
 8002cfc:	08003f6c 	.word	0x08003f6c

08002d00 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2588
{
 8002d00:	b538      	push	{r3, r4, r5, lr}
 8002d02:	460c      	mov	r4, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2591
	configASSERT( pxTimeOut );
 8002d04:	4605      	mov	r5, r0
 8002d06:	b1b0      	cbz	r0, 8002d36 <xTaskCheckForTimeOut+0x36>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2592
	configASSERT( pxTicksToWait );
 8002d08:	b1dc      	cbz	r4, 8002d42 <xTaskCheckForTimeOut+0x42>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2594
	taskENTER_CRITICAL();
 8002d0a:	f7fe fe3f 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2597
		const TickType_t xConstTickCount = xTickCount;
 8002d0e:	4b17      	ldr	r3, [pc, #92]	; (8002d6c <xTaskCheckForTimeOut+0x6c>)
 8002d10:	681a      	ldr	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2603
			if( *pxTicksToWait == portMAX_DELAY )
 8002d12:	6823      	ldr	r3, [r4, #0]
 8002d14:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002d18:	d021      	beq.n	8002d5e <xTaskCheckForTimeOut+0x5e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2610
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8002d1a:	6828      	ldr	r0, [r5, #0]
 8002d1c:	4914      	ldr	r1, [pc, #80]	; (8002d70 <xTaskCheckForTimeOut+0x70>)
 8002d1e:	6809      	ldr	r1, [r1, #0]
 8002d20:	4288      	cmp	r0, r1
 8002d22:	d002      	beq.n	8002d2a <xTaskCheckForTimeOut+0x2a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2610 (discriminator 1)
 8002d24:	6869      	ldr	r1, [r5, #4]
 8002d26:	4291      	cmp	r1, r2
 8002d28:	d91e      	bls.n	8002d68 <xTaskCheckForTimeOut+0x68>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2618
		else if( ( xConstTickCount - pxTimeOut->xTimeOnEntering ) < *pxTicksToWait )
 8002d2a:	6869      	ldr	r1, [r5, #4]
 8002d2c:	1a50      	subs	r0, r2, r1
 8002d2e:	4283      	cmp	r3, r0
 8002d30:	d80d      	bhi.n	8002d4e <xTaskCheckForTimeOut+0x4e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2627
			xReturn = pdTRUE;
 8002d32:	2401      	movs	r4, #1
 8002d34:	e014      	b.n	8002d60 <xTaskCheckForTimeOut+0x60>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2591 (discriminator 1)
	configASSERT( pxTimeOut );
 8002d36:	f640 211f 	movw	r1, #2591	; 0xa1f
 8002d3a:	480e      	ldr	r0, [pc, #56]	; (8002d74 <xTaskCheckForTimeOut+0x74>)
 8002d3c:	f7fe fc15 	bl	800156a <vAssertCalled>
 8002d40:	e7e2      	b.n	8002d08 <xTaskCheckForTimeOut+0x8>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2592 (discriminator 1)
	configASSERT( pxTicksToWait );
 8002d42:	f44f 6122 	mov.w	r1, #2592	; 0xa20
 8002d46:	480b      	ldr	r0, [pc, #44]	; (8002d74 <xTaskCheckForTimeOut+0x74>)
 8002d48:	f7fe fc0f 	bl	800156a <vAssertCalled>
 8002d4c:	e7dd      	b.n	8002d0a <xTaskCheckForTimeOut+0xa>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2621
			*pxTicksToWait -= ( xConstTickCount -  pxTimeOut->xTimeOnEntering );
 8002d4e:	1a8a      	subs	r2, r1, r2
 8002d50:	4413      	add	r3, r2
 8002d52:	6023      	str	r3, [r4, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2622
			vTaskSetTimeOutState( pxTimeOut );
 8002d54:	4628      	mov	r0, r5
 8002d56:	f7ff ffbd 	bl	8002cd4 <vTaskSetTimeOutState>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2623
			xReturn = pdFALSE;
 8002d5a:	2400      	movs	r4, #0
 8002d5c:	e000      	b.n	8002d60 <xTaskCheckForTimeOut+0x60>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2605
				xReturn = pdFALSE;
 8002d5e:	2400      	movs	r4, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2630
	taskEXIT_CRITICAL();
 8002d60:	f7fe fe38 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2633
}
 8002d64:	4620      	mov	r0, r4
 8002d66:	bd38      	pop	{r3, r4, r5, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2616
			xReturn = pdTRUE;
 8002d68:	2401      	movs	r4, #1
 8002d6a:	e7f9      	b.n	8002d60 <xTaskCheckForTimeOut+0x60>
 8002d6c:	20002aa4 	.word	0x20002aa4
 8002d70:	20002a60 	.word	0x20002a60
 8002d74:	08003f6c 	.word	0x08003f6c

08002d78 <vTaskMissedYield>:
vTaskMissedYield():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2638
	xYieldPending = pdTRUE;
 8002d78:	4b01      	ldr	r3, [pc, #4]	; (8002d80 <vTaskMissedYield+0x8>)
 8002d7a:	2201      	movs	r2, #1
 8002d7c:	601a      	str	r2, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2639
}
 8002d7e:	4770      	bx	lr
 8002d80:	20002aa8 	.word	0x20002aa8

08002d84 <eTaskConfirmSleepModeStatus>:
eTaskConfirmSleepModeStatus():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2802
		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
 8002d84:	4b0a      	ldr	r3, [pc, #40]	; (8002db0 <eTaskConfirmSleepModeStatus+0x2c>)
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	b95b      	cbnz	r3, 8002da2 <eTaskConfirmSleepModeStatus+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2807
		else if( xYieldPending != pdFALSE )
 8002d8a:	4b0a      	ldr	r3, [pc, #40]	; (8002db4 <eTaskConfirmSleepModeStatus+0x30>)
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	b953      	cbnz	r3, 8002da6 <eTaskConfirmSleepModeStatus+0x22>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2818
			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicationTasks ) )
 8002d90:	4b09      	ldr	r3, [pc, #36]	; (8002db8 <eTaskConfirmSleepModeStatus+0x34>)
 8002d92:	681a      	ldr	r2, [r3, #0]
 8002d94:	4b09      	ldr	r3, [pc, #36]	; (8002dbc <eTaskConfirmSleepModeStatus+0x38>)
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	3b01      	subs	r3, #1
 8002d9a:	429a      	cmp	r2, r3
 8002d9c:	d005      	beq.n	8002daa <eTaskConfirmSleepModeStatus+0x26>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2800
	eSleepModeStatus eReturn = eStandardSleep;
 8002d9e:	2001      	movs	r0, #1
 8002da0:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2805
			eReturn = eAbortSleep;
 8002da2:	2000      	movs	r0, #0
 8002da4:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2810
			eReturn = eAbortSleep;
 8002da6:	2000      	movs	r0, #0
 8002da8:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2820
				eReturn = eNoTasksWaitingTimeout;
 8002daa:	2002      	movs	r0, #2
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:2829
	}
 8002dac:	4770      	bx	lr
 8002dae:	bf00      	nop
 8002db0:	20002a64 	.word	0x20002a64
 8002db4:	20002aa8 	.word	0x20002aa8
 8002db8:	20002a7c 	.word	0x20002a7c
 8002dbc:	20002a1c 	.word	0x20002a1c

08002dc0 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3395

	BaseType_t xTaskGetSchedulerState( void )
	{
	BaseType_t xReturn;

		if( xSchedulerRunning == pdFALSE )
 8002dc0:	4b05      	ldr	r3, [pc, #20]	; (8002dd8 <xTaskGetSchedulerState+0x18>)
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	b133      	cbz	r3, 8002dd4 <xTaskGetSchedulerState+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3401
		{
			xReturn = taskSCHEDULER_NOT_STARTED;
		}
		else
		{
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8002dc6:	4b05      	ldr	r3, [pc, #20]	; (8002ddc <xTaskGetSchedulerState+0x1c>)
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	b10b      	cbz	r3, 8002dd0 <xTaskGetSchedulerState+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3407
			{
				xReturn = taskSCHEDULER_RUNNING;
			}
			else
			{
				xReturn = taskSCHEDULER_SUSPENDED;
 8002dcc:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3412
			}
		}

		return xReturn;
	}
 8002dce:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3403
				xReturn = taskSCHEDULER_RUNNING;
 8002dd0:	2002      	movs	r0, #2
 8002dd2:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3397
			xReturn = taskSCHEDULER_NOT_STARTED;
 8002dd4:	2001      	movs	r0, #1
 8002dd6:	4770      	bx	lr
 8002dd8:	20002a78 	.word	0x20002a78
 8002ddc:	20002a24 	.word	0x20002a24

08002de0 <vTaskPriorityInherit>:
vTaskPriorityInherit():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3425
	{
	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;

		/* If the mutex was given back by an interrupt while the queue was
		locked then the mutex holder might now be NULL. */
		if( pxMutexHolder != NULL )
 8002de0:	2800      	cmp	r0, #0
 8002de2:	d045      	beq.n	8002e70 <vTaskPriorityInherit+0x90>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3420
	{
 8002de4:	b538      	push	{r3, r4, r5, lr}
 8002de6:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3430
		{
			/* If the holder of the mutex has a priority below the priority of
			the task attempting to obtain the mutex then it will temporarily
			inherit the priority of the task attempting to obtain the mutex. */
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
 8002de8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002dea:	4a22      	ldr	r2, [pc, #136]	; (8002e74 <vTaskPriorityInherit+0x94>)
 8002dec:	6812      	ldr	r2, [r2, #0]
 8002dee:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8002df0:	4293      	cmp	r3, r2
 8002df2:	d214      	bcs.n	8002e1e <vTaskPriorityInherit+0x3e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3435
			{
				/* Adjust the mutex holder state to account for its new
				priority.  Only reset the event list item value if the value is
				not	being used for anything else. */
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8002df4:	6982      	ldr	r2, [r0, #24]
 8002df6:	2a00      	cmp	r2, #0
 8002df8:	db05      	blt.n	8002e06 <vTaskPriorityInherit+0x26>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3437
				{
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8002dfa:	4a1e      	ldr	r2, [pc, #120]	; (8002e74 <vTaskPriorityInherit+0x94>)
 8002dfc:	6812      	ldr	r2, [r2, #0]
 8002dfe:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8002e00:	f1c2 0205 	rsb	r2, r2, #5
 8002e04:	6182      	str	r2, [r0, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3446
					mtCOVERAGE_TEST_MARKER();
				}

				/* If the task being modified is in the ready state it will need
				to be moved into a new list. */
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericListItem ) ) != pdFALSE )
 8002e06:	6961      	ldr	r1, [r4, #20]
 8002e08:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8002e0c:	4a1a      	ldr	r2, [pc, #104]	; (8002e78 <vTaskPriorityInherit+0x98>)
 8002e0e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8002e12:	4299      	cmp	r1, r3
 8002e14:	d004      	beq.n	8002e20 <vTaskPriorityInherit+0x40>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3464
					prvAddTaskToReadyList( pxTCB );
				}
				else
				{
					/* Just inherit the priority. */
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
 8002e16:	4b17      	ldr	r3, [pc, #92]	; (8002e74 <vTaskPriorityInherit+0x94>)
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e1c:	62e3      	str	r3, [r4, #44]	; 0x2c
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3478
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
 8002e1e:	bd38      	pop	{r3, r4, r5, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3448
					if( uxListRemove( &( pxTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 8002e20:	1d25      	adds	r5, r4, #4
 8002e22:	4628      	mov	r0, r5
 8002e24:	f7fe ff66 	bl	8001cf4 <uxListRemove>
 8002e28:	b190      	cbz	r0, 8002e50 <vTaskPriorityInherit+0x70>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3458
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
 8002e2a:	4b12      	ldr	r3, [pc, #72]	; (8002e74 <vTaskPriorityInherit+0x94>)
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8002e30:	62e0      	str	r0, [r4, #44]	; 0x2c
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3459
					prvAddTaskToReadyList( pxTCB );
 8002e32:	2301      	movs	r3, #1
 8002e34:	4083      	lsls	r3, r0
 8002e36:	4a11      	ldr	r2, [pc, #68]	; (8002e7c <vTaskPriorityInherit+0x9c>)
 8002e38:	6811      	ldr	r1, [r2, #0]
 8002e3a:	430b      	orrs	r3, r1
 8002e3c:	6013      	str	r3, [r2, #0]
 8002e3e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8002e42:	4629      	mov	r1, r5
 8002e44:	4b0c      	ldr	r3, [pc, #48]	; (8002e78 <vTaskPriorityInherit+0x98>)
 8002e46:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8002e4a:	f7fe ff2f 	bl	8001cac <vListInsertEnd>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3478
	}
 8002e4e:	e7e6      	b.n	8002e1e <vTaskPriorityInherit+0x3e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3450
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 8002e50:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002e52:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 8002e56:	4a08      	ldr	r2, [pc, #32]	; (8002e78 <vTaskPriorityInherit+0x98>)
 8002e58:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8002e5c:	2a00      	cmp	r2, #0
 8002e5e:	d1e4      	bne.n	8002e2a <vTaskPriorityInherit+0x4a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3450 (discriminator 1)
 8002e60:	2201      	movs	r2, #1
 8002e62:	409a      	lsls	r2, r3
 8002e64:	4905      	ldr	r1, [pc, #20]	; (8002e7c <vTaskPriorityInherit+0x9c>)
 8002e66:	680b      	ldr	r3, [r1, #0]
 8002e68:	ea23 0302 	bic.w	r3, r3, r2
 8002e6c:	600b      	str	r3, [r1, #0]
 8002e6e:	e7dc      	b.n	8002e2a <vTaskPriorityInherit+0x4a>
 8002e70:	4770      	bx	lr
 8002e72:	bf00      	nop
 8002e74:	200029ac 	.word	0x200029ac
 8002e78:	200029b8 	.word	0x200029b8
 8002e7c:	20002a30 	.word	0x20002a30

08002e80 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3490
	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
	{
	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
	BaseType_t xReturn = pdFALSE;

		if( pxMutexHolder != NULL )
 8002e80:	2800      	cmp	r0, #0
 8002e82:	d045      	beq.n	8002f10 <xTaskPriorityDisinherit+0x90>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3486
	{
 8002e84:	b538      	push	{r3, r4, r5, lr}
 8002e86:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3496
		{
			/* A task can only have an inherited priority if it holds the mutex.
			If the mutex is held by a task then it cannot be given from an
			interrupt, and if a mutex is given by the holding task then it must
			be the running state task. */
			configASSERT( pxTCB == pxCurrentTCB );
 8002e88:	4b23      	ldr	r3, [pc, #140]	; (8002f18 <xTaskPriorityDisinherit+0x98>)
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	4283      	cmp	r3, r0
 8002e8e:	d004      	beq.n	8002e9a <xTaskPriorityDisinherit+0x1a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3496 (discriminator 1)
 8002e90:	f640 51a8 	movw	r1, #3496	; 0xda8
 8002e94:	4821      	ldr	r0, [pc, #132]	; (8002f1c <xTaskPriorityDisinherit+0x9c>)
 8002e96:	f7fe fb68 	bl	800156a <vAssertCalled>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3498

			configASSERT( pxTCB->uxMutexesHeld );
 8002e9a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8002e9c:	b14b      	cbz	r3, 8002eb2 <xTaskPriorityDisinherit+0x32>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3499
			( pxTCB->uxMutexesHeld )--;
 8002e9e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8002ea0:	3b01      	subs	r3, #1
 8002ea2:	64a3      	str	r3, [r4, #72]	; 0x48
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3503

			/* Has the holder of the mutex inherited the priority of another
			task? */
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8002ea4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002ea6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8002ea8:	4291      	cmp	r1, r2
 8002eaa:	d033      	beq.n	8002f14 <xTaskPriorityDisinherit+0x94>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3506
			{
				/* Only disinherit if no other mutexes are held. */
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8002eac:	b13b      	cbz	r3, 8002ebe <xTaskPriorityDisinherit+0x3e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3488
	BaseType_t xReturn = pdFALSE;
 8002eae:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3559
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
 8002eb0:	bd38      	pop	{r3, r4, r5, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3498 (discriminator 1)
			configASSERT( pxTCB->uxMutexesHeld );
 8002eb2:	f640 51aa 	movw	r1, #3498	; 0xdaa
 8002eb6:	4819      	ldr	r0, [pc, #100]	; (8002f1c <xTaskPriorityDisinherit+0x9c>)
 8002eb8:	f7fe fb57 	bl	800156a <vAssertCalled>
 8002ebc:	e7ef      	b.n	8002e9e <xTaskPriorityDisinherit+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3513
					if( uxListRemove( &( pxTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 8002ebe:	1d25      	adds	r5, r4, #4
 8002ec0:	4628      	mov	r0, r5
 8002ec2:	f7fe ff17 	bl	8001cf4 <uxListRemove>
 8002ec6:	b968      	cbnz	r0, 8002ee4 <xTaskPriorityDisinherit+0x64>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3515
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 8002ec8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002eca:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 8002ece:	4a14      	ldr	r2, [pc, #80]	; (8002f20 <xTaskPriorityDisinherit+0xa0>)
 8002ed0:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8002ed4:	b932      	cbnz	r2, 8002ee4 <xTaskPriorityDisinherit+0x64>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3515 (discriminator 1)
 8002ed6:	2201      	movs	r2, #1
 8002ed8:	409a      	lsls	r2, r3
 8002eda:	4912      	ldr	r1, [pc, #72]	; (8002f24 <xTaskPriorityDisinherit+0xa4>)
 8002edc:	680b      	ldr	r3, [r1, #0]
 8002ede:	ea23 0302 	bic.w	r3, r3, r2
 8002ee2:	600b      	str	r3, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3525
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8002ee4:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8002ee6:	62e0      	str	r0, [r4, #44]	; 0x2c
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3530
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8002ee8:	f1c0 0305 	rsb	r3, r0, #5
 8002eec:	61a3      	str	r3, [r4, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3531
					prvAddTaskToReadyList( pxTCB );
 8002eee:	2401      	movs	r4, #1
 8002ef0:	fa04 f300 	lsl.w	r3, r4, r0
 8002ef4:	4a0b      	ldr	r2, [pc, #44]	; (8002f24 <xTaskPriorityDisinherit+0xa4>)
 8002ef6:	6811      	ldr	r1, [r2, #0]
 8002ef8:	430b      	orrs	r3, r1
 8002efa:	6013      	str	r3, [r2, #0]
 8002efc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8002f00:	4629      	mov	r1, r5
 8002f02:	4b07      	ldr	r3, [pc, #28]	; (8002f20 <xTaskPriorityDisinherit+0xa0>)
 8002f04:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8002f08:	f7fe fed0 	bl	8001cac <vListInsertEnd>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3541
					xReturn = pdTRUE;
 8002f0c:	4620      	mov	r0, r4
 8002f0e:	e7cf      	b.n	8002eb0 <xTaskPriorityDisinherit+0x30>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3488
	BaseType_t xReturn = pdFALSE;
 8002f10:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3559
	}
 8002f12:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3488
	BaseType_t xReturn = pdFALSE;
 8002f14:	2000      	movs	r0, #0
 8002f16:	e7cb      	b.n	8002eb0 <xTaskPriorityDisinherit+0x30>
 8002f18:	200029ac 	.word	0x200029ac
 8002f1c:	08003f6c 	.word	0x08003f6c
 8002f20:	200029b8 	.word	0x200029b8
 8002f24:	20002a30 	.word	0x20002a30

08002f28 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3890

	void *pvTaskIncrementMutexHeldCount( void )
	{
		/* If xSemaphoreCreateMutex() is called before any tasks have been created
		then pxCurrentTCB will be NULL. */
		if( pxCurrentTCB != NULL )
 8002f28:	4b05      	ldr	r3, [pc, #20]	; (8002f40 <pvTaskIncrementMutexHeldCount+0x18>)
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	b123      	cbz	r3, 8002f38 <pvTaskIncrementMutexHeldCount+0x10>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3892
		{
			( pxCurrentTCB->uxMutexesHeld )++;
 8002f2e:	4b04      	ldr	r3, [pc, #16]	; (8002f40 <pvTaskIncrementMutexHeldCount+0x18>)
 8002f30:	681a      	ldr	r2, [r3, #0]
 8002f32:	6c93      	ldr	r3, [r2, #72]	; 0x48
 8002f34:	3301      	adds	r3, #1
 8002f36:	6493      	str	r3, [r2, #72]	; 0x48
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3895
		}

		return pxCurrentTCB;
 8002f38:	4b01      	ldr	r3, [pc, #4]	; (8002f40 <pvTaskIncrementMutexHeldCount+0x18>)
 8002f3a:	6818      	ldr	r0, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/tasks.c:3896
	}
 8002f3c:	4770      	bx	lr
 8002f3e:	bf00      	nop
 8002f40:	200029ac 	.word	0x200029ac

08002f44 <prvGetNextExpireTime>:
prvGetNextExpireTime():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:506
	the timer with the nearest expiry time will expire.  If there are no
	active timers then just set the next expire time to 0.  That will cause
	this task to unblock when the tick count overflows, at which point the
	timer lists will be switched and the next expiry time can be
	re-assessed.  */
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8002f44:	4b06      	ldr	r3, [pc, #24]	; (8002f60 <prvGetNextExpireTime+0x1c>)
 8002f46:	681a      	ldr	r2, [r3, #0]
 8002f48:	6813      	ldr	r3, [r2, #0]
 8002f4a:	fab3 f383 	clz	r3, r3
 8002f4e:	095b      	lsrs	r3, r3, #5
 8002f50:	6003      	str	r3, [r0, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:507
	if( *pxListWasEmpty == pdFALSE )
 8002f52:	b913      	cbnz	r3, 8002f5a <prvGetNextExpireTime+0x16>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:509
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8002f54:	68d3      	ldr	r3, [r2, #12]
 8002f56:	6818      	ldr	r0, [r3, #0]
 8002f58:	4770      	bx	lr
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:514
	}
	else
	{
		/* Ensure the task unblocks when the tick count rolls over. */
		xNextExpireTime = ( TickType_t ) 0U;
 8002f5a:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:518
	}

	return xNextExpireTime;
}
 8002f5c:	4770      	bx	lr
 8002f5e:	bf00      	nop
 8002f60:	20002aac 	.word	0x20002aac

08002f64 <prvInsertTimerInActiveList>:
prvInsertTimerInActiveList():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:545
	return xTimeNow;
}
/*-----------------------------------------------------------*/

static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiryTime, const TickType_t xTimeNow, const TickType_t xCommandTime )
{
 8002f64:	b508      	push	{r3, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:548
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8002f66:	6041      	str	r1, [r0, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:549
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8002f68:	6100      	str	r0, [r0, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:551

	if( xNextExpiryTime <= xTimeNow )
 8002f6a:	4291      	cmp	r1, r2
 8002f6c:	d80c      	bhi.n	8002f88 <prvInsertTimerInActiveList+0x24>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:555
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( xTimeNow - xCommandTime ) >= pxTimer->xTimerPeriodInTicks )
 8002f6e:	1ad2      	subs	r2, r2, r3
 8002f70:	6983      	ldr	r3, [r0, #24]
 8002f72:	429a      	cmp	r2, r3
 8002f74:	d301      	bcc.n	8002f7a <prvInsertTimerInActiveList+0x16>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:559
		{
			/* The time between a command being issued and the command being
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
 8002f76:	2001      	movs	r0, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:582
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
		}
	}

	return xProcessTimerNow;
}
 8002f78:	bd08      	pop	{r3, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:563
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8002f7a:	1d01      	adds	r1, r0, #4
 8002f7c:	4b09      	ldr	r3, [pc, #36]	; (8002fa4 <prvInsertTimerInActiveList+0x40>)
 8002f7e:	6818      	ldr	r0, [r3, #0]
 8002f80:	f7fe fe9f 	bl	8001cc2 <vListInsert>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:546
BaseType_t xProcessTimerNow = pdFALSE;
 8002f84:	2000      	movs	r0, #0
 8002f86:	e7f7      	b.n	8002f78 <prvInsertTimerInActiveList+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:568
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8002f88:	429a      	cmp	r2, r3
 8002f8a:	d201      	bcs.n	8002f90 <prvInsertTimerInActiveList+0x2c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:568 (discriminator 1)
 8002f8c:	4299      	cmp	r1, r3
 8002f8e:	d206      	bcs.n	8002f9e <prvInsertTimerInActiveList+0x3a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:577
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8002f90:	1d01      	adds	r1, r0, #4
 8002f92:	4b05      	ldr	r3, [pc, #20]	; (8002fa8 <prvInsertTimerInActiveList+0x44>)
 8002f94:	6818      	ldr	r0, [r3, #0]
 8002f96:	f7fe fe94 	bl	8001cc2 <vListInsert>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:546
BaseType_t xProcessTimerNow = pdFALSE;
 8002f9a:	2000      	movs	r0, #0
 8002f9c:	e7ec      	b.n	8002f78 <prvInsertTimerInActiveList+0x14>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:573
			xProcessTimerNow = pdTRUE;
 8002f9e:	2001      	movs	r0, #1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:581
	return xProcessTimerNow;
 8002fa0:	e7ea      	b.n	8002f78 <prvInsertTimerInActiveList+0x14>
 8002fa2:	bf00      	nop
 8002fa4:	20002ab0 	.word	0x20002ab0
 8002fa8:	20002aac 	.word	0x20002aac

08002fac <prvCheckForValidListAndQueue>:
prvCheckForValidListAndQueue():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:771
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8002fac:	b538      	push	{r3, r4, r5, lr}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:775
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
 8002fae:	f7fe fced 	bl	800198c <vPortEnterCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:777
	{
		if( xTimerQueue == NULL )
 8002fb2:	4b14      	ldr	r3, [pc, #80]	; (8003004 <prvCheckForValidListAndQueue+0x58>)
 8002fb4:	681b      	ldr	r3, [r3, #0]
 8002fb6:	b113      	cbz	r3, 8002fbe <prvCheckForValidListAndQueue+0x12>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:804
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 8002fb8:	f7fe fd0c 	bl	80019d4 <vPortExitCritical>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:805
}
 8002fbc:	bd38      	pop	{r3, r4, r5, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:779
			vListInitialise( &xActiveTimerList1 );
 8002fbe:	4d12      	ldr	r5, [pc, #72]	; (8003008 <prvCheckForValidListAndQueue+0x5c>)
 8002fc0:	4628      	mov	r0, r5
 8002fc2:	f7fe fe65 	bl	8001c90 <vListInitialise>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:780
			vListInitialise( &xActiveTimerList2 );
 8002fc6:	4c11      	ldr	r4, [pc, #68]	; (800300c <prvCheckForValidListAndQueue+0x60>)
 8002fc8:	4620      	mov	r0, r4
 8002fca:	f7fe fe61 	bl	8001c90 <vListInitialise>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:781
			pxCurrentTimerList = &xActiveTimerList1;
 8002fce:	4b10      	ldr	r3, [pc, #64]	; (8003010 <prvCheckForValidListAndQueue+0x64>)
 8002fd0:	601d      	str	r5, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:782
			pxOverflowTimerList = &xActiveTimerList2;
 8002fd2:	4b10      	ldr	r3, [pc, #64]	; (8003014 <prvCheckForValidListAndQueue+0x68>)
 8002fd4:	601c      	str	r4, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:783
			xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage_t ) );
 8002fd6:	2200      	movs	r2, #0
 8002fd8:	2110      	movs	r1, #16
 8002fda:	200a      	movs	r0, #10
 8002fdc:	f7fe ff76 	bl	8001ecc <xQueueGenericCreate>
 8002fe0:	4b08      	ldr	r3, [pc, #32]	; (8003004 <prvCheckForValidListAndQueue+0x58>)
 8002fe2:	6018      	str	r0, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:784
			configASSERT( xTimerQueue );
 8002fe4:	b138      	cbz	r0, 8002ff6 <prvCheckForValidListAndQueue+0x4a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:788
				if( xTimerQueue != NULL )
 8002fe6:	4b07      	ldr	r3, [pc, #28]	; (8003004 <prvCheckForValidListAndQueue+0x58>)
 8002fe8:	6818      	ldr	r0, [r3, #0]
 8002fea:	2800      	cmp	r0, #0
 8002fec:	d0e4      	beq.n	8002fb8 <prvCheckForValidListAndQueue+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:790
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8002fee:	490a      	ldr	r1, [pc, #40]	; (8003018 <prvCheckForValidListAndQueue+0x6c>)
 8002ff0:	f7ff f984 	bl	80022fc <vQueueAddToRegistry>
 8002ff4:	e7e0      	b.n	8002fb8 <prvCheckForValidListAndQueue+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:784 (discriminator 1)
			configASSERT( xTimerQueue );
 8002ff6:	f44f 7144 	mov.w	r1, #784	; 0x310
 8002ffa:	4808      	ldr	r0, [pc, #32]	; (800301c <prvCheckForValidListAndQueue+0x70>)
 8002ffc:	f7fe fab5 	bl	800156a <vAssertCalled>
 8003000:	e7f1      	b.n	8002fe6 <prvCheckForValidListAndQueue+0x3a>
 8003002:	bf00      	nop
 8003004:	20002ae0 	.word	0x20002ae0
 8003008:	20002ab4 	.word	0x20002ab4
 800300c:	20002ac8 	.word	0x20002ac8
 8003010:	20002aac 	.word	0x20002aac
 8003014:	20002ab0 	.word	0x20002ab0
 8003018:	08003fb4 	.word	0x08003fb4
 800301c:	08003f9c 	.word	0x08003f9c

08003020 <xTimerCreateTimerTask>:
xTimerCreateTimerTask():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:241
{
 8003020:	b510      	push	{r4, lr}
 8003022:	b084      	sub	sp, #16
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:248
	prvCheckForValidListAndQueue();
 8003024:	f7ff ffc2 	bl	8002fac <prvCheckForValidListAndQueue>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:250
	if( xTimerQueue != NULL )
 8003028:	4b0d      	ldr	r3, [pc, #52]	; (8003060 <xTimerCreateTimerTask+0x40>)
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	b1ab      	cbz	r3, 800305a <xTimerCreateTimerTask+0x3a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:261
			xReturn = xTaskCreate( prvTimerTask, "Tmr Svc", ( uint16_t ) configTIMER_TASK_STACK_DEPTH, NULL, ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT, NULL);
 800302e:	2300      	movs	r3, #0
 8003030:	9303      	str	r3, [sp, #12]
 8003032:	9302      	str	r3, [sp, #8]
 8003034:	9301      	str	r3, [sp, #4]
 8003036:	2203      	movs	r2, #3
 8003038:	9200      	str	r2, [sp, #0]
 800303a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800303e:	4909      	ldr	r1, [pc, #36]	; (8003064 <xTimerCreateTimerTask+0x44>)
 8003040:	4809      	ldr	r0, [pc, #36]	; (8003068 <xTimerCreateTimerTask+0x48>)
 8003042:	f7ff fa9b 	bl	800257c <xTaskGenericCreate>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:270
	configASSERT( xReturn );
 8003046:	4604      	mov	r4, r0
 8003048:	b920      	cbnz	r0, 8003054 <xTimerCreateTimerTask+0x34>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:270 (discriminator 1)
 800304a:	f44f 7187 	mov.w	r1, #270	; 0x10e
 800304e:	4807      	ldr	r0, [pc, #28]	; (800306c <xTimerCreateTimerTask+0x4c>)
 8003050:	f7fe fa8b 	bl	800156a <vAssertCalled>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:272
}
 8003054:	4620      	mov	r0, r4
 8003056:	b004      	add	sp, #16
 8003058:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:242
BaseType_t xReturn = pdFAIL;
 800305a:	2400      	movs	r4, #0
 800305c:	e7f5      	b.n	800304a <xTimerCreateTimerTask+0x2a>
 800305e:	bf00      	nop
 8003060:	20002ae0 	.word	0x20002ae0
 8003064:	08003fbc 	.word	0x08003fbc
 8003068:	08003311 	.word	0x08003311
 800306c:	08003f9c 	.word	0x08003f9c

08003070 <xTimerGenericCommand>:
xTimerGenericCommand():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:317
{
 8003070:	b510      	push	{r4, lr}
 8003072:	b084      	sub	sp, #16
 8003074:	469c      	mov	ip, r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:323
	if( xTimerQueue != NULL )
 8003076:	4b13      	ldr	r3, [pc, #76]	; (80030c4 <xTimerGenericCommand+0x54>)
 8003078:	681c      	ldr	r4, [r3, #0]
 800307a:	b304      	cbz	r4, 80030be <xTimerGenericCommand+0x4e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:326
		xMessage.xMessageID = xCommandID;
 800307c:	9100      	str	r1, [sp, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:327
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800307e:	9201      	str	r2, [sp, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:328
		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 8003080:	9002      	str	r0, [sp, #8]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:330
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8003082:	2905      	cmp	r1, #5
 8003084:	dc13      	bgt.n	80030ae <xTimerGenericCommand+0x3e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:332
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8003086:	f7ff fe9b 	bl	8002dc0 <xTaskGetSchedulerState>
 800308a:	2802      	cmp	r0, #2
 800308c:	d007      	beq.n	800309e <xTimerGenericCommand+0x2e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:338
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800308e:	2300      	movs	r3, #0
 8003090:	461a      	mov	r2, r3
 8003092:	4669      	mov	r1, sp
 8003094:	480b      	ldr	r0, [pc, #44]	; (80030c4 <xTimerGenericCommand+0x54>)
 8003096:	6800      	ldr	r0, [r0, #0]
 8003098:	f7fe ff44 	bl	8001f24 <xQueueGenericSend>
 800309c:	e00d      	b.n	80030ba <xTimerGenericCommand+0x4a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:334
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800309e:	2300      	movs	r3, #0
 80030a0:	9a06      	ldr	r2, [sp, #24]
 80030a2:	4669      	mov	r1, sp
 80030a4:	4807      	ldr	r0, [pc, #28]	; (80030c4 <xTimerGenericCommand+0x54>)
 80030a6:	6800      	ldr	r0, [r0, #0]
 80030a8:	f7fe ff3c 	bl	8001f24 <xQueueGenericSend>
 80030ac:	e005      	b.n	80030ba <xTimerGenericCommand+0x4a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:343
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 80030ae:	2300      	movs	r3, #0
 80030b0:	4662      	mov	r2, ip
 80030b2:	4669      	mov	r1, sp
 80030b4:	4620      	mov	r0, r4
 80030b6:	f7fe ffd1 	bl	800205c <xQueueGenericSendFromISR>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:354
}
 80030ba:	b004      	add	sp, #16
 80030bc:	bd10      	pop	{r4, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:318
BaseType_t xReturn = pdFAIL;
 80030be:	2000      	movs	r0, #0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:353
	return xReturn;
 80030c0:	e7fb      	b.n	80030ba <xTimerGenericCommand+0x4a>
 80030c2:	bf00      	nop
 80030c4:	20002ae0 	.word	0x20002ae0

080030c8 <prvSwitchTimerLists>:
prvSwitchTimerLists():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:712
{
 80030c8:	b570      	push	{r4, r5, r6, lr}
 80030ca:	b082      	sub	sp, #8
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:722
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80030cc:	4b19      	ldr	r3, [pc, #100]	; (8003134 <prvSwitchTimerLists+0x6c>)
 80030ce:	681b      	ldr	r3, [r3, #0]
 80030d0:	681a      	ldr	r2, [r3, #0]
 80030d2:	b33a      	cbz	r2, 8003124 <prvSwitchTimerLists+0x5c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:724
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80030d4:	68db      	ldr	r3, [r3, #12]
 80030d6:	681e      	ldr	r6, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:727
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 80030d8:	68dc      	ldr	r4, [r3, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:728
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80030da:	1d25      	adds	r5, r4, #4
 80030dc:	4628      	mov	r0, r5
 80030de:	f7fe fe09 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:734
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80030e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80030e4:	4620      	mov	r0, r4
 80030e6:	4798      	blx	r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:736
		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 80030e8:	69e3      	ldr	r3, [r4, #28]
 80030ea:	2b01      	cmp	r3, #1
 80030ec:	d1ee      	bne.n	80030cc <prvSwitchTimerLists+0x4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:744
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80030ee:	69a3      	ldr	r3, [r4, #24]
 80030f0:	4433      	add	r3, r6
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:745
			if( xReloadTime > xNextExpireTime )
 80030f2:	429e      	cmp	r6, r3
 80030f4:	d207      	bcs.n	8003106 <prvSwitchTimerLists+0x3e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:747
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80030f6:	6063      	str	r3, [r4, #4]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:748
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80030f8:	6124      	str	r4, [r4, #16]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:749
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80030fa:	4629      	mov	r1, r5
 80030fc:	4b0d      	ldr	r3, [pc, #52]	; (8003134 <prvSwitchTimerLists+0x6c>)
 80030fe:	6818      	ldr	r0, [r3, #0]
 8003100:	f7fe fddf 	bl	8001cc2 <vListInsert>
 8003104:	e7e2      	b.n	80030cc <prvSwitchTimerLists+0x4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:753
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8003106:	2100      	movs	r1, #0
 8003108:	9100      	str	r1, [sp, #0]
 800310a:	460b      	mov	r3, r1
 800310c:	4632      	mov	r2, r6
 800310e:	4620      	mov	r0, r4
 8003110:	f7ff ffae 	bl	8003070 <xTimerGenericCommand>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:754
				configASSERT( xResult );
 8003114:	2800      	cmp	r0, #0
 8003116:	d1d9      	bne.n	80030cc <prvSwitchTimerLists+0x4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:754 (discriminator 1)
 8003118:	f240 21f2 	movw	r1, #754	; 0x2f2
 800311c:	4806      	ldr	r0, [pc, #24]	; (8003138 <prvSwitchTimerLists+0x70>)
 800311e:	f7fe fa24 	bl	800156a <vAssertCalled>
 8003122:	e7d3      	b.n	80030cc <prvSwitchTimerLists+0x4>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:765
	pxCurrentTimerList = pxOverflowTimerList;
 8003124:	4a05      	ldr	r2, [pc, #20]	; (800313c <prvSwitchTimerLists+0x74>)
 8003126:	6810      	ldr	r0, [r2, #0]
 8003128:	4902      	ldr	r1, [pc, #8]	; (8003134 <prvSwitchTimerLists+0x6c>)
 800312a:	6008      	str	r0, [r1, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:766
	pxOverflowTimerList = pxTemp;
 800312c:	6013      	str	r3, [r2, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:767
}
 800312e:	b002      	add	sp, #8
 8003130:	bd70      	pop	{r4, r5, r6, pc}
 8003132:	bf00      	nop
 8003134:	20002aac 	.word	0x20002aac
 8003138:	08003f9c 	.word	0x08003f9c
 800313c:	20002ab0 	.word	0x20002ab0

08003140 <prvSampleTimeNow>:
prvSampleTimeNow():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:522
{
 8003140:	b538      	push	{r3, r4, r5, lr}
 8003142:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:526
	xTimeNow = xTaskGetTickCount();
 8003144:	f7ff fb26 	bl	8002794 <xTaskGetTickCount>
 8003148:	4604      	mov	r4, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:528
	if( xTimeNow < xLastTime )
 800314a:	4b07      	ldr	r3, [pc, #28]	; (8003168 <prvSampleTimeNow+0x28>)
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	4283      	cmp	r3, r0
 8003150:	d805      	bhi.n	800315e <prvSampleTimeNow+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:535
		*pxTimerListsWereSwitched = pdFALSE;
 8003152:	2300      	movs	r3, #0
 8003154:	602b      	str	r3, [r5, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:538
	xLastTime = xTimeNow;
 8003156:	4b04      	ldr	r3, [pc, #16]	; (8003168 <prvSampleTimeNow+0x28>)
 8003158:	601c      	str	r4, [r3, #0]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:541
}
 800315a:	4620      	mov	r0, r4
 800315c:	bd38      	pop	{r3, r4, r5, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:530
		prvSwitchTimerLists();
 800315e:	f7ff ffb3 	bl	80030c8 <prvSwitchTimerLists>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:531
		*pxTimerListsWereSwitched = pdTRUE;
 8003162:	2301      	movs	r3, #1
 8003164:	602b      	str	r3, [r5, #0]
 8003166:	e7f6      	b.n	8003156 <prvSampleTimeNow+0x16>
 8003168:	20002adc 	.word	0x20002adc

0800316c <prvProcessExpiredTimer>:
prvProcessExpiredTimer():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:379
{
 800316c:	b570      	push	{r4, r5, r6, lr}
 800316e:	b082      	sub	sp, #8
 8003170:	4606      	mov	r6, r0
 8003172:	460d      	mov	r5, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:381
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 8003174:	4913      	ldr	r1, [pc, #76]	; (80031c4 <prvProcessExpiredTimer+0x58>)
 8003176:	6809      	ldr	r1, [r1, #0]
 8003178:	68c9      	ldr	r1, [r1, #12]
 800317a:	68cc      	ldr	r4, [r1, #12]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:385
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800317c:	1d20      	adds	r0, r4, #4
 800317e:	f7fe fdb9 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:390
	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 8003182:	69e1      	ldr	r1, [r4, #28]
 8003184:	2901      	cmp	r1, #1
 8003186:	d004      	beq.n	8003192 <prvProcessExpiredTimer+0x26>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:414
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8003188:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800318a:	4620      	mov	r0, r4
 800318c:	4798      	blx	r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:415
}
 800318e:	b002      	add	sp, #8
 8003190:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:395
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) == pdTRUE )
 8003192:	69a1      	ldr	r1, [r4, #24]
 8003194:	4633      	mov	r3, r6
 8003196:	462a      	mov	r2, r5
 8003198:	4431      	add	r1, r6
 800319a:	4620      	mov	r0, r4
 800319c:	f7ff fee2 	bl	8002f64 <prvInsertTimerInActiveList>
 80031a0:	2801      	cmp	r0, #1
 80031a2:	d1f1      	bne.n	8003188 <prvProcessExpiredTimer+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:399
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80031a4:	2100      	movs	r1, #0
 80031a6:	9100      	str	r1, [sp, #0]
 80031a8:	460b      	mov	r3, r1
 80031aa:	4632      	mov	r2, r6
 80031ac:	4620      	mov	r0, r4
 80031ae:	f7ff ff5f 	bl	8003070 <xTimerGenericCommand>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:400
			configASSERT( xResult );
 80031b2:	2800      	cmp	r0, #0
 80031b4:	d1e8      	bne.n	8003188 <prvProcessExpiredTimer+0x1c>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:400 (discriminator 1)
 80031b6:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80031ba:	4803      	ldr	r0, [pc, #12]	; (80031c8 <prvProcessExpiredTimer+0x5c>)
 80031bc:	f7fe f9d5 	bl	800156a <vAssertCalled>
 80031c0:	e7e2      	b.n	8003188 <prvProcessExpiredTimer+0x1c>
 80031c2:	bf00      	nop
 80031c4:	20002aac 	.word	0x20002aac
 80031c8:	08003f9c 	.word	0x08003f9c

080031cc <prvProcessTimerOrBlockTask>:
prvProcessTimerOrBlockTask():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:443
{
 80031cc:	b570      	push	{r4, r5, r6, lr}
 80031ce:	b082      	sub	sp, #8
 80031d0:	4606      	mov	r6, r0
 80031d2:	460c      	mov	r4, r1
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:447
	vTaskSuspendAll();
 80031d4:	f7ff fad6 	bl	8002784 <vTaskSuspendAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:454
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80031d8:	a801      	add	r0, sp, #4
 80031da:	f7ff ffb1 	bl	8003140 <prvSampleTimeNow>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:455
		if( xTimerListsWereSwitched == pdFALSE )
 80031de:	9b01      	ldr	r3, [sp, #4]
 80031e0:	b9c3      	cbnz	r3, 8003214 <prvProcessTimerOrBlockTask+0x48>
 80031e2:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:458
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80031e4:	b90c      	cbnz	r4, 80031ea <prvProcessTimerOrBlockTask+0x1e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:458 (discriminator 1)
 80031e6:	42b0      	cmp	r0, r6
 80031e8:	d20a      	bcs.n	8003200 <prvProcessTimerOrBlockTask+0x34>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:471
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80031ea:	4622      	mov	r2, r4
 80031ec:	1b71      	subs	r1, r6, r5
 80031ee:	4b0b      	ldr	r3, [pc, #44]	; (800321c <prvProcessTimerOrBlockTask+0x50>)
 80031f0:	6818      	ldr	r0, [r3, #0]
 80031f2:	f7ff f897 	bl	8002324 <vQueueWaitForMessageRestricted>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:473
				if( xTaskResumeAll() == pdFALSE )
 80031f6:	f7ff fb79 	bl	80028ec <xTaskResumeAll>
 80031fa:	b140      	cbz	r0, 800320e <prvProcessTimerOrBlockTask+0x42>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:492
}
 80031fc:	b002      	add	sp, #8
 80031fe:	bd70      	pop	{r4, r5, r6, pc}
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:460
				( void ) xTaskResumeAll();
 8003200:	f7ff fb74 	bl	80028ec <xTaskResumeAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:461
				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 8003204:	4629      	mov	r1, r5
 8003206:	4630      	mov	r0, r6
 8003208:	f7ff ffb0 	bl	800316c <prvProcessExpiredTimer>
 800320c:	e7f6      	b.n	80031fc <prvProcessTimerOrBlockTask+0x30>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:479
					portYIELD_WITHIN_API();
 800320e:	f7fe fb97 	bl	8001940 <vPortYield>
 8003212:	e7f3      	b.n	80031fc <prvProcessTimerOrBlockTask+0x30>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:489
			( void ) xTaskResumeAll();
 8003214:	f7ff fb6a 	bl	80028ec <xTaskResumeAll>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:492
}
 8003218:	e7f0      	b.n	80031fc <prvProcessTimerOrBlockTask+0x30>
 800321a:	bf00      	nop
 800321c:	20002ae0 	.word	0x20002ae0

08003220 <prvProcessReceivedCommands>:
prvProcessReceivedCommands():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:586
{
 8003220:	b530      	push	{r4, r5, lr}
 8003222:	b089      	sub	sp, #36	; 0x24
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:592
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8003224:	e002      	b.n	800322c <prvProcessReceivedCommands+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:618
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8003226:	9b04      	ldr	r3, [sp, #16]
 8003228:	2b00      	cmp	r3, #0
 800322a:	da10      	bge.n	800324e <prvProcessReceivedCommands+0x2e>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:592
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800322c:	2300      	movs	r3, #0
 800322e:	461a      	mov	r2, r3
 8003230:	a904      	add	r1, sp, #16
 8003232:	4835      	ldr	r0, [pc, #212]	; (8003308 <prvProcessReceivedCommands+0xe8>)
 8003234:	6800      	ldr	r0, [r0, #0]
 8003236:	f7fe ffb5 	bl	80021a4 <xQueueGenericReceive>
 800323a:	2800      	cmp	r0, #0
 800323c:	d061      	beq.n	8003302 <prvProcessReceivedCommands+0xe2>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:598
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800323e:	9b04      	ldr	r3, [sp, #16]
 8003240:	2b00      	cmp	r3, #0
 8003242:	daf0      	bge.n	8003226 <prvProcessReceivedCommands+0x6>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:607
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8003244:	9907      	ldr	r1, [sp, #28]
 8003246:	9806      	ldr	r0, [sp, #24]
 8003248:	9b05      	ldr	r3, [sp, #20]
 800324a:	4798      	blx	r3
 800324c:	e7eb      	b.n	8003226 <prvProcessReceivedCommands+0x6>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:622
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800324e:	9c06      	ldr	r4, [sp, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:624
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
 8003250:	6963      	ldr	r3, [r4, #20]
 8003252:	b113      	cbz	r3, 800325a <prvProcessReceivedCommands+0x3a>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:627
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8003254:	1d20      	adds	r0, r4, #4
 8003256:	f7fe fd4d 	bl	8001cf4 <uxListRemove>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:642
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800325a:	a803      	add	r0, sp, #12
 800325c:	f7ff ff70 	bl	8003140 <prvSampleTimeNow>
 8003260:	4605      	mov	r5, r0
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:644
			switch( xMessage.xMessageID )
 8003262:	9b04      	ldr	r3, [sp, #16]
 8003264:	2b09      	cmp	r3, #9
 8003266:	d8e1      	bhi.n	800322c <prvProcessReceivedCommands+0xc>
 8003268:	a201      	add	r2, pc, #4	; (adr r2, 8003270 <prvProcessReceivedCommands+0x50>)
 800326a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800326e:	bf00      	nop
 8003270:	08003299 	.word	0x08003299
 8003274:	08003299 	.word	0x08003299
 8003278:	08003299 	.word	0x08003299
 800327c:	0800322d 	.word	0x0800322d
 8003280:	080032d9 	.word	0x080032d9
 8003284:	080032fb 	.word	0x080032fb
 8003288:	08003299 	.word	0x08003299
 800328c:	08003299 	.word	0x08003299
 8003290:	0800322d 	.word	0x0800322d
 8003294:	080032d9 	.word	0x080032d9
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:652
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) == pdTRUE )
 8003298:	9b05      	ldr	r3, [sp, #20]
 800329a:	69a1      	ldr	r1, [r4, #24]
 800329c:	4602      	mov	r2, r0
 800329e:	4419      	add	r1, r3
 80032a0:	4620      	mov	r0, r4
 80032a2:	f7ff fe5f 	bl	8002f64 <prvInsertTimerInActiveList>
 80032a6:	2801      	cmp	r0, #1
 80032a8:	d1c0      	bne.n	800322c <prvProcessReceivedCommands+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:656
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80032aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80032ac:	4620      	mov	r0, r4
 80032ae:	4798      	blx	r3
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:659
						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 80032b0:	69e3      	ldr	r3, [r4, #28]
 80032b2:	2b01      	cmp	r3, #1
 80032b4:	d1ba      	bne.n	800322c <prvProcessReceivedCommands+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:661
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80032b6:	69a2      	ldr	r2, [r4, #24]
 80032b8:	2100      	movs	r1, #0
 80032ba:	9100      	str	r1, [sp, #0]
 80032bc:	460b      	mov	r3, r1
 80032be:	9805      	ldr	r0, [sp, #20]
 80032c0:	4402      	add	r2, r0
 80032c2:	4620      	mov	r0, r4
 80032c4:	f7ff fed4 	bl	8003070 <xTimerGenericCommand>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:662
							configASSERT( xResult );
 80032c8:	2800      	cmp	r0, #0
 80032ca:	d1af      	bne.n	800322c <prvProcessReceivedCommands+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:662 (discriminator 1)
 80032cc:	f240 2196 	movw	r1, #662	; 0x296
 80032d0:	480e      	ldr	r0, [pc, #56]	; (800330c <prvProcessReceivedCommands+0xec>)
 80032d2:	f7fe f94a 	bl	800156a <vAssertCalled>
 80032d6:	e7a9      	b.n	800322c <prvProcessReceivedCommands+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:684
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80032d8:	9b05      	ldr	r3, [sp, #20]
 80032da:	61a3      	str	r3, [r4, #24]
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:685
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80032dc:	b13b      	cbz	r3, 80032ee <prvProcessReceivedCommands+0xce>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:693
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80032de:	69a1      	ldr	r1, [r4, #24]
 80032e0:	462b      	mov	r3, r5
 80032e2:	462a      	mov	r2, r5
 80032e4:	4429      	add	r1, r5
 80032e6:	4620      	mov	r0, r4
 80032e8:	f7ff fe3c 	bl	8002f64 <prvInsertTimerInActiveList>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:694
					break;
 80032ec:	e79e      	b.n	800322c <prvProcessReceivedCommands+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:685 (discriminator 1)
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80032ee:	f240 21ad 	movw	r1, #685	; 0x2ad
 80032f2:	4806      	ldr	r0, [pc, #24]	; (800330c <prvProcessReceivedCommands+0xec>)
 80032f4:	f7fe f939 	bl	800156a <vAssertCalled>
 80032f8:	e7f1      	b.n	80032de <prvProcessReceivedCommands+0xbe>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:699
					vPortFree( pxTimer );
 80032fa:	4620      	mov	r0, r4
 80032fc:	f7fe face 	bl	800189c <vPortFree>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:700
					break;
 8003300:	e794      	b.n	800322c <prvProcessReceivedCommands+0xc>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:708
}
 8003302:	b009      	add	sp, #36	; 0x24
 8003304:	bd30      	pop	{r4, r5, pc}
 8003306:	bf00      	nop
 8003308:	20002ae0 	.word	0x20002ae0
 800330c:	08003f9c 	.word	0x08003f9c

08003310 <prvTimerTask>:
prvTimerTask():
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:419
{
 8003310:	b500      	push	{lr}
 8003312:	b083      	sub	sp, #12
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:430 (discriminator 1)
		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 8003314:	a801      	add	r0, sp, #4
 8003316:	f7ff fe15 	bl	8002f44 <prvGetNextExpireTime>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:434 (discriminator 1)
		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 800331a:	9901      	ldr	r1, [sp, #4]
 800331c:	f7ff ff56 	bl	80031cc <prvProcessTimerOrBlockTask>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:437 (discriminator 1)
		prvProcessReceivedCommands();
 8003320:	f7ff ff7e 	bl	8003220 <prvProcessReceivedCommands>
/home/vlad/Downloads/f407-disc-blink/Debug/../freertos/timers.c:426 (discriminator 1)
	for( ;; )
 8003324:	e7f6      	b.n	8003314 <prvTimerTask+0x4>
	...

08003328 <__errno>:
__errno():
 8003328:	4b01      	ldr	r3, [pc, #4]	; (8003330 <__errno+0x8>)
 800332a:	6818      	ldr	r0, [r3, #0]
 800332c:	4770      	bx	lr
 800332e:	bf00      	nop
 8003330:	20000028 	.word	0x20000028

08003334 <memcmp>:
memcmp():
 8003334:	b510      	push	{r4, lr}
 8003336:	3901      	subs	r1, #1
 8003338:	4402      	add	r2, r0
 800333a:	4290      	cmp	r0, r2
 800333c:	d101      	bne.n	8003342 <memcmp+0xe>
 800333e:	2000      	movs	r0, #0
 8003340:	e005      	b.n	800334e <memcmp+0x1a>
 8003342:	7803      	ldrb	r3, [r0, #0]
 8003344:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8003348:	42a3      	cmp	r3, r4
 800334a:	d001      	beq.n	8003350 <memcmp+0x1c>
 800334c:	1b18      	subs	r0, r3, r4
 800334e:	bd10      	pop	{r4, pc}
 8003350:	3001      	adds	r0, #1
 8003352:	e7f2      	b.n	800333a <memcmp+0x6>

08003354 <memcpy>:
memcpy():
 8003354:	440a      	add	r2, r1
 8003356:	4291      	cmp	r1, r2
 8003358:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 800335c:	d100      	bne.n	8003360 <memcpy+0xc>
 800335e:	4770      	bx	lr
 8003360:	b510      	push	{r4, lr}
 8003362:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003366:	f803 4f01 	strb.w	r4, [r3, #1]!
 800336a:	4291      	cmp	r1, r2
 800336c:	d1f9      	bne.n	8003362 <memcpy+0xe>
 800336e:	bd10      	pop	{r4, pc}

08003370 <memset>:
memset():
 8003370:	4402      	add	r2, r0
 8003372:	4603      	mov	r3, r0
 8003374:	4293      	cmp	r3, r2
 8003376:	d100      	bne.n	800337a <memset+0xa>
 8003378:	4770      	bx	lr
 800337a:	f803 1b01 	strb.w	r1, [r3], #1
 800337e:	e7f9      	b.n	8003374 <memset+0x4>

08003380 <strlen>:
strlen():
 8003380:	4603      	mov	r3, r0
 8003382:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003386:	2a00      	cmp	r2, #0
 8003388:	d1fb      	bne.n	8003382 <strlen+0x2>
 800338a:	1a18      	subs	r0, r3, r0
 800338c:	3801      	subs	r0, #1
 800338e:	4770      	bx	lr

08003390 <_vsniprintf_r>:
_vsnprintf_r():
 8003390:	b530      	push	{r4, r5, lr}
 8003392:	4614      	mov	r4, r2
 8003394:	2c00      	cmp	r4, #0
 8003396:	b09b      	sub	sp, #108	; 0x6c
 8003398:	4605      	mov	r5, r0
 800339a:	461a      	mov	r2, r3
 800339c:	da05      	bge.n	80033aa <_vsniprintf_r+0x1a>
 800339e:	238b      	movs	r3, #139	; 0x8b
 80033a0:	6003      	str	r3, [r0, #0]
 80033a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80033a6:	b01b      	add	sp, #108	; 0x6c
 80033a8:	bd30      	pop	{r4, r5, pc}
 80033aa:	f44f 7302 	mov.w	r3, #520	; 0x208
 80033ae:	f8ad 300c 	strh.w	r3, [sp, #12]
 80033b2:	bf14      	ite	ne
 80033b4:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
 80033b8:	4623      	moveq	r3, r4
 80033ba:	9302      	str	r3, [sp, #8]
 80033bc:	9305      	str	r3, [sp, #20]
 80033be:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80033c2:	9100      	str	r1, [sp, #0]
 80033c4:	9104      	str	r1, [sp, #16]
 80033c6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80033ca:	4669      	mov	r1, sp
 80033cc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80033ce:	f000 f875 	bl	80034bc <_svfiprintf_r>
 80033d2:	1c43      	adds	r3, r0, #1
 80033d4:	bfbc      	itt	lt
 80033d6:	238b      	movlt	r3, #139	; 0x8b
 80033d8:	602b      	strlt	r3, [r5, #0]
 80033da:	2c00      	cmp	r4, #0
 80033dc:	d0e3      	beq.n	80033a6 <_vsniprintf_r+0x16>
 80033de:	9b00      	ldr	r3, [sp, #0]
 80033e0:	2200      	movs	r2, #0
 80033e2:	701a      	strb	r2, [r3, #0]
 80033e4:	e7df      	b.n	80033a6 <_vsniprintf_r+0x16>
	...

080033e8 <vsniprintf>:
vsnprintf():
 80033e8:	b507      	push	{r0, r1, r2, lr}
 80033ea:	9300      	str	r3, [sp, #0]
 80033ec:	4613      	mov	r3, r2
 80033ee:	460a      	mov	r2, r1
 80033f0:	4601      	mov	r1, r0
 80033f2:	4803      	ldr	r0, [pc, #12]	; (8003400 <vsniprintf+0x18>)
 80033f4:	6800      	ldr	r0, [r0, #0]
 80033f6:	f7ff ffcb 	bl	8003390 <_vsniprintf_r>
 80033fa:	b003      	add	sp, #12
 80033fc:	f85d fb04 	ldr.w	pc, [sp], #4
 8003400:	20000028 	.word	0x20000028

08003404 <__ssputs_r>:
__ssputs_r():
 8003404:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003408:	688e      	ldr	r6, [r1, #8]
 800340a:	429e      	cmp	r6, r3
 800340c:	4682      	mov	sl, r0
 800340e:	460c      	mov	r4, r1
 8003410:	4690      	mov	r8, r2
 8003412:	461f      	mov	r7, r3
 8003414:	d838      	bhi.n	8003488 <__ssputs_r+0x84>
 8003416:	898a      	ldrh	r2, [r1, #12]
 8003418:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800341c:	d032      	beq.n	8003484 <__ssputs_r+0x80>
 800341e:	6825      	ldr	r5, [r4, #0]
 8003420:	6909      	ldr	r1, [r1, #16]
 8003422:	eba5 0901 	sub.w	r9, r5, r1
 8003426:	6965      	ldr	r5, [r4, #20]
 8003428:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800342c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003430:	3301      	adds	r3, #1
 8003432:	444b      	add	r3, r9
 8003434:	106d      	asrs	r5, r5, #1
 8003436:	429d      	cmp	r5, r3
 8003438:	bf38      	it	cc
 800343a:	461d      	movcc	r5, r3
 800343c:	0553      	lsls	r3, r2, #21
 800343e:	d531      	bpl.n	80034a4 <__ssputs_r+0xa0>
 8003440:	4629      	mov	r1, r5
 8003442:	f000 fb89 	bl	8003b58 <_malloc_r>
 8003446:	4606      	mov	r6, r0
 8003448:	b950      	cbnz	r0, 8003460 <__ssputs_r+0x5c>
 800344a:	230c      	movs	r3, #12
 800344c:	f8ca 3000 	str.w	r3, [sl]
 8003450:	89a3      	ldrh	r3, [r4, #12]
 8003452:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003456:	81a3      	strh	r3, [r4, #12]
 8003458:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800345c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003460:	6921      	ldr	r1, [r4, #16]
 8003462:	464a      	mov	r2, r9
 8003464:	f7ff ff76 	bl	8003354 <memcpy>
 8003468:	89a3      	ldrh	r3, [r4, #12]
 800346a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800346e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003472:	81a3      	strh	r3, [r4, #12]
 8003474:	6126      	str	r6, [r4, #16]
 8003476:	6165      	str	r5, [r4, #20]
 8003478:	444e      	add	r6, r9
 800347a:	eba5 0509 	sub.w	r5, r5, r9
 800347e:	6026      	str	r6, [r4, #0]
 8003480:	60a5      	str	r5, [r4, #8]
 8003482:	463e      	mov	r6, r7
 8003484:	42be      	cmp	r6, r7
 8003486:	d900      	bls.n	800348a <__ssputs_r+0x86>
 8003488:	463e      	mov	r6, r7
 800348a:	6820      	ldr	r0, [r4, #0]
 800348c:	4632      	mov	r2, r6
 800348e:	4641      	mov	r1, r8
 8003490:	f000 fafe 	bl	8003a90 <memmove>
 8003494:	68a3      	ldr	r3, [r4, #8]
 8003496:	1b9b      	subs	r3, r3, r6
 8003498:	60a3      	str	r3, [r4, #8]
 800349a:	6823      	ldr	r3, [r4, #0]
 800349c:	4433      	add	r3, r6
 800349e:	6023      	str	r3, [r4, #0]
 80034a0:	2000      	movs	r0, #0
 80034a2:	e7db      	b.n	800345c <__ssputs_r+0x58>
 80034a4:	462a      	mov	r2, r5
 80034a6:	f000 fbb1 	bl	8003c0c <_realloc_r>
 80034aa:	4606      	mov	r6, r0
 80034ac:	2800      	cmp	r0, #0
 80034ae:	d1e1      	bne.n	8003474 <__ssputs_r+0x70>
 80034b0:	6921      	ldr	r1, [r4, #16]
 80034b2:	4650      	mov	r0, sl
 80034b4:	f000 fb06 	bl	8003ac4 <_free_r>
 80034b8:	e7c7      	b.n	800344a <__ssputs_r+0x46>
	...

080034bc <_svfiprintf_r>:
_svfprintf_r():
 80034bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034c0:	4698      	mov	r8, r3
 80034c2:	898b      	ldrh	r3, [r1, #12]
 80034c4:	061b      	lsls	r3, r3, #24
 80034c6:	b09d      	sub	sp, #116	; 0x74
 80034c8:	4607      	mov	r7, r0
 80034ca:	460d      	mov	r5, r1
 80034cc:	4614      	mov	r4, r2
 80034ce:	d50e      	bpl.n	80034ee <_svfiprintf_r+0x32>
 80034d0:	690b      	ldr	r3, [r1, #16]
 80034d2:	b963      	cbnz	r3, 80034ee <_svfiprintf_r+0x32>
 80034d4:	2140      	movs	r1, #64	; 0x40
 80034d6:	f000 fb3f 	bl	8003b58 <_malloc_r>
 80034da:	6028      	str	r0, [r5, #0]
 80034dc:	6128      	str	r0, [r5, #16]
 80034de:	b920      	cbnz	r0, 80034ea <_svfiprintf_r+0x2e>
 80034e0:	230c      	movs	r3, #12
 80034e2:	603b      	str	r3, [r7, #0]
 80034e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80034e8:	e0d1      	b.n	800368e <_svfiprintf_r+0x1d2>
 80034ea:	2340      	movs	r3, #64	; 0x40
 80034ec:	616b      	str	r3, [r5, #20]
 80034ee:	2300      	movs	r3, #0
 80034f0:	9309      	str	r3, [sp, #36]	; 0x24
 80034f2:	2320      	movs	r3, #32
 80034f4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80034f8:	f8cd 800c 	str.w	r8, [sp, #12]
 80034fc:	2330      	movs	r3, #48	; 0x30
 80034fe:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 80036a8 <_svfiprintf_r+0x1ec>
 8003502:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003506:	f04f 0901 	mov.w	r9, #1
 800350a:	4623      	mov	r3, r4
 800350c:	469a      	mov	sl, r3
 800350e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003512:	b10a      	cbz	r2, 8003518 <_svfiprintf_r+0x5c>
 8003514:	2a25      	cmp	r2, #37	; 0x25
 8003516:	d1f9      	bne.n	800350c <_svfiprintf_r+0x50>
 8003518:	ebba 0b04 	subs.w	fp, sl, r4
 800351c:	d00b      	beq.n	8003536 <_svfiprintf_r+0x7a>
 800351e:	465b      	mov	r3, fp
 8003520:	4622      	mov	r2, r4
 8003522:	4629      	mov	r1, r5
 8003524:	4638      	mov	r0, r7
 8003526:	f7ff ff6d 	bl	8003404 <__ssputs_r>
 800352a:	3001      	adds	r0, #1
 800352c:	f000 80aa 	beq.w	8003684 <_svfiprintf_r+0x1c8>
 8003530:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003532:	445a      	add	r2, fp
 8003534:	9209      	str	r2, [sp, #36]	; 0x24
 8003536:	f89a 3000 	ldrb.w	r3, [sl]
 800353a:	2b00      	cmp	r3, #0
 800353c:	f000 80a2 	beq.w	8003684 <_svfiprintf_r+0x1c8>
 8003540:	2300      	movs	r3, #0
 8003542:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003546:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800354a:	f10a 0a01 	add.w	sl, sl, #1
 800354e:	9304      	str	r3, [sp, #16]
 8003550:	9307      	str	r3, [sp, #28]
 8003552:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003556:	931a      	str	r3, [sp, #104]	; 0x68
 8003558:	4654      	mov	r4, sl
 800355a:	2205      	movs	r2, #5
 800355c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003560:	4851      	ldr	r0, [pc, #324]	; (80036a8 <_svfiprintf_r+0x1ec>)
 8003562:	f000 fa45 	bl	80039f0 <memchr>
 8003566:	9a04      	ldr	r2, [sp, #16]
 8003568:	b9d8      	cbnz	r0, 80035a2 <_svfiprintf_r+0xe6>
 800356a:	06d0      	lsls	r0, r2, #27
 800356c:	bf44      	itt	mi
 800356e:	2320      	movmi	r3, #32
 8003570:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003574:	0711      	lsls	r1, r2, #28
 8003576:	bf44      	itt	mi
 8003578:	232b      	movmi	r3, #43	; 0x2b
 800357a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800357e:	f89a 3000 	ldrb.w	r3, [sl]
 8003582:	2b2a      	cmp	r3, #42	; 0x2a
 8003584:	d015      	beq.n	80035b2 <_svfiprintf_r+0xf6>
 8003586:	9a07      	ldr	r2, [sp, #28]
 8003588:	4654      	mov	r4, sl
 800358a:	2000      	movs	r0, #0
 800358c:	f04f 0c0a 	mov.w	ip, #10
 8003590:	4621      	mov	r1, r4
 8003592:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003596:	3b30      	subs	r3, #48	; 0x30
 8003598:	2b09      	cmp	r3, #9
 800359a:	d94e      	bls.n	800363a <_svfiprintf_r+0x17e>
 800359c:	b1b0      	cbz	r0, 80035cc <_svfiprintf_r+0x110>
 800359e:	9207      	str	r2, [sp, #28]
 80035a0:	e014      	b.n	80035cc <_svfiprintf_r+0x110>
 80035a2:	eba0 0308 	sub.w	r3, r0, r8
 80035a6:	fa09 f303 	lsl.w	r3, r9, r3
 80035aa:	4313      	orrs	r3, r2
 80035ac:	9304      	str	r3, [sp, #16]
 80035ae:	46a2      	mov	sl, r4
 80035b0:	e7d2      	b.n	8003558 <_svfiprintf_r+0x9c>
 80035b2:	9b03      	ldr	r3, [sp, #12]
 80035b4:	1d19      	adds	r1, r3, #4
 80035b6:	681b      	ldr	r3, [r3, #0]
 80035b8:	9103      	str	r1, [sp, #12]
 80035ba:	2b00      	cmp	r3, #0
 80035bc:	bfbb      	ittet	lt
 80035be:	425b      	neglt	r3, r3
 80035c0:	f042 0202 	orrlt.w	r2, r2, #2
 80035c4:	9307      	strge	r3, [sp, #28]
 80035c6:	9307      	strlt	r3, [sp, #28]
 80035c8:	bfb8      	it	lt
 80035ca:	9204      	strlt	r2, [sp, #16]
 80035cc:	7823      	ldrb	r3, [r4, #0]
 80035ce:	2b2e      	cmp	r3, #46	; 0x2e
 80035d0:	d10c      	bne.n	80035ec <_svfiprintf_r+0x130>
 80035d2:	7863      	ldrb	r3, [r4, #1]
 80035d4:	2b2a      	cmp	r3, #42	; 0x2a
 80035d6:	d135      	bne.n	8003644 <_svfiprintf_r+0x188>
 80035d8:	9b03      	ldr	r3, [sp, #12]
 80035da:	1d1a      	adds	r2, r3, #4
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	9203      	str	r2, [sp, #12]
 80035e0:	2b00      	cmp	r3, #0
 80035e2:	bfb8      	it	lt
 80035e4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80035e8:	3402      	adds	r4, #2
 80035ea:	9305      	str	r3, [sp, #20]
 80035ec:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 80036ac <_svfiprintf_r+0x1f0>
 80035f0:	7821      	ldrb	r1, [r4, #0]
 80035f2:	2203      	movs	r2, #3
 80035f4:	4650      	mov	r0, sl
 80035f6:	f000 f9fb 	bl	80039f0 <memchr>
 80035fa:	b140      	cbz	r0, 800360e <_svfiprintf_r+0x152>
 80035fc:	2340      	movs	r3, #64	; 0x40
 80035fe:	eba0 000a 	sub.w	r0, r0, sl
 8003602:	fa03 f000 	lsl.w	r0, r3, r0
 8003606:	9b04      	ldr	r3, [sp, #16]
 8003608:	4303      	orrs	r3, r0
 800360a:	3401      	adds	r4, #1
 800360c:	9304      	str	r3, [sp, #16]
 800360e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003612:	4827      	ldr	r0, [pc, #156]	; (80036b0 <_svfiprintf_r+0x1f4>)
 8003614:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003618:	2206      	movs	r2, #6
 800361a:	f000 f9e9 	bl	80039f0 <memchr>
 800361e:	2800      	cmp	r0, #0
 8003620:	d038      	beq.n	8003694 <_svfiprintf_r+0x1d8>
 8003622:	4b24      	ldr	r3, [pc, #144]	; (80036b4 <_svfiprintf_r+0x1f8>)
 8003624:	bb1b      	cbnz	r3, 800366e <_svfiprintf_r+0x1b2>
 8003626:	9b03      	ldr	r3, [sp, #12]
 8003628:	3307      	adds	r3, #7
 800362a:	f023 0307 	bic.w	r3, r3, #7
 800362e:	3308      	adds	r3, #8
 8003630:	9303      	str	r3, [sp, #12]
 8003632:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003634:	4433      	add	r3, r6
 8003636:	9309      	str	r3, [sp, #36]	; 0x24
 8003638:	e767      	b.n	800350a <_svfiprintf_r+0x4e>
 800363a:	fb0c 3202 	mla	r2, ip, r2, r3
 800363e:	460c      	mov	r4, r1
 8003640:	2001      	movs	r0, #1
 8003642:	e7a5      	b.n	8003590 <_svfiprintf_r+0xd4>
 8003644:	2300      	movs	r3, #0
 8003646:	3401      	adds	r4, #1
 8003648:	9305      	str	r3, [sp, #20]
 800364a:	4619      	mov	r1, r3
 800364c:	f04f 0c0a 	mov.w	ip, #10
 8003650:	4620      	mov	r0, r4
 8003652:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003656:	3a30      	subs	r2, #48	; 0x30
 8003658:	2a09      	cmp	r2, #9
 800365a:	d903      	bls.n	8003664 <_svfiprintf_r+0x1a8>
 800365c:	2b00      	cmp	r3, #0
 800365e:	d0c5      	beq.n	80035ec <_svfiprintf_r+0x130>
 8003660:	9105      	str	r1, [sp, #20]
 8003662:	e7c3      	b.n	80035ec <_svfiprintf_r+0x130>
 8003664:	fb0c 2101 	mla	r1, ip, r1, r2
 8003668:	4604      	mov	r4, r0
 800366a:	2301      	movs	r3, #1
 800366c:	e7f0      	b.n	8003650 <_svfiprintf_r+0x194>
 800366e:	ab03      	add	r3, sp, #12
 8003670:	9300      	str	r3, [sp, #0]
 8003672:	462a      	mov	r2, r5
 8003674:	4b10      	ldr	r3, [pc, #64]	; (80036b8 <_svfiprintf_r+0x1fc>)
 8003676:	a904      	add	r1, sp, #16
 8003678:	4638      	mov	r0, r7
 800367a:	f3af 8000 	nop.w
 800367e:	1c42      	adds	r2, r0, #1
 8003680:	4606      	mov	r6, r0
 8003682:	d1d6      	bne.n	8003632 <_svfiprintf_r+0x176>
 8003684:	89ab      	ldrh	r3, [r5, #12]
 8003686:	065b      	lsls	r3, r3, #25
 8003688:	f53f af2c 	bmi.w	80034e4 <_svfiprintf_r+0x28>
 800368c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800368e:	b01d      	add	sp, #116	; 0x74
 8003690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003694:	ab03      	add	r3, sp, #12
 8003696:	9300      	str	r3, [sp, #0]
 8003698:	462a      	mov	r2, r5
 800369a:	4b07      	ldr	r3, [pc, #28]	; (80036b8 <_svfiprintf_r+0x1fc>)
 800369c:	a904      	add	r1, sp, #16
 800369e:	4638      	mov	r0, r7
 80036a0:	f000 f87a 	bl	8003798 <_printf_i>
 80036a4:	e7eb      	b.n	800367e <_svfiprintf_r+0x1c2>
 80036a6:	bf00      	nop
 80036a8:	08003fc4 	.word	0x08003fc4
 80036ac:	08003fca 	.word	0x08003fca
 80036b0:	08003fce 	.word	0x08003fce
 80036b4:	00000000 	.word	0x00000000
 80036b8:	08003405 	.word	0x08003405

080036bc <_printf_common>:
_printf_common():
 80036bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80036c0:	4616      	mov	r6, r2
 80036c2:	4699      	mov	r9, r3
 80036c4:	688a      	ldr	r2, [r1, #8]
 80036c6:	690b      	ldr	r3, [r1, #16]
 80036c8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80036cc:	4293      	cmp	r3, r2
 80036ce:	bfb8      	it	lt
 80036d0:	4613      	movlt	r3, r2
 80036d2:	6033      	str	r3, [r6, #0]
 80036d4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80036d8:	4607      	mov	r7, r0
 80036da:	460c      	mov	r4, r1
 80036dc:	b10a      	cbz	r2, 80036e2 <_printf_common+0x26>
 80036de:	3301      	adds	r3, #1
 80036e0:	6033      	str	r3, [r6, #0]
 80036e2:	6823      	ldr	r3, [r4, #0]
 80036e4:	0699      	lsls	r1, r3, #26
 80036e6:	bf42      	ittt	mi
 80036e8:	6833      	ldrmi	r3, [r6, #0]
 80036ea:	3302      	addmi	r3, #2
 80036ec:	6033      	strmi	r3, [r6, #0]
 80036ee:	6825      	ldr	r5, [r4, #0]
 80036f0:	f015 0506 	ands.w	r5, r5, #6
 80036f4:	d106      	bne.n	8003704 <_printf_common+0x48>
 80036f6:	f104 0a19 	add.w	sl, r4, #25
 80036fa:	68e3      	ldr	r3, [r4, #12]
 80036fc:	6832      	ldr	r2, [r6, #0]
 80036fe:	1a9b      	subs	r3, r3, r2
 8003700:	42ab      	cmp	r3, r5
 8003702:	dc26      	bgt.n	8003752 <_printf_common+0x96>
 8003704:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003708:	1e13      	subs	r3, r2, #0
 800370a:	6822      	ldr	r2, [r4, #0]
 800370c:	bf18      	it	ne
 800370e:	2301      	movne	r3, #1
 8003710:	0692      	lsls	r2, r2, #26
 8003712:	d42b      	bmi.n	800376c <_printf_common+0xb0>
 8003714:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003718:	4649      	mov	r1, r9
 800371a:	4638      	mov	r0, r7
 800371c:	47c0      	blx	r8
 800371e:	3001      	adds	r0, #1
 8003720:	d01e      	beq.n	8003760 <_printf_common+0xa4>
 8003722:	6823      	ldr	r3, [r4, #0]
 8003724:	68e5      	ldr	r5, [r4, #12]
 8003726:	6832      	ldr	r2, [r6, #0]
 8003728:	f003 0306 	and.w	r3, r3, #6
 800372c:	2b04      	cmp	r3, #4
 800372e:	bf08      	it	eq
 8003730:	1aad      	subeq	r5, r5, r2
 8003732:	68a3      	ldr	r3, [r4, #8]
 8003734:	6922      	ldr	r2, [r4, #16]
 8003736:	bf0c      	ite	eq
 8003738:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800373c:	2500      	movne	r5, #0
 800373e:	4293      	cmp	r3, r2
 8003740:	bfc4      	itt	gt
 8003742:	1a9b      	subgt	r3, r3, r2
 8003744:	18ed      	addgt	r5, r5, r3
 8003746:	2600      	movs	r6, #0
 8003748:	341a      	adds	r4, #26
 800374a:	42b5      	cmp	r5, r6
 800374c:	d11a      	bne.n	8003784 <_printf_common+0xc8>
 800374e:	2000      	movs	r0, #0
 8003750:	e008      	b.n	8003764 <_printf_common+0xa8>
 8003752:	2301      	movs	r3, #1
 8003754:	4652      	mov	r2, sl
 8003756:	4649      	mov	r1, r9
 8003758:	4638      	mov	r0, r7
 800375a:	47c0      	blx	r8
 800375c:	3001      	adds	r0, #1
 800375e:	d103      	bne.n	8003768 <_printf_common+0xac>
 8003760:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003764:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003768:	3501      	adds	r5, #1
 800376a:	e7c6      	b.n	80036fa <_printf_common+0x3e>
 800376c:	18e1      	adds	r1, r4, r3
 800376e:	1c5a      	adds	r2, r3, #1
 8003770:	2030      	movs	r0, #48	; 0x30
 8003772:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003776:	4422      	add	r2, r4
 8003778:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800377c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003780:	3302      	adds	r3, #2
 8003782:	e7c7      	b.n	8003714 <_printf_common+0x58>
 8003784:	2301      	movs	r3, #1
 8003786:	4622      	mov	r2, r4
 8003788:	4649      	mov	r1, r9
 800378a:	4638      	mov	r0, r7
 800378c:	47c0      	blx	r8
 800378e:	3001      	adds	r0, #1
 8003790:	d0e6      	beq.n	8003760 <_printf_common+0xa4>
 8003792:	3601      	adds	r6, #1
 8003794:	e7d9      	b.n	800374a <_printf_common+0x8e>
	...

08003798 <_printf_i>:
_printf_i():
 8003798:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800379c:	7e0f      	ldrb	r7, [r1, #24]
 800379e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80037a0:	2f78      	cmp	r7, #120	; 0x78
 80037a2:	4691      	mov	r9, r2
 80037a4:	4680      	mov	r8, r0
 80037a6:	460c      	mov	r4, r1
 80037a8:	469a      	mov	sl, r3
 80037aa:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80037ae:	d807      	bhi.n	80037c0 <_printf_i+0x28>
 80037b0:	2f62      	cmp	r7, #98	; 0x62
 80037b2:	d80a      	bhi.n	80037ca <_printf_i+0x32>
 80037b4:	2f00      	cmp	r7, #0
 80037b6:	f000 80d8 	beq.w	800396a <_printf_i+0x1d2>
 80037ba:	2f58      	cmp	r7, #88	; 0x58
 80037bc:	f000 80a3 	beq.w	8003906 <_printf_i+0x16e>
 80037c0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80037c4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80037c8:	e03a      	b.n	8003840 <_printf_i+0xa8>
 80037ca:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80037ce:	2b15      	cmp	r3, #21
 80037d0:	d8f6      	bhi.n	80037c0 <_printf_i+0x28>
 80037d2:	a101      	add	r1, pc, #4	; (adr r1, 80037d8 <_printf_i+0x40>)
 80037d4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80037d8:	08003831 	.word	0x08003831
 80037dc:	08003845 	.word	0x08003845
 80037e0:	080037c1 	.word	0x080037c1
 80037e4:	080037c1 	.word	0x080037c1
 80037e8:	080037c1 	.word	0x080037c1
 80037ec:	080037c1 	.word	0x080037c1
 80037f0:	08003845 	.word	0x08003845
 80037f4:	080037c1 	.word	0x080037c1
 80037f8:	080037c1 	.word	0x080037c1
 80037fc:	080037c1 	.word	0x080037c1
 8003800:	080037c1 	.word	0x080037c1
 8003804:	08003951 	.word	0x08003951
 8003808:	08003875 	.word	0x08003875
 800380c:	08003933 	.word	0x08003933
 8003810:	080037c1 	.word	0x080037c1
 8003814:	080037c1 	.word	0x080037c1
 8003818:	08003973 	.word	0x08003973
 800381c:	080037c1 	.word	0x080037c1
 8003820:	08003875 	.word	0x08003875
 8003824:	080037c1 	.word	0x080037c1
 8003828:	080037c1 	.word	0x080037c1
 800382c:	0800393b 	.word	0x0800393b
 8003830:	682b      	ldr	r3, [r5, #0]
 8003832:	1d1a      	adds	r2, r3, #4
 8003834:	681b      	ldr	r3, [r3, #0]
 8003836:	602a      	str	r2, [r5, #0]
 8003838:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800383c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003840:	2301      	movs	r3, #1
 8003842:	e0a3      	b.n	800398c <_printf_i+0x1f4>
 8003844:	6820      	ldr	r0, [r4, #0]
 8003846:	6829      	ldr	r1, [r5, #0]
 8003848:	0606      	lsls	r6, r0, #24
 800384a:	f101 0304 	add.w	r3, r1, #4
 800384e:	d50a      	bpl.n	8003866 <_printf_i+0xce>
 8003850:	680e      	ldr	r6, [r1, #0]
 8003852:	602b      	str	r3, [r5, #0]
 8003854:	2e00      	cmp	r6, #0
 8003856:	da03      	bge.n	8003860 <_printf_i+0xc8>
 8003858:	232d      	movs	r3, #45	; 0x2d
 800385a:	4276      	negs	r6, r6
 800385c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003860:	485e      	ldr	r0, [pc, #376]	; (80039dc <_printf_i+0x244>)
 8003862:	230a      	movs	r3, #10
 8003864:	e019      	b.n	800389a <_printf_i+0x102>
 8003866:	680e      	ldr	r6, [r1, #0]
 8003868:	602b      	str	r3, [r5, #0]
 800386a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800386e:	bf18      	it	ne
 8003870:	b236      	sxthne	r6, r6
 8003872:	e7ef      	b.n	8003854 <_printf_i+0xbc>
 8003874:	682b      	ldr	r3, [r5, #0]
 8003876:	6820      	ldr	r0, [r4, #0]
 8003878:	1d19      	adds	r1, r3, #4
 800387a:	6029      	str	r1, [r5, #0]
 800387c:	0601      	lsls	r1, r0, #24
 800387e:	d501      	bpl.n	8003884 <_printf_i+0xec>
 8003880:	681e      	ldr	r6, [r3, #0]
 8003882:	e002      	b.n	800388a <_printf_i+0xf2>
 8003884:	0646      	lsls	r6, r0, #25
 8003886:	d5fb      	bpl.n	8003880 <_printf_i+0xe8>
 8003888:	881e      	ldrh	r6, [r3, #0]
 800388a:	4854      	ldr	r0, [pc, #336]	; (80039dc <_printf_i+0x244>)
 800388c:	2f6f      	cmp	r7, #111	; 0x6f
 800388e:	bf0c      	ite	eq
 8003890:	2308      	moveq	r3, #8
 8003892:	230a      	movne	r3, #10
 8003894:	2100      	movs	r1, #0
 8003896:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800389a:	6865      	ldr	r5, [r4, #4]
 800389c:	60a5      	str	r5, [r4, #8]
 800389e:	2d00      	cmp	r5, #0
 80038a0:	bfa2      	ittt	ge
 80038a2:	6821      	ldrge	r1, [r4, #0]
 80038a4:	f021 0104 	bicge.w	r1, r1, #4
 80038a8:	6021      	strge	r1, [r4, #0]
 80038aa:	b90e      	cbnz	r6, 80038b0 <_printf_i+0x118>
 80038ac:	2d00      	cmp	r5, #0
 80038ae:	d04d      	beq.n	800394c <_printf_i+0x1b4>
 80038b0:	4615      	mov	r5, r2
 80038b2:	fbb6 f1f3 	udiv	r1, r6, r3
 80038b6:	fb03 6711 	mls	r7, r3, r1, r6
 80038ba:	5dc7      	ldrb	r7, [r0, r7]
 80038bc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80038c0:	4637      	mov	r7, r6
 80038c2:	42bb      	cmp	r3, r7
 80038c4:	460e      	mov	r6, r1
 80038c6:	d9f4      	bls.n	80038b2 <_printf_i+0x11a>
 80038c8:	2b08      	cmp	r3, #8
 80038ca:	d10b      	bne.n	80038e4 <_printf_i+0x14c>
 80038cc:	6823      	ldr	r3, [r4, #0]
 80038ce:	07de      	lsls	r6, r3, #31
 80038d0:	d508      	bpl.n	80038e4 <_printf_i+0x14c>
 80038d2:	6923      	ldr	r3, [r4, #16]
 80038d4:	6861      	ldr	r1, [r4, #4]
 80038d6:	4299      	cmp	r1, r3
 80038d8:	bfde      	ittt	le
 80038da:	2330      	movle	r3, #48	; 0x30
 80038dc:	f805 3c01 	strble.w	r3, [r5, #-1]
 80038e0:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80038e4:	1b52      	subs	r2, r2, r5
 80038e6:	6122      	str	r2, [r4, #16]
 80038e8:	f8cd a000 	str.w	sl, [sp]
 80038ec:	464b      	mov	r3, r9
 80038ee:	aa03      	add	r2, sp, #12
 80038f0:	4621      	mov	r1, r4
 80038f2:	4640      	mov	r0, r8
 80038f4:	f7ff fee2 	bl	80036bc <_printf_common>
 80038f8:	3001      	adds	r0, #1
 80038fa:	d14c      	bne.n	8003996 <_printf_i+0x1fe>
 80038fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003900:	b004      	add	sp, #16
 8003902:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003906:	4835      	ldr	r0, [pc, #212]	; (80039dc <_printf_i+0x244>)
 8003908:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800390c:	6829      	ldr	r1, [r5, #0]
 800390e:	6823      	ldr	r3, [r4, #0]
 8003910:	f851 6b04 	ldr.w	r6, [r1], #4
 8003914:	6029      	str	r1, [r5, #0]
 8003916:	061d      	lsls	r5, r3, #24
 8003918:	d514      	bpl.n	8003944 <_printf_i+0x1ac>
 800391a:	07df      	lsls	r7, r3, #31
 800391c:	bf44      	itt	mi
 800391e:	f043 0320 	orrmi.w	r3, r3, #32
 8003922:	6023      	strmi	r3, [r4, #0]
 8003924:	b91e      	cbnz	r6, 800392e <_printf_i+0x196>
 8003926:	6823      	ldr	r3, [r4, #0]
 8003928:	f023 0320 	bic.w	r3, r3, #32
 800392c:	6023      	str	r3, [r4, #0]
 800392e:	2310      	movs	r3, #16
 8003930:	e7b0      	b.n	8003894 <_printf_i+0xfc>
 8003932:	6823      	ldr	r3, [r4, #0]
 8003934:	f043 0320 	orr.w	r3, r3, #32
 8003938:	6023      	str	r3, [r4, #0]
 800393a:	2378      	movs	r3, #120	; 0x78
 800393c:	4828      	ldr	r0, [pc, #160]	; (80039e0 <_printf_i+0x248>)
 800393e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003942:	e7e3      	b.n	800390c <_printf_i+0x174>
 8003944:	0659      	lsls	r1, r3, #25
 8003946:	bf48      	it	mi
 8003948:	b2b6      	uxthmi	r6, r6
 800394a:	e7e6      	b.n	800391a <_printf_i+0x182>
 800394c:	4615      	mov	r5, r2
 800394e:	e7bb      	b.n	80038c8 <_printf_i+0x130>
 8003950:	682b      	ldr	r3, [r5, #0]
 8003952:	6826      	ldr	r6, [r4, #0]
 8003954:	6961      	ldr	r1, [r4, #20]
 8003956:	1d18      	adds	r0, r3, #4
 8003958:	6028      	str	r0, [r5, #0]
 800395a:	0635      	lsls	r5, r6, #24
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	d501      	bpl.n	8003964 <_printf_i+0x1cc>
 8003960:	6019      	str	r1, [r3, #0]
 8003962:	e002      	b.n	800396a <_printf_i+0x1d2>
 8003964:	0670      	lsls	r0, r6, #25
 8003966:	d5fb      	bpl.n	8003960 <_printf_i+0x1c8>
 8003968:	8019      	strh	r1, [r3, #0]
 800396a:	2300      	movs	r3, #0
 800396c:	6123      	str	r3, [r4, #16]
 800396e:	4615      	mov	r5, r2
 8003970:	e7ba      	b.n	80038e8 <_printf_i+0x150>
 8003972:	682b      	ldr	r3, [r5, #0]
 8003974:	1d1a      	adds	r2, r3, #4
 8003976:	602a      	str	r2, [r5, #0]
 8003978:	681d      	ldr	r5, [r3, #0]
 800397a:	6862      	ldr	r2, [r4, #4]
 800397c:	2100      	movs	r1, #0
 800397e:	4628      	mov	r0, r5
 8003980:	f000 f836 	bl	80039f0 <memchr>
 8003984:	b108      	cbz	r0, 800398a <_printf_i+0x1f2>
 8003986:	1b40      	subs	r0, r0, r5
 8003988:	6060      	str	r0, [r4, #4]
 800398a:	6863      	ldr	r3, [r4, #4]
 800398c:	6123      	str	r3, [r4, #16]
 800398e:	2300      	movs	r3, #0
 8003990:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003994:	e7a8      	b.n	80038e8 <_printf_i+0x150>
 8003996:	6923      	ldr	r3, [r4, #16]
 8003998:	462a      	mov	r2, r5
 800399a:	4649      	mov	r1, r9
 800399c:	4640      	mov	r0, r8
 800399e:	47d0      	blx	sl
 80039a0:	3001      	adds	r0, #1
 80039a2:	d0ab      	beq.n	80038fc <_printf_i+0x164>
 80039a4:	6823      	ldr	r3, [r4, #0]
 80039a6:	079b      	lsls	r3, r3, #30
 80039a8:	d413      	bmi.n	80039d2 <_printf_i+0x23a>
 80039aa:	68e0      	ldr	r0, [r4, #12]
 80039ac:	9b03      	ldr	r3, [sp, #12]
 80039ae:	4298      	cmp	r0, r3
 80039b0:	bfb8      	it	lt
 80039b2:	4618      	movlt	r0, r3
 80039b4:	e7a4      	b.n	8003900 <_printf_i+0x168>
 80039b6:	2301      	movs	r3, #1
 80039b8:	4632      	mov	r2, r6
 80039ba:	4649      	mov	r1, r9
 80039bc:	4640      	mov	r0, r8
 80039be:	47d0      	blx	sl
 80039c0:	3001      	adds	r0, #1
 80039c2:	d09b      	beq.n	80038fc <_printf_i+0x164>
 80039c4:	3501      	adds	r5, #1
 80039c6:	68e3      	ldr	r3, [r4, #12]
 80039c8:	9903      	ldr	r1, [sp, #12]
 80039ca:	1a5b      	subs	r3, r3, r1
 80039cc:	42ab      	cmp	r3, r5
 80039ce:	dcf2      	bgt.n	80039b6 <_printf_i+0x21e>
 80039d0:	e7eb      	b.n	80039aa <_printf_i+0x212>
 80039d2:	2500      	movs	r5, #0
 80039d4:	f104 0619 	add.w	r6, r4, #25
 80039d8:	e7f5      	b.n	80039c6 <_printf_i+0x22e>
 80039da:	bf00      	nop
 80039dc:	08003fd5 	.word	0x08003fd5
 80039e0:	08003fe6 	.word	0x08003fe6
	...

080039f0 <memchr>:
memchr():
 80039f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80039f4:	2a10      	cmp	r2, #16
 80039f6:	db2b      	blt.n	8003a50 <memchr+0x60>
 80039f8:	f010 0f07 	tst.w	r0, #7
 80039fc:	d008      	beq.n	8003a10 <memchr+0x20>
 80039fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8003a02:	3a01      	subs	r2, #1
 8003a04:	428b      	cmp	r3, r1
 8003a06:	d02d      	beq.n	8003a64 <memchr+0x74>
 8003a08:	f010 0f07 	tst.w	r0, #7
 8003a0c:	b342      	cbz	r2, 8003a60 <memchr+0x70>
 8003a0e:	d1f6      	bne.n	80039fe <memchr+0xe>
 8003a10:	b4f0      	push	{r4, r5, r6, r7}
 8003a12:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8003a16:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8003a1a:	f022 0407 	bic.w	r4, r2, #7
 8003a1e:	f07f 0700 	mvns.w	r7, #0
 8003a22:	2300      	movs	r3, #0
 8003a24:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8003a28:	3c08      	subs	r4, #8
 8003a2a:	ea85 0501 	eor.w	r5, r5, r1
 8003a2e:	ea86 0601 	eor.w	r6, r6, r1
 8003a32:	fa85 f547 	uadd8	r5, r5, r7
 8003a36:	faa3 f587 	sel	r5, r3, r7
 8003a3a:	fa86 f647 	uadd8	r6, r6, r7
 8003a3e:	faa5 f687 	sel	r6, r5, r7
 8003a42:	b98e      	cbnz	r6, 8003a68 <memchr+0x78>
 8003a44:	d1ee      	bne.n	8003a24 <memchr+0x34>
 8003a46:	bcf0      	pop	{r4, r5, r6, r7}
 8003a48:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8003a4c:	f002 0207 	and.w	r2, r2, #7
 8003a50:	b132      	cbz	r2, 8003a60 <memchr+0x70>
 8003a52:	f810 3b01 	ldrb.w	r3, [r0], #1
 8003a56:	3a01      	subs	r2, #1
 8003a58:	ea83 0301 	eor.w	r3, r3, r1
 8003a5c:	b113      	cbz	r3, 8003a64 <memchr+0x74>
 8003a5e:	d1f8      	bne.n	8003a52 <memchr+0x62>
 8003a60:	2000      	movs	r0, #0
 8003a62:	4770      	bx	lr
 8003a64:	3801      	subs	r0, #1
 8003a66:	4770      	bx	lr
 8003a68:	2d00      	cmp	r5, #0
 8003a6a:	bf06      	itte	eq
 8003a6c:	4635      	moveq	r5, r6
 8003a6e:	3803      	subeq	r0, #3
 8003a70:	3807      	subne	r0, #7
 8003a72:	f015 0f01 	tst.w	r5, #1
 8003a76:	d107      	bne.n	8003a88 <memchr+0x98>
 8003a78:	3001      	adds	r0, #1
 8003a7a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8003a7e:	bf02      	ittt	eq
 8003a80:	3001      	addeq	r0, #1
 8003a82:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8003a86:	3001      	addeq	r0, #1
 8003a88:	bcf0      	pop	{r4, r5, r6, r7}
 8003a8a:	3801      	subs	r0, #1
 8003a8c:	4770      	bx	lr
 8003a8e:	bf00      	nop

08003a90 <memmove>:
memmove():
 8003a90:	4288      	cmp	r0, r1
 8003a92:	b510      	push	{r4, lr}
 8003a94:	eb01 0402 	add.w	r4, r1, r2
 8003a98:	d902      	bls.n	8003aa0 <memmove+0x10>
 8003a9a:	4284      	cmp	r4, r0
 8003a9c:	4623      	mov	r3, r4
 8003a9e:	d807      	bhi.n	8003ab0 <memmove+0x20>
 8003aa0:	1e43      	subs	r3, r0, #1
 8003aa2:	42a1      	cmp	r1, r4
 8003aa4:	d008      	beq.n	8003ab8 <memmove+0x28>
 8003aa6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003aaa:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003aae:	e7f8      	b.n	8003aa2 <memmove+0x12>
 8003ab0:	4402      	add	r2, r0
 8003ab2:	4601      	mov	r1, r0
 8003ab4:	428a      	cmp	r2, r1
 8003ab6:	d100      	bne.n	8003aba <memmove+0x2a>
 8003ab8:	bd10      	pop	{r4, pc}
 8003aba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003abe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003ac2:	e7f7      	b.n	8003ab4 <memmove+0x24>

08003ac4 <_free_r>:
_free_r():
 8003ac4:	b538      	push	{r3, r4, r5, lr}
 8003ac6:	4605      	mov	r5, r0
 8003ac8:	2900      	cmp	r1, #0
 8003aca:	d041      	beq.n	8003b50 <_free_r+0x8c>
 8003acc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003ad0:	1f0c      	subs	r4, r1, #4
 8003ad2:	2b00      	cmp	r3, #0
 8003ad4:	bfb8      	it	lt
 8003ad6:	18e4      	addlt	r4, r4, r3
 8003ad8:	f000 f8ce 	bl	8003c78 <__malloc_lock>
 8003adc:	4a1d      	ldr	r2, [pc, #116]	; (8003b54 <_free_r+0x90>)
 8003ade:	6813      	ldr	r3, [r2, #0]
 8003ae0:	b933      	cbnz	r3, 8003af0 <_free_r+0x2c>
 8003ae2:	6063      	str	r3, [r4, #4]
 8003ae4:	6014      	str	r4, [r2, #0]
 8003ae6:	4628      	mov	r0, r5
 8003ae8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003aec:	f000 b8ca 	b.w	8003c84 <__malloc_unlock>
 8003af0:	42a3      	cmp	r3, r4
 8003af2:	d908      	bls.n	8003b06 <_free_r+0x42>
 8003af4:	6820      	ldr	r0, [r4, #0]
 8003af6:	1821      	adds	r1, r4, r0
 8003af8:	428b      	cmp	r3, r1
 8003afa:	bf01      	itttt	eq
 8003afc:	6819      	ldreq	r1, [r3, #0]
 8003afe:	685b      	ldreq	r3, [r3, #4]
 8003b00:	1809      	addeq	r1, r1, r0
 8003b02:	6021      	streq	r1, [r4, #0]
 8003b04:	e7ed      	b.n	8003ae2 <_free_r+0x1e>
 8003b06:	461a      	mov	r2, r3
 8003b08:	685b      	ldr	r3, [r3, #4]
 8003b0a:	b10b      	cbz	r3, 8003b10 <_free_r+0x4c>
 8003b0c:	42a3      	cmp	r3, r4
 8003b0e:	d9fa      	bls.n	8003b06 <_free_r+0x42>
 8003b10:	6811      	ldr	r1, [r2, #0]
 8003b12:	1850      	adds	r0, r2, r1
 8003b14:	42a0      	cmp	r0, r4
 8003b16:	d10b      	bne.n	8003b30 <_free_r+0x6c>
 8003b18:	6820      	ldr	r0, [r4, #0]
 8003b1a:	4401      	add	r1, r0
 8003b1c:	1850      	adds	r0, r2, r1
 8003b1e:	4283      	cmp	r3, r0
 8003b20:	6011      	str	r1, [r2, #0]
 8003b22:	d1e0      	bne.n	8003ae6 <_free_r+0x22>
 8003b24:	6818      	ldr	r0, [r3, #0]
 8003b26:	685b      	ldr	r3, [r3, #4]
 8003b28:	6053      	str	r3, [r2, #4]
 8003b2a:	4401      	add	r1, r0
 8003b2c:	6011      	str	r1, [r2, #0]
 8003b2e:	e7da      	b.n	8003ae6 <_free_r+0x22>
 8003b30:	d902      	bls.n	8003b38 <_free_r+0x74>
 8003b32:	230c      	movs	r3, #12
 8003b34:	602b      	str	r3, [r5, #0]
 8003b36:	e7d6      	b.n	8003ae6 <_free_r+0x22>
 8003b38:	6820      	ldr	r0, [r4, #0]
 8003b3a:	1821      	adds	r1, r4, r0
 8003b3c:	428b      	cmp	r3, r1
 8003b3e:	bf04      	itt	eq
 8003b40:	6819      	ldreq	r1, [r3, #0]
 8003b42:	685b      	ldreq	r3, [r3, #4]
 8003b44:	6063      	str	r3, [r4, #4]
 8003b46:	bf04      	itt	eq
 8003b48:	1809      	addeq	r1, r1, r0
 8003b4a:	6021      	streq	r1, [r4, #0]
 8003b4c:	6054      	str	r4, [r2, #4]
 8003b4e:	e7ca      	b.n	8003ae6 <_free_r+0x22>
 8003b50:	bd38      	pop	{r3, r4, r5, pc}
 8003b52:	bf00      	nop
 8003b54:	20002ae4 	.word	0x20002ae4

08003b58 <_malloc_r>:
_malloc_r():
 8003b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b5a:	1ccd      	adds	r5, r1, #3
 8003b5c:	f025 0503 	bic.w	r5, r5, #3
 8003b60:	3508      	adds	r5, #8
 8003b62:	2d0c      	cmp	r5, #12
 8003b64:	bf38      	it	cc
 8003b66:	250c      	movcc	r5, #12
 8003b68:	2d00      	cmp	r5, #0
 8003b6a:	4606      	mov	r6, r0
 8003b6c:	db01      	blt.n	8003b72 <_malloc_r+0x1a>
 8003b6e:	42a9      	cmp	r1, r5
 8003b70:	d903      	bls.n	8003b7a <_malloc_r+0x22>
 8003b72:	230c      	movs	r3, #12
 8003b74:	6033      	str	r3, [r6, #0]
 8003b76:	2000      	movs	r0, #0
 8003b78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003b7a:	f000 f87d 	bl	8003c78 <__malloc_lock>
 8003b7e:	4921      	ldr	r1, [pc, #132]	; (8003c04 <_malloc_r+0xac>)
 8003b80:	680a      	ldr	r2, [r1, #0]
 8003b82:	4614      	mov	r4, r2
 8003b84:	b99c      	cbnz	r4, 8003bae <_malloc_r+0x56>
 8003b86:	4f20      	ldr	r7, [pc, #128]	; (8003c08 <_malloc_r+0xb0>)
 8003b88:	683b      	ldr	r3, [r7, #0]
 8003b8a:	b923      	cbnz	r3, 8003b96 <_malloc_r+0x3e>
 8003b8c:	4621      	mov	r1, r4
 8003b8e:	4630      	mov	r0, r6
 8003b90:	f000 f862 	bl	8003c58 <_sbrk_r>
 8003b94:	6038      	str	r0, [r7, #0]
 8003b96:	4629      	mov	r1, r5
 8003b98:	4630      	mov	r0, r6
 8003b9a:	f000 f85d 	bl	8003c58 <_sbrk_r>
 8003b9e:	1c43      	adds	r3, r0, #1
 8003ba0:	d123      	bne.n	8003bea <_malloc_r+0x92>
 8003ba2:	230c      	movs	r3, #12
 8003ba4:	6033      	str	r3, [r6, #0]
 8003ba6:	4630      	mov	r0, r6
 8003ba8:	f000 f86c 	bl	8003c84 <__malloc_unlock>
 8003bac:	e7e3      	b.n	8003b76 <_malloc_r+0x1e>
 8003bae:	6823      	ldr	r3, [r4, #0]
 8003bb0:	1b5b      	subs	r3, r3, r5
 8003bb2:	d417      	bmi.n	8003be4 <_malloc_r+0x8c>
 8003bb4:	2b0b      	cmp	r3, #11
 8003bb6:	d903      	bls.n	8003bc0 <_malloc_r+0x68>
 8003bb8:	6023      	str	r3, [r4, #0]
 8003bba:	441c      	add	r4, r3
 8003bbc:	6025      	str	r5, [r4, #0]
 8003bbe:	e004      	b.n	8003bca <_malloc_r+0x72>
 8003bc0:	6863      	ldr	r3, [r4, #4]
 8003bc2:	42a2      	cmp	r2, r4
 8003bc4:	bf0c      	ite	eq
 8003bc6:	600b      	streq	r3, [r1, #0]
 8003bc8:	6053      	strne	r3, [r2, #4]
 8003bca:	4630      	mov	r0, r6
 8003bcc:	f000 f85a 	bl	8003c84 <__malloc_unlock>
 8003bd0:	f104 000b 	add.w	r0, r4, #11
 8003bd4:	1d23      	adds	r3, r4, #4
 8003bd6:	f020 0007 	bic.w	r0, r0, #7
 8003bda:	1ac2      	subs	r2, r0, r3
 8003bdc:	d0cc      	beq.n	8003b78 <_malloc_r+0x20>
 8003bde:	1a1b      	subs	r3, r3, r0
 8003be0:	50a3      	str	r3, [r4, r2]
 8003be2:	e7c9      	b.n	8003b78 <_malloc_r+0x20>
 8003be4:	4622      	mov	r2, r4
 8003be6:	6864      	ldr	r4, [r4, #4]
 8003be8:	e7cc      	b.n	8003b84 <_malloc_r+0x2c>
 8003bea:	1cc4      	adds	r4, r0, #3
 8003bec:	f024 0403 	bic.w	r4, r4, #3
 8003bf0:	42a0      	cmp	r0, r4
 8003bf2:	d0e3      	beq.n	8003bbc <_malloc_r+0x64>
 8003bf4:	1a21      	subs	r1, r4, r0
 8003bf6:	4630      	mov	r0, r6
 8003bf8:	f000 f82e 	bl	8003c58 <_sbrk_r>
 8003bfc:	3001      	adds	r0, #1
 8003bfe:	d1dd      	bne.n	8003bbc <_malloc_r+0x64>
 8003c00:	e7cf      	b.n	8003ba2 <_malloc_r+0x4a>
 8003c02:	bf00      	nop
 8003c04:	20002ae4 	.word	0x20002ae4
 8003c08:	20002ae8 	.word	0x20002ae8

08003c0c <_realloc_r>:
_realloc_r():
 8003c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c0e:	4607      	mov	r7, r0
 8003c10:	4614      	mov	r4, r2
 8003c12:	460e      	mov	r6, r1
 8003c14:	b921      	cbnz	r1, 8003c20 <_realloc_r+0x14>
 8003c16:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003c1a:	4611      	mov	r1, r2
 8003c1c:	f7ff bf9c 	b.w	8003b58 <_malloc_r>
 8003c20:	b922      	cbnz	r2, 8003c2c <_realloc_r+0x20>
 8003c22:	f7ff ff4f 	bl	8003ac4 <_free_r>
 8003c26:	4625      	mov	r5, r4
 8003c28:	4628      	mov	r0, r5
 8003c2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003c2c:	f000 f830 	bl	8003c90 <_malloc_usable_size_r>
 8003c30:	42a0      	cmp	r0, r4
 8003c32:	d20f      	bcs.n	8003c54 <_realloc_r+0x48>
 8003c34:	4621      	mov	r1, r4
 8003c36:	4638      	mov	r0, r7
 8003c38:	f7ff ff8e 	bl	8003b58 <_malloc_r>
 8003c3c:	4605      	mov	r5, r0
 8003c3e:	2800      	cmp	r0, #0
 8003c40:	d0f2      	beq.n	8003c28 <_realloc_r+0x1c>
 8003c42:	4631      	mov	r1, r6
 8003c44:	4622      	mov	r2, r4
 8003c46:	f7ff fb85 	bl	8003354 <memcpy>
 8003c4a:	4631      	mov	r1, r6
 8003c4c:	4638      	mov	r0, r7
 8003c4e:	f7ff ff39 	bl	8003ac4 <_free_r>
 8003c52:	e7e9      	b.n	8003c28 <_realloc_r+0x1c>
 8003c54:	4635      	mov	r5, r6
 8003c56:	e7e7      	b.n	8003c28 <_realloc_r+0x1c>

08003c58 <_sbrk_r>:
_sbrk_r():
 8003c58:	b538      	push	{r3, r4, r5, lr}
 8003c5a:	4d06      	ldr	r5, [pc, #24]	; (8003c74 <_sbrk_r+0x1c>)
 8003c5c:	2300      	movs	r3, #0
 8003c5e:	4604      	mov	r4, r0
 8003c60:	4608      	mov	r0, r1
 8003c62:	602b      	str	r3, [r5, #0]
 8003c64:	f7fd fac8 	bl	80011f8 <_sbrk>
 8003c68:	1c43      	adds	r3, r0, #1
 8003c6a:	d102      	bne.n	8003c72 <_sbrk_r+0x1a>
 8003c6c:	682b      	ldr	r3, [r5, #0]
 8003c6e:	b103      	cbz	r3, 8003c72 <_sbrk_r+0x1a>
 8003c70:	6023      	str	r3, [r4, #0]
 8003c72:	bd38      	pop	{r3, r4, r5, pc}
 8003c74:	2000009c 	.word	0x2000009c

08003c78 <__malloc_lock>:
__malloc_lock():
 8003c78:	4801      	ldr	r0, [pc, #4]	; (8003c80 <__malloc_lock+0x8>)
 8003c7a:	f000 b811 	b.w	8003ca0 <__retarget_lock_acquire_recursive>
 8003c7e:	bf00      	nop
 8003c80:	20002aec 	.word	0x20002aec

08003c84 <__malloc_unlock>:
__malloc_unlock():
 8003c84:	4801      	ldr	r0, [pc, #4]	; (8003c8c <__malloc_unlock+0x8>)
 8003c86:	f000 b80c 	b.w	8003ca2 <__retarget_lock_release_recursive>
 8003c8a:	bf00      	nop
 8003c8c:	20002aec 	.word	0x20002aec

08003c90 <_malloc_usable_size_r>:
_malloc_usable_size_r():
 8003c90:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003c94:	1f18      	subs	r0, r3, #4
 8003c96:	2b00      	cmp	r3, #0
 8003c98:	bfbc      	itt	lt
 8003c9a:	580b      	ldrlt	r3, [r1, r0]
 8003c9c:	18c0      	addlt	r0, r0, r3
 8003c9e:	4770      	bx	lr

08003ca0 <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
 8003ca0:	4770      	bx	lr

08003ca2 <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
 8003ca2:	4770      	bx	lr
 8003ca4:	732f2e2e 	.word	0x732f2e2e
 8003ca8:	65747379 	.word	0x65747379
 8003cac:	72732f6d 	.word	0x72732f6d
 8003cb0:	74732f63 	.word	0x74732f63
 8003cb4:	6632336d 	.word	0x6632336d
 8003cb8:	61682d34 	.word	0x61682d34
 8003cbc:	74732f6c 	.word	0x74732f6c
 8003cc0:	6632336d 	.word	0x6632336d
 8003cc4:	5f787834 	.word	0x5f787834
 8003cc8:	5f6c6168 	.word	0x5f6c6168
 8003ccc:	74726f63 	.word	0x74726f63
 8003cd0:	632e7865 	.word	0x632e7865
 8003cd4:	00000000 	.word	0x00000000
 8003cd8:	732f2e2e 	.word	0x732f2e2e
 8003cdc:	65747379 	.word	0x65747379
 8003ce0:	72732f6d 	.word	0x72732f6d
 8003ce4:	74732f63 	.word	0x74732f63
 8003ce8:	6632336d 	.word	0x6632336d
 8003cec:	61682d34 	.word	0x61682d34
 8003cf0:	74732f6c 	.word	0x74732f6c
 8003cf4:	6632336d 	.word	0x6632336d
 8003cf8:	5f787834 	.word	0x5f787834
 8003cfc:	5f6c6168 	.word	0x5f6c6168
 8003d00:	6f697067 	.word	0x6f697067
 8003d04:	0000632e 	.word	0x0000632e
 8003d08:	732f2e2e 	.word	0x732f2e2e
 8003d0c:	65747379 	.word	0x65747379
 8003d10:	72732f6d 	.word	0x72732f6d
 8003d14:	74732f63 	.word	0x74732f63
 8003d18:	6632336d 	.word	0x6632336d
 8003d1c:	61682d34 	.word	0x61682d34
 8003d20:	74732f6c 	.word	0x74732f6c
 8003d24:	6632336d 	.word	0x6632336d
 8003d28:	5f787834 	.word	0x5f787834
 8003d2c:	5f6c6168 	.word	0x5f6c6168
 8003d30:	2e636372 	.word	0x2e636372
 8003d34:	00000063 	.word	0x00000063

08003d38 <APBAHBPrescTable>:
 8003d38:	00000000 04030201 04030201 09080706     ................
 8003d48:	726f6261 2c292874 69786520 676e6974     abort(), exiting
 8003d58:	002e2e2e 65737361 705f7472 6d617261     ....assert_param
 8003d68:	66202928 656c6961 66203a64 20656c69     () failed: file 
 8003d78:	22732522 696c202c 2520656e 00000a64     "%s", line %d...
 8003d88:	63617453 7266206b 3a656d61 0000000a     Stack frame:....
 8003d98:	20305220 2520203d 0a583830 00000000      R0 =  %08X.....
 8003da8:	20315220 2520203d 0a583830 00000000      R1 =  %08X.....
 8003db8:	20325220 2520203d 0a583830 00000000      R2 =  %08X.....
 8003dc8:	20335220 2520203d 0a583830 00000000      R3 =  %08X.....
 8003dd8:	32315220 25203d20 0a583830 00000000      R12 = %08X.....
 8003de8:	20524c20 2520203d 0a583830 00000000      LR =  %08X.....
 8003df8:	20435020 2520203d 0a583830 00000000      PC =  %08X.....
 8003e08:	52535020 25203d20 0a583830 00000000      PSR = %08X.....
 8003e18:	2f525346 3a524146 0000000a 53464320     FSR/FAR:.... CFS
 8003e28:	203d2052 38302520 00000a58 53464820     R =  %08X... HFS
 8003e38:	203d2052 38302520 00000a58 53464420     R =  %08X... DFS
 8003e48:	203d2052 38302520 00000a58 53464120     R =  %08X... AFS
 8003e58:	203d2052 38302520 00000a58 464d4d20     R =  %08X... MMF
 8003e68:	3d205241 38302520 00000a58 41464220     AR = %08X... BFA
 8003e78:	203d2052 38302520 00000a58 6373694d     R =  %08X...Misc
 8003e88:	0000000a 2f524c20 5f435845 55544552     .... LR/EXC_RETU
 8003e98:	203d4e52 58383025 0000000a 7261485b     RN= %08X....[Har
 8003ea8:	75614664 0a5d746c 00000000 7375425b     dFault].....[Bus
 8003eb8:	6c756146 000a5d74 6173555b 61466567     Fault]..[UsageFa
 8003ec8:	5d746c75 0000000a 74696157 726f6620     ult]....Wait for
 8003ed8:	52534920 6d657320 6f687061 00006572      ISR semaphore..
 8003ee8:	616d6553 726f6870 69672065 006e6576     Semaphore given.
 8003ef8:	656d6954 7525203a 0a752509 00000000     Time: %u.%u.....
 8003f08:	74737953 63206d65 6b636f6c 7525203a     System clock: %u
 8003f18:	0a7a4820 00000000 6b736174 00000042      Hz.....taskB...
 8003f28:	49545845 0000000a 662f2e2e 72656572     EXTI....../freer
 8003f38:	2f736f74 74726f70 656c6261 4343472f     tos/portable/GCC
 8003f48:	4d52412f 334d435f 726f702f 00632e74     /ARM_CM3/port.c.
 8003f58:	662f2e2e 72656572 2f736f74 75657571     ../freertos/queu
 8003f68:	00632e65 662f2e2e 72656572 2f736f74     e.c.../freertos/
 8003f78:	6b736174 00632e73 454c4449 00000000     tasks.c.IDLE....

08003f88 <ucExpectedStackBytes.0>:
 8003f88:	a5a5a5a5 a5a5a5a5 a5a5a5a5 a5a5a5a5     ................
 8003f98:	a5a5a5a5 662f2e2e 72656572 2f736f74     ....../freertos/
 8003fa8:	656d6974 632e7372 00000000 51726d54     timers.c....TmrQ
 8003fb8:	00000000 20726d54 00637653 2b302d23     ....Tmr Svc.#-0+
 8003fc8:	6c680020 6665004c 47464567 32313000      .hlL.efgEFG.012
 8003fd8:	36353433 41393837 45444342 31300046     3456789ABCDEF.01
 8003fe8:	35343332 39383736 64636261               23456789abcdef.
